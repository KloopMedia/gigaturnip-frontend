{"version":3,"sources":["util/Firebase.js","components/nodes/CustomNode.tsx","components/nodes/LogicNode.tsx","components/nodes/StageNode.tsx","components/sidebar/Sidebar.tsx","util/Axios.js","util/Urls.js","components/graph/Graph.tsx","components/form-builders/PreviewStage.tsx","components/form-builders/StageBuilder.tsx","components/form-builders/LogicBuilder.tsx","components/actions/Actions.tsx","components/task/Task.tsx","util/Auth.js","components/appbar/Appbar.tsx","components/chains/ChainCard.tsx","components/chains/Dialog.tsx","components/chains/Chains.tsx","components/campaigns/CampaignCard.tsx","components/campaigns/Dialog.tsx","components/campaigns/Campaigns.tsx","components/appbar/SimpleAppbar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","provider","auth","GoogleAuthProvider","firestore","settings","ignoreUndefinedProperties","signInWithGoogle","setCustomParameters","prompt","signInWithPopup","signOut","useStyles","makeStyles","theme","createStyles","root","background","borderColor","borderWidth","borderStyle","borderRadius","fontSize","width","textAlign","padding","CustomNode","data","style","classes","Grid","className","label","type","position","Position","Top","Bottom","customNodeStyles","CustomLogicNode","CustomStageNode","Sidebar","useState","draggable","setDraggable","formResponses","setFormResponses","useEffect","onDragStart","event","nodeLabel","nodeType","console","log","JSON","stringify","dataTransfer","setData","effectAllowed","onDragEnd","undefined","marginRight","schema","formData","onChange","e","color","display","justifyContent","alignItems","instance","axios","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","error","Promise","reject","campaignsUrl","chainsUrl","taskstagesUrl","conditionalstagesUrl","tasksUrl","DnDFlow","reactFlowWrapper","useRef","history","useHistory","useParams","chainId","campaignId","reactFlowInstance","setReactFlowInstance","elements","setElements","all","get","then","results","stageNodes","logicNodes","forEach","node","allNodes","filter","chain","nodes","map","id","toString","x","parseFloat","x_pos","y","y_pos","name","stage","in_stages","length","sourceId","edge","source","target","arrowHeadType","els","addEdge","getNode","pop","getTypeUrl","onConnect","params","a","newParams","targetNode","url","res","catch","err","connections","parsed","connection","patch","removeConnections","oldConnections","newConnections","onDrop","preventDefault","reactFlowBounds","current","getBoundingClientRect","transfer","getData","project","clientX","left","clientY","top","parsedData","parse","createNode","newNode","es","concat","updateNode","node_type","post","onElementDoubleClick","element","location","pathname","push","nodeTypes","LOGIC","STAGE","ref","onElementsRemove","elementsToRemove","nodeIdsToRemove","n","edgeElement","includes","hasOwnProperty","delete","removeElements","onNodeDoubleClick","onEdgeDoubleClick","onLoad","_reactFlowInstance","onDragOver","dropEffect","onNodeDragStop","height","Preview","jsonSchema","uiSchema","json_schema","ui_schema","minWidth","margin","onSubmit","Builder","setSchema","setUiSchema","StageOptions","optionsSchema","preview","setPreview","options","parse_json_schema","parse_ui_schema","IconButton","float","onClick","p","PreviewStage","uischema","newSchema","newUiSchema","alert","ready","properties","logic_array","items","title","field","condition","enum","value","dependencies","required","connectedStages","setConnectedStages","getStage","stageId","taskStage","getConnectedStages","ids","connId","currentStage","connectedIds","connStages","formControl","spacing","selectEmpty","marginTop","React","handleCreateTask","split","caseData","case","taskData","container","justify","component","item","Button","task","responses","setFormData","AuthContext","createContext","AuthProvider","children","currentUser","setCurrentUser","onAuthStateChanged","user","getIdToken","idToken","setItem","Provider","drawerWidth","appBar","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","toolbar","mixins","content","flexGrow","select","selectIcon","fill","Appbar","props","useTheme","useContext","open","setOpen","campaign","setCampaign","allCampaigns","setAllCampaigns","CssBaseline","AppBar","clsx","Toolbar","aria-label","Typography","variant","noWrap","FormControl","size","Select","autoWidth","labelId","disableUnderline","inputProps","icon","camp","MenuItem","Drawer","paper","direction","Divider","List","ListItem","button","page","ListItemIcon","ListItemText","primary","extra","marginBottom","ChainCard","description","Card","CardContent","gutterBottom","CardActions","avatar","backgroundColor","blue","AddChainDialog","onClose","onSave","setName","setDescription","handleClose","Dialog","aria-labelledby","DialogTitle","DialogContent","TextField","fullWidth","multiline","rows","DialogActions","parsedCampaign","parseInt","chains","setChains","filtered","handleAddChain","window","reload","startIcon","AddCampaignDialog","campaigns","setCampaigns","handleCampaignAdd","App","path","exact","StageBuilder","LogicBuilder","Task","Actions","Chains","Graph","SimpleAppbar","Campaigns","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.431c0349.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCXiwOUNsbzKH7sbSAZrqA9f7VOeCMdUOQ\",\r\n    authDomain: \"gigaturnip-b6b5b.firebaseapp.com\",\r\n    projectId: \"gigaturnip-b6b5b\",\r\n    storageBucket: \"gigaturnip-b6b5b.appspot.com\",\r\n    messagingSenderId: \"414429242328\",\r\n    appId: \"1:414429242328:web:a4685f5ac6895ea767c8ad\",\r\n    measurementId: \"G-Y8JTEJMTET\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n// const db = firebase.firestore();\r\n// if (window.location.hostname === \"localhost\") {\r\n//   db.useEmulator(\"localhost\", 8080);\r\n// }\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nfirebase.firestore().settings({\r\n    ignoreUndefinedProperties: true,\r\n})\r\nexport const signInWithGoogle = () => {\r\n    provider.setCustomParameters({\r\n        prompt: 'select_account'\r\n    });\r\n    firebase.auth().signInWithPopup(provider);\r\n};\r\n\r\nexport const signOut = () => {\r\n    firebase.auth().signOut()\r\n}\r\n\r\nexport default firebase;","import React from 'react';\r\nimport {Handle, Position} from 'react-flow-renderer';\r\nimport {createStyles, Grid, makeStyles, Theme} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            background: '#FFF',\r\n            borderColor: '#000',\r\n            borderWidth: '1px',\r\n            borderStyle: 'solid',\r\n            borderRadius: '3px',\r\n            fontSize: '12px',\r\n            width: '150px',\r\n            textAlign: 'center',\r\n            padding: 10\r\n        },\r\n    }));\r\n\r\ntype NodeProps = { data: {label: string}, style: object }\r\n\r\nconst CustomNode = ({data, style}: NodeProps) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid className={classes.root} style={style}>\r\n            <div>{data.label}</div>\r\n            <Handle\r\n                type=\"target\"\r\n                position={Position.Top}\r\n                style={{borderRadius: '100%'}}\r\n            />\r\n            <Handle\r\n                type=\"source\"\r\n                position={Position.Bottom}\r\n                style={{borderRadius: '100%'}}\r\n            />\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default CustomNode","import React from 'react';\r\nimport CustomNode from \"./CustomNode\";\r\n\r\nconst customNodeStyles = {\r\n  borderColor: '#0041d0'\r\n};\r\n\r\ntype NodeProps = { data: {label: string} }\r\n\r\nconst CustomLogicNode = ({ data }: NodeProps) => <CustomNode data={data} style={customNodeStyles} />;\r\n\r\nexport default CustomLogicNode","import React from 'react';\r\nimport CustomNode from \"./CustomNode\";\r\n\r\nconst customNodeStyles = {\r\n  borderColor: '#32CD32'\r\n};\r\n\r\ntype NodeProps = { data: {label: string} }\r\n\r\nconst CustomStageNode = ({ data }: NodeProps) => <CustomNode data={data} style={customNodeStyles} />;\r\n\r\nexport default CustomStageNode","import React, {useEffect, useState} from 'react';\r\nimport firebase from '../../util/Firebase'\r\nimport Form from \"@rjsf/bootstrap-4\";\r\nimport {JSONSchema7} from \"json-schema\";\r\n\r\nimport schema from '../../json-schema/SidebarSchema.json'\r\n\r\ntype FormResponsesProps = { label: string }\r\n\r\nconst Sidebar = () => {\r\n    const [draggable, setDraggable] = useState(false)\r\n    const [formResponses, setFormResponses] = useState<FormResponsesProps | undefined>()\r\n\r\n    useEffect(() => {\r\n\r\n        if (formResponses && formResponses.label && formResponses.label !== '') {\r\n            setDraggable(true)\r\n        } else {\r\n            setDraggable(false)\r\n        }\r\n    }, [formResponses])\r\n\r\n    const onDragStart = (event: { dataTransfer: DataTransfer }, nodeLabel: string, nodeType: string) => {\r\n        console.log(nodeLabel, nodeType)\r\n        let data = JSON.stringify({...formResponses, type: nodeType})\r\n        event.dataTransfer.setData('application/reactflow', data);\r\n        event.dataTransfer.effectAllowed = 'move';\r\n    };\r\n\r\n    const onDragEnd = () => {\r\n        setFormResponses(undefined)\r\n    }\r\n\r\n    return (\r\n        <aside>\r\n            <div className=\"description\">You can drag these nodes to the pane on the right.</div>\r\n            <div style={{marginRight: 5}}>\r\n                <Form schema={schema as JSONSchema7} formData={formResponses} onChange={(e) => setFormResponses(e.formData)}> </Form>\r\n            </div>\r\n            <div draggable={false} style={{\r\n                color: 'red',\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n                padding: 10\r\n            }}>{!draggable && 'Enter Label to drag the node'}</div>\r\n            <div className=\"dndnode stage\" onDragEnd={onDragEnd}\r\n                 onDragStart={(event) => onDragStart(event, formResponses ? formResponses.label : '', 'STAGE')} draggable={draggable}>\r\n                Stage Node\r\n            </div>\r\n            <div className=\"dndnode logic\" onDragEnd={onDragEnd}\r\n                 onDragStart={(event) => onDragStart(event, formResponses ? formResponses.label : '', 'LOGIC')} draggable={draggable}>\r\n                Logic Node\r\n            </div>\r\n        </aside>\r\n    );\r\n};\r\n\r\nexport default Sidebar","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"http://127.0.0.1:8000\"\r\n});\r\n\r\ninstance.interceptors.request.use(\r\n  function(config) {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      config.headers[\"Authorization\"] = 'JWT ' + token;\r\n    }\r\n    return config;\r\n  },\r\n  function(error) {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default instance;","const campaignsUrl = \"api/v1/campaigns/\"\r\nconst chainsUrl = \"api/v1/chains/\"\r\nconst taskstagesUrl = \"api/v1/taskstages/\"\r\nconst webhookstagesUrl = \"api/v1/webhookstages/\"\r\nconst conditionalstagesUrl = \"api/v1/conditionalstages/\"\r\nconst casesUrl = \"api/v1/cases/\"\r\nconst tasksUrl = \"api/v1/tasks/\"\r\n\r\nexport {\r\n    campaignsUrl,\r\n    chainsUrl,\r\n    taskstagesUrl,\r\n    webhookstagesUrl,\r\n    conditionalstagesUrl,\r\n    casesUrl,\r\n    tasksUrl\r\n}","import React, {useEffect, useRef, useState} from 'react';\r\nimport ReactFlow, {addEdge, Controls, FlowElement, ReactFlowProvider, Edge} from 'react-flow-renderer';\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport firebase from '../../util/Firebase'\r\nimport CustomLogicNode from '../nodes/LogicNode'\r\nimport CustomStageNode from '../nodes/StageNode'\r\nimport Sidebar from '../sidebar/Sidebar';\r\n\r\nimport '../../dnd.css';\r\nimport axios from '../../util/Axios';\r\nimport {conditionalstagesUrl, taskstagesUrl} from '../../util/Urls'\r\n\r\ntype RouterParams = { chainId: string, campaignId: string }\r\n\r\nconst DnDFlow = () => {\r\n    const reactFlowWrapper = useRef(null);\r\n    const history = useHistory();\r\n    const {chainId, campaignId} = useParams<RouterParams>();\r\n\r\n    const [reactFlowInstance, setReactFlowInstance] = useState(null);\r\n    const [elements, setElements] = useState<FlowElement[]>([]);\r\n\r\n    useEffect(() => {\r\n        const getStageNodes = () => {\r\n            return axios.get(taskstagesUrl)\r\n        };\r\n\r\n        const getLogicNodes = () => {\r\n            return axios.get(conditionalstagesUrl)\r\n        };\r\n\r\n        Promise.all([getStageNodes(), getLogicNodes()])\r\n            .then((results) => {\r\n                const stageNodes = results[0].data;\r\n                const logicNodes = results[1].data;\r\n                stageNodes.forEach((node: any) => node.type = \"STAGE\")\r\n                logicNodes.forEach((node: any) => node.type = \"LOGIC\")\r\n                const allNodes = [...stageNodes, ...logicNodes].filter((node: any) => node.chain == chainId)\r\n                const nodes: FlowElement[] = allNodes.map((node: any) => (\r\n                        {\r\n                            id: node.id.toString(),\r\n                            position: {x: parseFloat(node.x_pos), y: parseFloat(node.y_pos)},\r\n                            data: {label: node.name},\r\n                            type: node.type\r\n                        }\r\n                    )\r\n                )\r\n                setElements(nodes)\r\n                return allNodes\r\n            }).then(allNodes => {\r\n            allNodes.forEach(stage => {\r\n                if (stage.in_stages.length > 0) {\r\n                    stage.in_stages.forEach((sourceId: string | number) => {\r\n                        const edge = {\r\n                            source: sourceId.toString(),\r\n                            target: stage.id.toString(),\r\n                            id: `${sourceId}-${stage.id}`,\r\n                            arrowHeadType: \"arrow\"\r\n                        } as Edge\r\n                        setElements((els) => addEdge(edge, els))\r\n                    })\r\n                }\r\n            })\r\n        })\r\n    }, [])\r\n\r\n    const getNode = (id: string | number) => {\r\n        return elements.filter(node => node.id == id).pop()\r\n    }\r\n\r\n    const getTypeUrl = (node: FlowElement) => {\r\n        if (node.type == \"STAGE\") {\r\n            return taskstagesUrl\r\n        }\r\n        if (node.type == \"LOGIC\") {\r\n            return conditionalstagesUrl\r\n        }\r\n        return undefined\r\n    }\r\n\r\n    const onConnect = async (params: object) => {\r\n        const newParams: any = {...params, arrowHeadType: 'arrow'}\r\n        const targetNode = getNode(newParams.target)\r\n        const source = newParams.source\r\n\r\n        setElements((els: FlowElement[]) => addEdge(newParams, els))\r\n\r\n        if (targetNode) {\r\n            const url = getTypeUrl(targetNode)\r\n            if (url) {\r\n                const connections = await axios.get(url + targetNode.id).then(res => res.data.in_stages).catch(err => undefined)\r\n                if (connections) {\r\n                    const parsed = connections.map((connection: string | number) => connection.toString())\r\n                    const data = {in_stages: [source, ...parsed]}\r\n                    axios.patch(url + targetNode.id, data)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const removeConnections = async (target: string, source: string) => {\r\n        const node = getNode(target)\r\n        if (node) {\r\n            const url = getTypeUrl(node)\r\n            if (url) {\r\n                let connections = await axios.get(url + node.id).then(res => res.data.in_stages).catch(err => undefined)\r\n                if (connections) {\r\n                    let oldConnections = connections.map((connection: string | number) => connection.toString())\r\n                    let newConnections = oldConnections.filter((connection: string) => connection !== source)\r\n                    let data = {in_stages: newConnections}\r\n                    axios.patch(url + node.id, data)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const removeElements = (elementsToRemove: FlowElement[], elements: FlowElement[]) => {\r\n        let nodeIdsToRemove = elementsToRemove.map((n: any) => {\r\n            return n.id;\r\n        });\r\n\r\n        return elements.filter((element: any) => {\r\n            let edgeElement = element;\r\n            if (nodeIdsToRemove.includes(element.id) || nodeIdsToRemove.includes(edgeElement.target) || nodeIdsToRemove.includes(edgeElement.source)) {\r\n                if (element.hasOwnProperty('source') && element.hasOwnProperty('target')) {\r\n                    let target = element.target\r\n                    let source = element.source\r\n\r\n                    removeConnections(target, source)\r\n\r\n                } else {\r\n                    const url = getTypeUrl(element)\r\n                    if (url) {\r\n                        axios.delete(url + element.id)\r\n                    }\r\n                }\r\n                return false\r\n            } else {\r\n                return true\r\n            }\r\n        });\r\n    };\r\n\r\n    const onElementsRemove = (elementsToRemove: FlowElement[]) => {\r\n        setElements((els) => removeElements(elementsToRemove, els));\r\n    }\r\n\r\n    const onLoad = (_reactFlowInstance: any) =>\r\n        setReactFlowInstance(_reactFlowInstance);\r\n\r\n    const onDragOver = (event: any) => {\r\n        event.preventDefault();\r\n        event.dataTransfer.dropEffect = 'move';\r\n    };\r\n\r\n    const onDrop = async (event: any) => {\r\n        event.preventDefault();\r\n\r\n        // @ts-ignore\r\n        const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\r\n        const transfer = event.dataTransfer.getData('application/reactflow');\r\n        // @ts-ignore\r\n        const position = reactFlowInstance.project({\r\n            x: event.clientX - reactFlowBounds.left,\r\n            y: event.clientY - reactFlowBounds.top,\r\n        });\r\n\r\n        const parsedData = JSON.parse(transfer)\r\n        const label = parsedData.label\r\n        const type = parsedData.type\r\n\r\n        const id = await createNode({type, position, label})\r\n\r\n        let newNode = {\r\n            id,\r\n            type,\r\n            position,\r\n            data: {label},\r\n        };\r\n\r\n        setElements((es) => es.concat(newNode));\r\n    };\r\n\r\n    const onNodeDragStop = (event: any, node: any) => {\r\n        updateNode(node)\r\n    }\r\n\r\n    const updateNodeInFirebase = (node: any) => {\r\n        firebase.firestore().collection('flow').doc(node.id).set(node, {merge: true})\r\n    }\r\n\r\n    const updateNode = (node: any) => {\r\n        let x_pos = node.position.x\r\n        let y_pos = node.position.y\r\n        let data = {x_pos, y_pos}\r\n        const url = getTypeUrl(node)\r\n        if (url) {\r\n            axios.patch(url + node.id, data)\r\n        }\r\n    }\r\n\r\n    const createNode = async (node: any) => {\r\n        let data = {\r\n            node_type: node.type,\r\n            name: node.label,\r\n            x_pos: node.position.x,\r\n            y_pos: node.position.y,\r\n            chain: chainId\r\n        }\r\n\r\n        const url = getTypeUrl(node)\r\n        if (url) {\r\n            let res = await axios.post(url, data)\r\n            return res.data.id.toString()\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    const onElementDoubleClick = (event: any, element: any) => {\r\n        console.log(element)\r\n        let location = history.location.pathname\r\n        if (element.id) {\r\n            if (element.type === 'LOGIC') {\r\n                history.push(`${location}/createlogic/${element.id}`)\r\n            }\r\n            if (element.type === 'STAGE') {\r\n                // history.push('/createStage/' + element.id)\r\n                history.push(`${location}/actions/${element.id}`)\r\n            }\r\n            if (element.type === 'default' && (element.target || element.source)) {\r\n                console.log('edge')\r\n            }\r\n        }\r\n    }\r\n\r\n    const nodeTypes = {\r\n        LOGIC: CustomLogicNode,\r\n        STAGE: CustomStageNode\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"dndflow\">\r\n            <ReactFlowProvider>\r\n                <div className=\"reactflow-wrapper\" ref={reactFlowWrapper}>\r\n                    <ReactFlow\r\n                        nodeTypes={nodeTypes}\r\n                        elements={elements}\r\n                        onConnect={onConnect}\r\n                        onElementsRemove={onElementsRemove}\r\n                        onNodeDoubleClick={onElementDoubleClick}\r\n                        onEdgeDoubleClick={onElementDoubleClick}\r\n                        onLoad={onLoad}\r\n                        onDrop={onDrop}\r\n                        onDragOver={onDragOver}\r\n                        onNodeDragStop={onNodeDragStop}\r\n                        style={{\r\n                            width: '100%',\r\n                            height: 700,\r\n                        }}\r\n                    >\r\n                        <Controls/>\r\n                    </ReactFlow>\r\n                </div>\r\n                <Sidebar/>\r\n            </ReactFlowProvider>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DnDFlow;","import React from 'react'\r\nimport Form from \"@rjsf/bootstrap-4\";\r\n\r\ntype FormProps = {jsonSchema: string, uiSchema: string}\r\n\r\nconst Preview = ({jsonSchema, uiSchema}: FormProps) => {\r\n    const json_schema = JSON.parse(jsonSchema)\r\n    const ui_schema = JSON.parse(uiSchema)\r\n    return (\r\n        <div style={{width: '70%', minWidth: '400px', margin: '0 auto', display: 'block', padding: 10}}>\r\n            <Form\r\n                schema={json_schema}\r\n                uiSchema={ui_schema}\r\n                onSubmit={(formData) => console.log(formData.formData)}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preview","import React, {useEffect, useState} from \"react\";\r\n// @ts-ignore\r\nimport {FormBuilder} from '@ginkgo-bioworks/react-json-schema-form-builder';\r\nimport Form from \"@rjsf/bootstrap-4\";\r\nimport StageOptions from '../../json-schema/StageOptions_v2.json'\r\nimport {useParams} from \"react-router-dom\";\r\nimport {JSONSchema7} from \"json-schema\";\r\nimport PreviewStage from './PreviewStage'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from \"../../util/Axios\";\r\nimport {chainsUrl, taskstagesUrl} from \"../../util/Urls\";\r\nimport {IconButton} from \"@material-ui/core\";\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\n\r\ntype RouterParams = { id: string, chainId: string }\r\ntype ChainProps = { id: number, name: string, description: string, campaign: number }\r\n\r\nconst Builder = () => {\r\n    let {id, chainId} = useParams<RouterParams>();\r\n\r\n    const [schema, setSchema] = useState('')\r\n    const [uiSchema, setUiSchema] = useState('')\r\n    const [optionsSchema, setOptionsSchema] = useState(StageOptions)\r\n    const [formResponses, setFormResponses] = useState({})\r\n    const [preview, setPreview] = useState(false)\r\n\r\n    useEffect(() => {\r\n        const getStage = () => {\r\n            axios.get(taskstagesUrl + id)\r\n                .then(res => res.data)\r\n                .then(res => {\r\n                    const {id, json_schema, ui_schema, ...options} = res\r\n                    let parse_json_schema = JSON.stringify(json_schema)\r\n                    let parse_ui_schema = JSON.stringify(ui_schema)\r\n                    setSchema(parse_json_schema)\r\n                    setUiSchema(parse_ui_schema)\r\n                    setFormResponses(options)\r\n                })\r\n        }\r\n        if (id) {\r\n            getStage()\r\n        }\r\n    }, [id])\r\n\r\n    const handleSubmit = () => {\r\n        let json_schema = null\r\n        let ui_schema = null\r\n        if (schema && uiSchema) {\r\n            json_schema = JSON.parse(schema)\r\n            ui_schema = JSON.parse(uiSchema)\r\n        }\r\n\r\n        let data = {...formResponses, json_schema: json_schema, ui_schema: ui_schema}\r\n        console.log(data)\r\n\r\n        axios\r\n            .patch(taskstagesUrl + id, data)\r\n            .then((res: any) => console.log(res.data))\r\n            .catch((err: any) => alert(err));\r\n    }\r\n\r\n    const changePreviewMode = () => {\r\n        setPreview(p => !p)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <IconButton style={{float: 'right'}} onClick={changePreviewMode}>\r\n                {!preview ?\r\n                    <VisibilityIcon fontSize={\"large\"} />\r\n                    :\r\n                    <VisibilityOffIcon fontSize={\"large\"} />\r\n                }\r\n\r\n            </IconButton>\r\n            {!preview ?\r\n                <div>\r\n                    <FormBuilder\r\n                        schema={schema}\r\n                        uischema={uiSchema}\r\n                        onChange={(newSchema: string, newUiSchema: string) => {\r\n                            setSchema(newSchema)\r\n                            setUiSchema(newUiSchema)\r\n                        }}\r\n                    />\r\n                    <div style={{width: '70%', minWidth: '400px', margin: '0 auto', display: 'block', padding: 10}}>\r\n                        <Form\r\n                            schema={optionsSchema as JSONSchema7}\r\n                            formData={formResponses}\r\n                            onChange={(e: { formData: object }) => setFormResponses(e.formData)}\r\n                            onSubmit={handleSubmit}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                :\r\n                <PreviewStage jsonSchema={schema} uiSchema={uiSchema}/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Builder\r\n\r\n\r\n","import React, {useEffect, useState} from \"react\";\r\nimport firebase from '../../util/Firebase'\r\nimport Form from \"@rjsf/bootstrap-4\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {JSONSchema7} from \"json-schema\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Grid} from \"@material-ui/core\";\r\nimport axios from '../../util/Axios'\r\nimport {conditionalstagesUrl, taskstagesUrl} from \"../../util/Urls\";\r\n\r\ntype RouterParams = { id: string }\r\n\r\nconst Builder = () => {\r\n    const {id} = useParams<RouterParams>();\r\n\r\n    const [ready, setReady] = useState(false)\r\n    const [schema, setSchema] = useState({\r\n        type: 'object',\r\n        properties: {\r\n            logic_array: {\r\n                items: {\r\n                    type: 'object',\r\n                    title: 'Logic',\r\n                    properties: {\r\n                        field: {\r\n                            title: 'Field',\r\n                            type: 'string'\r\n                        },\r\n                        condition: {\r\n                            enum: [\r\n                                '==',\r\n                                '!=',\r\n                                '>',\r\n                                '<',\r\n                                '>=',\r\n                                '<='\r\n                            ],\r\n                            title: 'Condition',\r\n                            type: 'string'\r\n                        },\r\n                        value: {\r\n                            title: 'Value',\r\n                            type: 'string'\r\n                        }\r\n                    },\r\n                    dependencies: {},\r\n                    required: []\r\n                },\r\n                title: 'Logic Array',\r\n                type: 'array'\r\n            }\r\n        },\r\n        dependencies: {},\r\n        required: []\r\n    })\r\n    const [uiSchema, setUiSchema] = useState({\r\n        logic_array: {\r\n            items: {\r\n                'ui:order': [\r\n                    'field',\r\n                    'condition',\r\n                    'value'\r\n                ]\r\n            }\r\n        },\r\n        'ui:order': [\r\n            'logic_array'\r\n        ]\r\n    })\r\n    const [formResponses, setFormResponses] = useState({})\r\n    const [connectedStages, setConnectedStages] = useState<any[]>()\r\n\r\n\r\n    useEffect(() => {\r\n        // firebase.firestore().collection('flow-edges').where('target', '==', id).get().then(edges => {\r\n        //     edges.forEach(edge => {\r\n        //         let source = edge.data().source\r\n        //         firebase.firestore().collection('stage').doc(source).get().then(doc => {\r\n        //             if (doc && doc.exists) {\r\n        //                 let data = doc.data()\r\n        //                 if (data && data.hasOwnProperty('end_ui')) {\r\n        //                     let end_ui = JSON.parse(data.end_ui)\r\n        //                     if (end_ui.hasOwnProperty('ui:order')) {\r\n        //                         console.log(end_ui['ui:order'])\r\n        //                         setSchema(ps => {\r\n        //                             let ns = {...ps}\r\n        //                             ns.properties.field.enum = end_ui['ui:order']\r\n        //                             console.log(ns)\r\n        //                             return ns\r\n        //                         })\r\n        //                         setReady(true)\r\n        //                     }\r\n        //                 }\r\n        //             }\r\n        //         })\r\n        //     })\r\n        // })\r\n        // setReady(true)\r\n        // firebase.firestore().collection('flow-logic').doc(id).get().then(doc => {\r\n        //     if (doc && doc.exists) {\r\n        //         let data = doc.data()\r\n        //         if (data) {\r\n        //             setFormResponses(data)\r\n        //         }\r\n        //     }\r\n        // })\r\n        const getStage = (stageId?: number | string) => {\r\n            if (stageId) {\r\n                let taskStage = axios.get(taskstagesUrl + stageId).then(res => res.data)\r\n                if (taskStage) {\r\n                    return taskStage\r\n                } else {\r\n                    return axios.get(conditionalstagesUrl + stageId).then(res => res.data)\r\n                }\r\n            }\r\n            return axios.get(conditionalstagesUrl + id).then(res => res.data)\r\n        }\r\n\r\n        const getConnectedStages = async (ids: number[]) => {\r\n            return ids.map(async connId => {\r\n                let stage = await getStage(connId)\r\n                return {[connId]: stage}\r\n            })\r\n        }\r\n\r\n        const getData = async () => {\r\n            let currentStage = await getStage()\r\n            let connectedIds = currentStage.in_stages\r\n            let connStages = await getConnectedStages(connectedIds)\r\n            Promise.all(connStages).then(res => {\r\n                setConnectedStages(res)\r\n            })\r\n        }\r\n\r\n        if (id) {\r\n            getData()\r\n        }\r\n\r\n    }, [id])\r\n\r\n    useEffect(() => {\r\n        if (connectedStages && connectedStages.length > 0) {\r\n            console.log(connectedStages)\r\n            connectedStages.forEach(stage => {\r\n                let json_schema = stage.json_schema\r\n                let ui_schema = stage.ui_schema\r\n            })\r\n        }\r\n    }, [connectedStages])\r\n\r\n    const handleSubmit = () => {\r\n        console.log(JSON.stringify(formResponses))\r\n    }\r\n\r\n    return (\r\n        <div style={{width: '70%', minWidth: '400px', margin: '0 auto', display: 'block', padding: 10}}>\r\n            {ready ?\r\n                <Form\r\n                    schema={schema as JSONSchema7}\r\n                    formData={formResponses}\r\n                    onChange={(e: { formData: object }) => setFormResponses(e.formData)}\r\n                    onSubmit={handleSubmit}/>\r\n                :\r\n                <p>No node connection or end_ui detected. Connect to one or check if form has fields.</p>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Builder\r\n\r\n\r\n","import React, {useEffect, useState} from \"react\";\r\nimport firebase from '../../util/Firebase'\r\nimport {\r\n    useHistory,\r\n    useParams\r\n} from \"react-router-dom\";\r\n\r\nimport {\r\n    Button,\r\n    FormControl,\r\n    Grid,\r\n    Select,\r\n    InputLabel,\r\n    MenuItem,\r\n    createStyles,\r\n    makeStyles,\r\n    Theme\r\n} from '@material-ui/core'\r\nimport axios from \"../../util/Axios\";\r\n\r\nimport {casesUrl, tasksUrl} from '../../util/Urls'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        formControl: {\r\n            margin: theme.spacing(1),\r\n            minWidth: 150,\r\n        },\r\n        selectEmpty: {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n    }));\r\n\r\ntype RouterParams = { id: string, chainId: string }\r\n\r\nconst Builder = () => {\r\n    const [taskExist, setTaskExist] = useState(false)\r\n    const [presets, setPresets] = useState<string[]>([])\r\n    const [showPresets, setShowPresets] = useState(false)\r\n\r\n    let {id, chainId} = useParams<RouterParams>();\r\n    const history = useHistory();\r\n\r\n    const classes = useStyles();\r\n    const [presetId, setPresetId] = React.useState('');\r\n\r\n    const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n        const preset = event.target.value as string\r\n        firebase.firestore().collection('presets').doc(preset).get().then(doc => {\r\n            if (doc && doc.exists) {\r\n                let data = doc.data()\r\n                if (data) {\r\n                    firebase.firestore().collection('stage').doc(id).set(data, {merge: true})\r\n                        .then(() => history.push('/createStage/' + id))\r\n                }\r\n            }\r\n        })\r\n        setPresetId(preset);\r\n        console.log(\"PRESET\", preset)\r\n    };\r\n\r\n    const handleCreateStage = () => {\r\n        let location = history.location.pathname.split('/actions')[0]\r\n        console.log(location)\r\n        history.push(`${location}/createstage/${id}`)\r\n    }\r\n\r\n    const handleCreateTask = async () => {\r\n        let location = history.location.pathname.split('/actions')[0]\r\n        let caseData = await axios.post(casesUrl, {chain: chainId})\r\n            .then(res => res.data)\r\n        console.log(caseData)\r\n        let taskData = await axios.post(tasksUrl, {case: caseData.id, stage: id})\r\n            .then(res => res.data)\r\n        console.log(taskData)\r\n        history.push(`${location}/task/${taskData.id}`)\r\n    }\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid container justify=\"center\" style={{background: '#7FB3D5'}} component={\"div\"}>\r\n                <Grid item style={{margin: 20}}><Button onClick={handleCreateStage}>Create Form</Button></Grid>\r\n                <Grid item style={{margin: 20}}><Button onClick={handleCreateTask}>Create Task (for\r\n                    test)</Button></Grid>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Builder","import React, {useEffect, useState} from \"react\";\r\nimport Form from \"@rjsf/bootstrap-4\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport axios from \"../../util/Axios\";\r\nimport {casesUrl, taskstagesUrl, tasksUrl} from '../../util/Urls'\r\n\r\ntype RouterParams = { id: string }\r\n\r\nconst Builder = () => {\r\n    const [schema, setSchema] = useState({})\r\n    const [uiSchema, setUiSchema] = useState({})\r\n    const [formResponses, setFormResponses] = useState({})\r\n    let {id} = useParams<RouterParams>();\r\n\r\n    useEffect(() => {\r\n        const getTask = () => {\r\n            return axios.get(tasksUrl + id).then(res => res.data)\r\n        }\r\n        const getStage = (stageId: string | number) => {\r\n            return axios.get(taskstagesUrl + stageId).then(res => res.data)\r\n        }\r\n        const setFormData = async () => {\r\n            let task = await getTask()\r\n            let stage = await getStage(task.stage)\r\n            console.log(task, stage)\r\n            setFormResponses(task.responses)\r\n            setSchema(stage.json_schema)\r\n            setUiSchema(stage.ui_schema)\r\n        }\r\n        if (id) {\r\n            setFormData()\r\n        }\r\n    }, [id])\r\n\r\n    const handleSubmit = () => {\r\n        console.log(formResponses)\r\n        let data = {responses: formResponses}\r\n        axios.patch(tasksUrl + id, data)\r\n        // .then(res => res.data)\r\n        // .then(res => {\r\n        //     console.log(res)\r\n        //     setFormResponses(res.responses)\r\n        //     setSchema(res.stage.json_schema)\r\n        //     setUiSchema(res.stage.ui_schema)\r\n        // })\r\n    }\r\n\r\n    return (\r\n        <div style={{width: '70%', minWidth: '400px', margin: '0 auto', display: 'block', padding: 10}}>\r\n            <Form schema={schema} uiSchema={uiSchema} formData={formResponses}\r\n                  onChange={(e) => setFormResponses(e.formData)} onSubmit={handleSubmit}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Builder\r\n\r\n\r\n","import React, {useEffect, useState} from \"react\";\r\nimport firebase from \"./Firebase\";\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nexport const AuthProvider = ({children}) => {\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged((user) => {\r\n            if (user) {\r\n                setCurrentUser(user)\r\n                user.getIdToken(true).then((idToken) => {\r\n                    localStorage.setItem(\"token\", idToken);\r\n                })\r\n            }\r\n        });\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n            value={{\r\n                currentUser\r\n            }}\r\n        >\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n","import React, {useContext, useState, useEffect} from 'react';\r\nimport clsx from 'clsx';\r\nimport {createStyles, makeStyles, Theme, useTheme} from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\n\r\nimport {\r\n    MenuItem,\r\n    Select,\r\n    FormControl,\r\n    InputLabel,\r\n    AppBar,\r\n    Button,\r\n    CssBaseline,\r\n    Drawer,\r\n    IconButton,\r\n    List,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    Toolbar,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport {signInWithGoogle, signOut} from '../../util/Firebase';\r\nimport {AuthContext} from \"../../util/Auth\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport axios from '../../util/Axios';\r\n\r\nimport {campaignsUrl} from '../../util/Urls';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            display: 'flex',\r\n        },\r\n        appBar: {\r\n            zIndex: theme.zIndex.drawer + 1,\r\n            transition: theme.transitions.create(['width', 'margin'], {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen,\r\n            }),\r\n        },\r\n        appBarShift: {\r\n            marginLeft: drawerWidth,\r\n            width: `calc(100% - ${drawerWidth}px)`,\r\n            transition: theme.transitions.create(['width', 'margin'], {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n        },\r\n        menuButton: {\r\n            marginRight: 36,\r\n        },\r\n        hide: {\r\n            display: 'none',\r\n        },\r\n        drawer: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n            whiteSpace: 'nowrap',\r\n        },\r\n        drawerOpen: {\r\n            width: drawerWidth,\r\n            transition: theme.transitions.create('width', {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n        },\r\n        drawerClose: {\r\n            transition: theme.transitions.create('width', {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen,\r\n            }),\r\n            overflowX: 'hidden',\r\n            width: theme.spacing(7) + 1,\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: theme.spacing(9) + 1,\r\n            },\r\n        },\r\n        toolbar: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'flex-end',\r\n            padding: theme.spacing(0, 1),\r\n            // necessary for content to be below app bar\r\n            ...theme.mixins.toolbar,\r\n        },\r\n        content: {\r\n            flexGrow: 1,\r\n            // padding: theme.spacing(3),\r\n        },\r\n        title: {\r\n            flexGrow: 1\r\n        },\r\n        formControl: {\r\n            margin: theme.spacing(1),\r\n            alignItems: 'center'\r\n            // minWidth: 120,\r\n        },\r\n        selectEmpty: {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n        select: {},\r\n        selectIcon: {\r\n            fill: 'white',\r\n            top: 'calc(50% - 14px)'\r\n        },\r\n    }),\r\n);\r\n\r\ntype AppbarProps = { children: React.ReactNode }\r\ntype CampaingParams = { id: number, name: string, description?: string };\r\n\r\nconst Appbar = (props: AppbarProps) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const history = useHistory();\r\n    const {campaignId} = useParams<{ campaignId: string }>();\r\n    const {currentUser} = useContext(AuthContext)\r\n    const {children} = props;\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [campaign, setCampaign] = useState<number | string | unknown>(campaignId);\r\n    const [allCampaigns, setAllCampaigns] = useState<CampaingParams[]>([])\r\n\r\n    console.log(\"CURRENT CAMPAIGN\", campaignId)\r\n\r\n    useEffect(() => {\r\n        axios.get(campaignsUrl)\r\n            .then(res => res.data)\r\n            .then(res => {\r\n                console.log(res)\r\n                setAllCampaigns(res)\r\n            })\r\n    }, [])\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleOptionClick = (page: string) => {\r\n        history.push(`/campaign/${campaignId}/${page}`)\r\n    };\r\n\r\n    const handleCampaignChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n        let value = event.target.value;\r\n        console.log(value)\r\n        setCampaign(value)\r\n        history.push(`/campaign/${value}`)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline/>\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, {\r\n                            [classes.hide]: open,\r\n                        })}\r\n                    >\r\n                        <MenuIcon/>\r\n                    </IconButton>\r\n                    <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                        GigaTurnip Admin\r\n                    </Typography>\r\n                    <FormControl className={classes.formControl} size=\"small\">\r\n                        <Select\r\n                            className={classes.select}\r\n                            autoWidth\r\n                            labelId=\"campaign-select-label\"\r\n                            id=\"campaign-select-label\"\r\n                            value={campaign}\r\n                            onChange={handleCampaignChange}\r\n                            label=\"Campaign\"\r\n                            disableUnderline\r\n                            style={{color: 'white'}}\r\n                            inputProps={{\r\n                                classes: {\r\n                                    icon: classes.selectIcon,\r\n                                },\r\n                            }}\r\n                        >\r\n                            {allCampaigns.map(camp => <MenuItem key={`${camp.name}_${camp.id}`} value={camp.id}>{camp.name}</MenuItem>)}\r\n                        </Select>\r\n                    </FormControl>\r\n                    {currentUser ?\r\n                        <Button onClick={signOut} color={\"inherit\"}>\r\n                            Log out\r\n                        </Button>\r\n                        :\r\n                        <Button onClick={signInWithGoogle} color={\"inherit\"}>\r\n                            Login\r\n                        </Button>\r\n                    }\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                variant=\"permanent\"\r\n                className={clsx(classes.drawer, {\r\n                    [classes.drawerOpen]: open,\r\n                    [classes.drawerClose]: !open,\r\n                })}\r\n                classes={{\r\n                    paper: clsx({\r\n                        [classes.drawerOpen]: open,\r\n                        [classes.drawerClose]: !open,\r\n                    }),\r\n                }}\r\n            >\r\n                <div className={classes.toolbar}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === 'rtl' ? <ChevronRightIcon/> : <ChevronLeftIcon/>}\r\n                    </IconButton>\r\n                </div>\r\n                <Divider/>\r\n                <List>\r\n                    <ListItem button onClick={() => handleOptionClick(\"chain\")}>\r\n                        <ListItemIcon><InboxIcon/></ListItemIcon>\r\n                        <ListItemText primary={\"Chains\"}/>\r\n                    </ListItem>\r\n                </List>\r\n            </Drawer>\r\n            <main className={classes.content}>\r\n                <div className={classes.toolbar}/>\r\n                {children}\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Appbar\r\n","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 300,\r\n        // height: 200\r\n    },\r\n    extra: {\r\n        marginBottom: 15\r\n    }\r\n});\r\n\r\ntype CardProps = { chain: { id: number, campaign: number, name: string, description?: string } }\r\n\r\nconst ChainCard = (props: CardProps) => {\r\n    const classes = useStyles();\r\n    const {id, campaign, name, description} = props.chain;\r\n    const history = useHistory()\r\n\r\n    const handleOpen = () => {\r\n        history.push(`${history.location.pathname}/${id}`)\r\n    }\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardContent>\r\n                <Typography variant=\"h5\" component=\"h2\" gutterBottom={true}>\r\n                    {name}\r\n                </Typography>\r\n                <Typography className={classes.extra} variant=\"subtitle2\" color=\"textSecondary\">\r\n                    ID: {id} Campaign: {campaign}\r\n                </Typography>\r\n                <Typography variant=\"body1\" component=\"p\">\r\n                    {description ? description : <br/>}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                <Button size=\"small\" onClick={handleOpen}>Open</Button>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default ChainCard","import React, {useState} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport {blue} from '@material-ui/core/colors';\r\nimport {DialogActions, DialogContent, Grid, TextField} from \"@material-ui/core\";\r\nimport {NewChainParams} from \"./Chains\";\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    avatar: {\r\n        backgroundColor: blue[100],\r\n        color: blue[600],\r\n    },\r\n});\r\n\r\ntype ChainDialogProps = {\r\n    open: boolean;\r\n    onClose: () => void;\r\n    onSave: (data: NewChainParams) => void;\r\n}\r\n\r\ntype RouterParams = {campaignId: string}\r\n\r\nconst AddChainDialog = (props: ChainDialogProps) => {\r\n    const classes = useStyles();\r\n    const {campaignId} = useParams<RouterParams>();\r\n\r\n    const {onClose, onSave, open} = props;\r\n\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [campaign, setCampaign] = useState(campaignId)\r\n\r\n    const handleClose = () => {\r\n        onClose();\r\n    };\r\n\r\n    const handleSave = () => {\r\n        if (name && campaign) {\r\n            let parsedCampaign = parseInt(campaign)\r\n            let data = {name, description, campaign: parsedCampaign}\r\n            onSave(data)\r\n        }\r\n    }\r\n\r\n    const handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        let value = event.target.value\r\n        if (value) {\r\n            setName(value)\r\n        }\r\n        else {\r\n            setName('')\r\n        }\r\n    };\r\n\r\n    const handleDescriptionChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        let value = event.target.value\r\n        if (value) {\r\n            setDescription(value)\r\n        }\r\n        else {\r\n            setDescription('')\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n            <DialogTitle>Add Chain</DialogTitle>\r\n            <DialogContent>\r\n                <Grid container justify={\"center\"}>\r\n                    <Grid container item><TextField fullWidth label={\"Name\"} onChange={handleNameChange}/></Grid>\r\n                    <Grid container item>\r\n                        <TextField fullWidth label={\"Description\"} multiline rows={4} onChange={handleDescriptionChange}/>\r\n                    </Grid>\r\n                </Grid>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleSave}>Save</Button>\r\n                <Button onClick={handleClose}>Close</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default AddChainDialog","import React, {useEffect, useState} from \"react\";\r\nimport {\r\n    useHistory,\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport axios from \"../../util/Axios\";\r\nimport {Button, Grid, Typography} from \"@material-ui/core\";\r\nimport Card from \"./ChainCard\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport AddChainDialog from \"./Dialog\";\r\nimport {chainsUrl} from '../../util/Urls'\r\n\r\ntype RouterParams = {campaignId: string}\r\ntype ChainParams = { id: number, campaign: number, name: string, description?: string };\r\nexport type NewChainParams = { campaign: number, name: string, description?: string }\r\n\r\nconst Builder = () => {\r\n    const [chains, setChains] = useState<ChainParams[]>([])\r\n    const [open, setOpen] = useState(false);\r\n    const {campaignId} = useParams<RouterParams>()\r\n\r\n    useEffect(() => {\r\n        axios.get(chainsUrl)\r\n            .then(res => res.data)\r\n            .then(res => {\r\n                console.log(res)\r\n                const filtered = res.filter((chain: {campaign: number, name: string, description: string, id: number}) => chain.campaign.toString() == campaignId)\r\n                setChains(filtered)\r\n            })\r\n    }, [])\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleDialogSave = (data: NewChainParams) => {\r\n        setOpen(false);\r\n        handleAddChain(data)\r\n    }\r\n\r\n    const handleAddChain = (data: NewChainParams) => {\r\n        axios.post(chainsUrl, data)\r\n            .then(res => {\r\n                console.log(res)\r\n                window.location.reload(false);\r\n            })\r\n    };\r\n\r\n    return (\r\n        <Grid container justify={\"center\"}>\r\n            <AddChainDialog open={open} onSave={handleDialogSave} onClose={handleClose}/>\r\n            <Grid container style={{padding: 20}}>\r\n                <Button variant={\"contained\"} color={\"primary\"} startIcon={<AddIcon/>} onClick={handleClickOpen}>Add Chain</Button>\r\n            </Grid>\r\n            {chains.map(chain => (\r\n                <Grid item style={{padding: 10}}>\r\n                    <Card key={chain.id} chain={chain}/>\r\n                </Grid>\r\n            ))}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Builder\r\n\r\n\r\n","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 300,\r\n        // height: 200\r\n    },\r\n    extra: {\r\n        marginBottom: 15\r\n    }\r\n});\r\n\r\ntype CardProps = { chain: { id: number, name: string, description?: string } }\r\n\r\nconst ChainCard = (props: CardProps) => {\r\n    const classes = useStyles();\r\n    const {id, name, description} = props.chain;\r\n    const history = useHistory()\r\n\r\n    const handleOpen = () => {\r\n        history.push(`/campaign/${id}`)\r\n    }\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardContent>\r\n                <Typography variant=\"h5\" component=\"h2\" gutterBottom={true}>\r\n                    {name}\r\n                </Typography>\r\n                <Typography className={classes.extra} variant=\"subtitle2\" color=\"textSecondary\">\r\n                    ID: {id}\r\n                </Typography>\r\n                <Typography variant=\"body1\" component=\"p\">\r\n                    {description ? description : <br/>}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                <Button size=\"small\" onClick={handleOpen}>Open</Button>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default ChainCard","import React, {useState} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport {blue} from '@material-ui/core/colors';\r\nimport {DialogActions, DialogContent, Grid, TextField} from \"@material-ui/core\";\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    avatar: {\r\n        backgroundColor: blue[100],\r\n        color: blue[600],\r\n    },\r\n});\r\n\r\ntype ChainDialogProps = {\r\n    open: boolean;\r\n    onClose: () => void;\r\n    onSave: (data: any) => void;\r\n}\r\n\r\nconst AddCampaignDialog = (props: ChainDialogProps) => {\r\n    const classes = useStyles();\r\n    const {onClose, onSave, open} = props;\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [campaign, setCampaign] = useState<number>();\r\n\r\n    const handleClose = () => {\r\n        onClose();\r\n    };\r\n\r\n    const handleSave = () => {\r\n        if (name) {\r\n            let data = {name, description, campaign}\r\n            onSave(data)\r\n        }\r\n        else {\r\n            alert('error: No name')\r\n        }\r\n    }\r\n\r\n    const handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        let value = event.target.value\r\n        if (value) {\r\n            setName(value)\r\n        }\r\n        else {\r\n            setName('')\r\n        }\r\n    };\r\n\r\n    const handleDescriptionChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        let value = event.target.value\r\n        if (value) {\r\n            setDescription(value)\r\n        }\r\n        else {\r\n            setDescription('')\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n            <DialogTitle>Add Chain</DialogTitle>\r\n            <DialogContent>\r\n                <Grid container justify={\"center\"}>\r\n                    <Grid container item><TextField fullWidth label={\"Name\"} onChange={handleNameChange}/></Grid>\r\n                    <Grid container item>\r\n                        <TextField fullWidth label={\"Description\"} multiline rows={4} onChange={handleDescriptionChange}/>\r\n                    </Grid>\r\n                </Grid>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleSave}>Save</Button>\r\n                <Button onClick={handleClose}>Close</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default AddCampaignDialog","import React, {useEffect, useState} from \"react\";\r\nimport axios from \"../../util/Axios\";\r\nimport {Button, Grid} from \"@material-ui/core\";\r\nimport Card from \"./CampaignCard\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport AddChainDialog from \"./Dialog\";\r\nimport {campaignsUrl} from \"../../util/Urls\"\r\n\r\ntype CampaingParams = { id: number, name: string, description?: string };\r\nexport type NewCampaignParams = { name: string, description?: string }\r\n\r\nconst Builder = () => {\r\n    const [campaigns, setCampaigns] = useState<CampaingParams[]>([])\r\n    const [open, setOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        axios.get(campaignsUrl)\r\n            .then(res => res.data)\r\n            .then(res => {\r\n                console.log(res)\r\n                setCampaigns(res)\r\n            })\r\n    }, [])\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleDialogSave = (data: NewCampaignParams) => {\r\n        setOpen(false);\r\n        handleCampaignAdd(data)\r\n    }\r\n\r\n    const handleCampaignAdd = (data: NewCampaignParams) => {\r\n        axios.post(campaignsUrl, data)\r\n            .then(res => {\r\n                console.log(res)\r\n                window.location.reload(false);\r\n            })\r\n    };\r\n\r\n    return (\r\n        <Grid container justify={\"center\"}>\r\n            <AddChainDialog open={open} onSave={handleDialogSave} onClose={handleClose}/>\r\n            <Grid container style={{padding: 20}}>\r\n                <Button variant={\"contained\"} color={\"primary\"} startIcon={<AddIcon/>} onClick={handleClickOpen}>Add Campaign</Button>\r\n            </Grid>\r\n            {campaigns.map(campaign => (\r\n                <Grid item style={{padding: 10}}>\r\n                    <Card key={campaign.id} chain={campaign}/>\r\n                </Grid>\r\n            ))}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Builder\r\n\r\n\r\n","import React, {useContext} from 'react';\r\nimport clsx from 'clsx';\r\nimport {createStyles, makeStyles, Theme, useTheme} from '@material-ui/core/styles';\r\nimport {AppBar, Button, CssBaseline, Toolbar, Typography} from \"@material-ui/core\";\r\nimport {signInWithGoogle, signOut} from '../../util/Firebase';\r\nimport {AuthContext} from \"../../util/Auth\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            display: 'flex',\r\n        },\r\n        appBar: {\r\n            zIndex: theme.zIndex.drawer + 1,\r\n            transition: theme.transitions.create(['width', 'margin'], {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen,\r\n            }),\r\n        },\r\n        appBarShift: {\r\n            marginLeft: drawerWidth,\r\n            width: `calc(100% - ${drawerWidth}px)`,\r\n            transition: theme.transitions.create(['width', 'margin'], {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n        },\r\n        menuButton: {\r\n            marginRight: 36,\r\n        },\r\n        hide: {\r\n            display: 'none',\r\n        },\r\n        drawer: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n            whiteSpace: 'nowrap',\r\n        },\r\n        drawerOpen: {\r\n            width: drawerWidth,\r\n            transition: theme.transitions.create('width', {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n        },\r\n        drawerClose: {\r\n            transition: theme.transitions.create('width', {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen,\r\n            }),\r\n            overflowX: 'hidden',\r\n            width: theme.spacing(7) + 1,\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: theme.spacing(9) + 1,\r\n            },\r\n        },\r\n        toolbar: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'flex-end',\r\n            padding: theme.spacing(0, 1),\r\n            // necessary for content to be below app bar\r\n            ...theme.mixins.toolbar,\r\n        },\r\n        content: {\r\n            flexGrow: 1,\r\n            // padding: theme.spacing(3),\r\n        },\r\n        title: {\r\n            flexGrow: 1\r\n        }\r\n    }),\r\n);\r\n\r\ntype AppbarProps = { children: React.ReactNode }\r\n\r\nconst Appbar = (props: AppbarProps) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n    const {children} = props;\r\n    const {currentUser} = useContext(AuthContext)\r\n    const history = useHistory();\r\n    const {campaignId} = useParams<{campaignId: string}>();\r\n\r\n    console.log(campaignId)\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleOptionClick = (page: string) => {\r\n        history.push(`/campaign/${campaignId}/${page}`)\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline/>\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n                <Toolbar>\r\n                    <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                        GigaTurnip Admin\r\n                    </Typography>\r\n                    {currentUser ?\r\n                        <Button onClick={signOut} color={\"inherit\"}>\r\n                            Log out\r\n                        </Button>\r\n                        :\r\n                        <Button onClick={signInWithGoogle} color={\"inherit\"}>\r\n                            Login\r\n                        </Button>\r\n                    }\r\n                </Toolbar>\r\n            </AppBar>\r\n            <main className={classes.content}>\r\n                <div className={classes.toolbar}/>\r\n                {children}\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Appbar\r\n","import React, {useContext} from \"react\";\r\nimport Graph from './components/graph/Graph'\r\nimport StageBuilder from './components/form-builders/StageBuilder'\r\nimport LogicBuilder from './components/form-builders/LogicBuilder'\r\nimport Actions from './components/actions/Actions'\r\nimport Task from './components/task/Task'\r\nimport Appbar from \"./components/appbar/Appbar\";\r\n\r\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\r\n\r\nimport {AuthContext} from \"./util/Auth\";\r\nimport Chains from \"./components/chains/Chains\";\r\nimport Campaigns from \"./components/campaigns/Campaigns\";\r\nimport SimpleAppbar from \"./components/appbar/SimpleAppbar\";\r\n\r\n\r\nconst App = () => {\r\n    const {currentUser} = useContext(AuthContext)\r\n\r\n    return (\r\n        <div>\r\n            <Router>\r\n                <Switch>\r\n                    <Route path={\"/campaign/:campaignId\"}>\r\n                        <Appbar>\r\n                            <Route exact path=\"/campaign/:campaignId/chain/:chainId/createstage/:id\">\r\n                                <StageBuilder/>\r\n                            </Route>\r\n                            <Route exact path=\"/campaign/:campaignId/chain/:chainId/createlogic/:id\">\r\n                                <LogicBuilder/>\r\n                            </Route>\r\n                            <Route exact path=\"/campaign/:campaignId/chain/:chainId/task/:id\">\r\n                                <Task/>\r\n                            </Route>\r\n                            <Route exact path=\"/campaign/:campaignId/chain/:chainId/actions/:id\">\r\n                                <Actions/>\r\n                            </Route>\r\n                            <Route exact path=\"/campaign/:campaignId/chain\">\r\n                                <Chains/>\r\n                            </Route>\r\n                            <Route exact path=\"/campaign/:campaignId/chain/:chainId\">\r\n                                <Graph/>\r\n                            </Route>\r\n                        </Appbar>\r\n                    </Route>\r\n                    <Route path=\"/\">\r\n                        <SimpleAppbar>\r\n                            <Campaigns/>\r\n                        </SimpleAppbar>\r\n                    </Route>\r\n                </Switch>\r\n            </Router>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {AuthProvider} from \"./util/Auth\";\r\n\r\nReactDOM.render(\r\n    // <React.StrictMode>\r\n    <AuthProvider>\r\n        <App/>\r\n    </AuthProvider>,\r\n    // </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}
{"version":3,"sources":["util/Firebase.js","components/nodes/CustomNode.tsx","components/nodes/LogicNode.tsx","components/nodes/StageNode.tsx","components/sidebar/Sidebar.tsx","util/Urls.js","util/Axios.js","components/graph/Graph.tsx","components/custom-widgets/file-widget/CustomFileWidget.tsx","components/form-builders/PreviewStage.tsx","components/custom-widgets/file-widget/CustomFileType.tsx","components/form-builders/StageBuilder.tsx","components/form-builders/GetFormFields.js","components/form-builders/LogicBuilder.tsx","components/actions/Actions.tsx","components/task/Task.tsx","util/Auth.js","components/appbar/Appbar.tsx","components/chains/ChainCard.tsx","components/chains/Dialog.tsx","components/chains/Chains.tsx","components/campaigns/CampaignCard.tsx","components/campaigns/Dialog.tsx","components/campaigns/Campaigns.tsx","components/appbar/SimpleAppbar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","provider","auth","GoogleAuthProvider","firestore","settings","ignoreUndefinedProperties","signInWithGoogle","setCustomParameters","prompt","signInWithPopup","signOut","useStyles","makeStyles","theme","createStyles","root","background","borderColor","borderWidth","borderStyle","borderRadius","fontSize","width","textAlign","padding","CustomNode","data","style","classes","Grid","className","label","type","position","Position","Top","Bottom","customNodeStyles","CustomLogicNode","CustomStageNode","Sidebar","useState","draggable","setDraggable","formResponses","setFormResponses","useEffect","onDragStart","event","nodeLabel","nodeType","console","log","JSON","stringify","dataTransfer","setData","effectAllowed","onDragEnd","undefined","marginRight","schema","formData","onChange","e","color","display","justifyContent","alignItems","campaignsUrl","chainsUrl","taskstagesUrl","conditionalstagesUrl","tasksUrl","instance","axios","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","error","Promise","reject","DnDFlow","reactFlowWrapper","useRef","history","useHistory","useParams","chainId","campaignId","reactFlowInstance","setReactFlowInstance","elements","setElements","all","get","then","results","stageNodes","logicNodes","forEach","node","allNodes","filter","chain","nodes","map","id","toString","x","parseFloat","x_pos","y","y_pos","name","stage","in_stages","length","sourceId","edge","source","target","arrowHeadType","els","addEdge","getNode","pop","getTypeUrl","updateConnections","currentNodeId","method","a","url","res","out_stages","catch","err","connections","parsed","connection","ids","patch","onConnect","params","newParams","targetNode","sourceNode","removeConnections","onDrop","preventDefault","reactFlowBounds","current","getBoundingClientRect","transfer","getData","project","clientX","left","clientY","top","parsedData","parse","createNode","newNode","es","concat","updateNode","parseInt","post","onElementDoubleClick","element","location","pathname","push","nodeTypes","LOGIC","STAGE","ref","onElementsRemove","elementsToRemove","nodeIdsToRemove","n","edgeElement","includes","hasOwnProperty","delete","removeElements","onNodeDoubleClick","onEdgeDoubleClick","onLoad","_reactFlowInstance","onDragOver","dropEffect","onNodeDragStop","height","CustomFileWidget","props","title","Preview","jsonSchema","uiSchema","onJsonChange","onUiChange","json_schema","ui_schema","stage_data","edit","setEdit","localJson","setLocalJson","localUi","setLocalUi","widgets","customfile","minWidth","margin","onSubmit","Switch","checked","inputProps","Button","variant","onClick","Typography","TextField","multiline","fullWidth","defaultValue","InputProps","readOnly","value","marginTop","marginBottom","navigator","clipboard","writeText","alert","CustomFileType","file","displayName","matchIf","types","widget","defaultDataSchema","defaultUiSchema","Builder","setSchema","setUiSchema","StageOptions","optionsSchema","preview","setPreview","options","parse_json_schema","parse_ui_schema","IconButton","float","p","PreviewStage","uischema","newSchema","newUiSchema","mods","customFormInputs","getFormFields","retrievedSchema","retrieveSchema","pathSchema","toPathSchema","getFieldNames","getAllPaths","_obj","acc","paths","Object","keys","key","newPaths","path","__rjsf_additionalProperties","$name","replace","formValue","_get","_isEmpty","fieldNames","ready","setReady","fields","setFields","logic_array","items","connectedStages","setConnectedStages","pingPong","setPingPong","currentStage","conditions","pingpong","getStage","stageId","taskStage","getConnectedStages","connId","connectedIds","connStages","allFields","stageObject","values","sc","deps","dependencies","depValues","stageFields","GetFormFields","depFields","dep","oneOf","allOf","nested","fiction","flat","getDependentFields","Array","from","Set","properties","field","enum","condition","required","FormControlLabel","control","Checkbox","formControl","spacing","selectEmpty","handleCreateTask","split","caseData","case","taskData","container","justify","component","item","task","responses","setFormData","AuthContext","React","createContext","AuthProvider","children","currentUser","setCurrentUser","onAuthStateChanged","user","getIdToken","idToken","setItem","onIdTokenChanged","Provider","drawerWidth","appBar","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","toolbar","mixins","content","flexGrow","select","selectIcon","fill","Appbar","useTheme","useContext","open","setOpen","campaign","setCampaign","allCampaigns","setAllCampaigns","CssBaseline","AppBar","clsx","Toolbar","aria-label","noWrap","FormControl","size","Select","autoWidth","labelId","disableUnderline","icon","camp","MenuItem","Drawer","paper","direction","Divider","List","ListItem","button","page","ListItemIcon","ListItemText","primary","extra","ChainCard","description","Card","CardContent","gutterBottom","CardActions","avatar","backgroundColor","blue","AddChainDialog","onClose","onSave","setName","setDescription","handleClose","Dialog","aria-labelledby","DialogTitle","DialogContent","rows","DialogActions","parsedCampaign","chains","setChains","filtered","handleAddChain","window","reload","startIcon","AddCampaignDialog","campaigns","setCampaigns","handleCampaignAdd","App","exact","StageBuilder","LogicBuilder","Task","Actions","Chains","Graph","SimpleAppbar","Campaigns","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.270d04e4.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCXiwOUNsbzKH7sbSAZrqA9f7VOeCMdUOQ\",\r\n    authDomain: \"gigaturnip-b6b5b.firebaseapp.com\",\r\n    projectId: \"gigaturnip-b6b5b\",\r\n    storageBucket: \"gigaturnip-b6b5b.appspot.com\",\r\n    messagingSenderId: \"414429242328\",\r\n    appId: \"1:414429242328:web:a4685f5ac6895ea767c8ad\",\r\n    measurementId: \"G-Y8JTEJMTET\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n// const db = firebase.firestore();\r\n// if (window.location.hostname === \"localhost\") {\r\n//   db.useEmulator(\"localhost\", 8080);\r\n// }\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nfirebase.firestore().settings({\r\n    ignoreUndefinedProperties: true,\r\n})\r\nexport const signInWithGoogle = () => {\r\n    provider.setCustomParameters({\r\n        prompt: 'select_account'\r\n    });\r\n    firebase.auth().signInWithPopup(provider);\r\n};\r\n\r\nexport const signOut = () => {\r\n    firebase.auth().signOut()\r\n}\r\n\r\nexport default firebase;","import React from 'react';\r\nimport {Handle, Position} from 'react-flow-renderer';\r\nimport {createStyles, Grid, makeStyles, Theme} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            background: '#FFF',\r\n            borderColor: '#000',\r\n            borderWidth: '1px',\r\n            borderStyle: 'solid',\r\n            borderRadius: '3px',\r\n            fontSize: '12px',\r\n            width: '150px',\r\n            textAlign: 'center',\r\n            padding: 10\r\n        },\r\n    }));\r\n\r\ntype NodeProps = { data: {label: string}, style: object }\r\n\r\nconst CustomNode = ({data, style}: NodeProps) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid className={classes.root} style={style}>\r\n            <div>{data.label}</div>\r\n            <Handle\r\n                type=\"target\"\r\n                position={Position.Top}\r\n                style={{borderRadius: '100%'}}\r\n            />\r\n            <Handle\r\n                type=\"source\"\r\n                position={Position.Bottom}\r\n                style={{borderRadius: '100%'}}\r\n            />\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default CustomNode","import React from 'react';\r\nimport CustomNode from \"./CustomNode\";\r\n\r\nconst customNodeStyles = {\r\n  borderColor: '#0041d0'\r\n};\r\n\r\ntype NodeProps = { data: {label: string} }\r\n\r\nconst CustomLogicNode = ({ data }: NodeProps) => <CustomNode data={data} style={customNodeStyles} />;\r\n\r\nexport default CustomLogicNode","import React from 'react';\r\nimport CustomNode from \"./CustomNode\";\r\n\r\nconst customNodeStyles = {\r\n  borderColor: '#32CD32'\r\n};\r\n\r\ntype NodeProps = { data: {label: string} }\r\n\r\nconst CustomStageNode = ({ data }: NodeProps) => <CustomNode data={data} style={customNodeStyles} />;\r\n\r\nexport default CustomStageNode","import React, {useEffect, useState} from 'react';\r\nimport firebase from '../../util/Firebase'\r\nimport Form from \"@rjsf/bootstrap-4\";\r\nimport {JSONSchema7} from \"json-schema\";\r\n\r\nimport schema from '../../json-schema/SidebarSchema.json'\r\n\r\ntype FormResponsesProps = { label: string }\r\n\r\nconst Sidebar = () => {\r\n    const [draggable, setDraggable] = useState(false)\r\n    const [formResponses, setFormResponses] = useState<FormResponsesProps | undefined>()\r\n\r\n    useEffect(() => {\r\n\r\n        if (formResponses && formResponses.label && formResponses.label !== '') {\r\n            setDraggable(true)\r\n        } else {\r\n            setDraggable(false)\r\n        }\r\n    }, [formResponses])\r\n\r\n    const onDragStart = (event: { dataTransfer: DataTransfer }, nodeLabel: string, nodeType: string) => {\r\n        console.log(nodeLabel, nodeType)\r\n        let data = JSON.stringify({...formResponses, type: nodeType})\r\n        event.dataTransfer.setData('application/reactflow', data);\r\n        event.dataTransfer.effectAllowed = 'move';\r\n    };\r\n\r\n    const onDragEnd = () => {\r\n        setFormResponses(undefined)\r\n    }\r\n\r\n    return (\r\n        <aside>\r\n            <div className=\"description\">You can drag these nodes to the pane on the right.</div>\r\n            <div style={{marginRight: 5}}>\r\n                <Form schema={schema as JSONSchema7} formData={formResponses} onChange={(e) => setFormResponses(e.formData)}> </Form>\r\n            </div>\r\n            <div draggable={false} style={{\r\n                color: 'red',\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n                padding: 10\r\n            }}>{!draggable && 'Enter Label to drag the node'}</div>\r\n            <div className=\"dndnode stage\" onDragEnd={onDragEnd}\r\n                 onDragStart={(event) => onDragStart(event, formResponses ? formResponses.label : '', 'STAGE')} draggable={draggable}>\r\n                Stage Node\r\n            </div>\r\n            <div className=\"dndnode logic\" onDragEnd={onDragEnd}\r\n                 onDragStart={(event) => onDragStart(event, formResponses ? formResponses.label : '', 'LOGIC')} draggable={draggable}>\r\n                Logic Node\r\n            </div>\r\n        </aside>\r\n    );\r\n};\r\n\r\nexport default Sidebar","const baseUrl = \"https://journal-bb5e3.uc.r.appspot.com/\"\r\n// const baseUrl = \"http://127.0.0.1:8000/\"\r\nconst campaignsUrl = \"api/v1/campaigns/\"\r\nconst chainsUrl = \"api/v1/chains/\"\r\nconst taskstagesUrl = \"api/v1/taskstages/\"\r\nconst webhookstagesUrl = \"api/v1/webhookstages/\"\r\nconst conditionalstagesUrl = \"api/v1/conditionalstages/\"\r\nconst casesUrl = \"api/v1/cases/\"\r\nconst tasksUrl = \"api/v1/tasks/\"\r\n\r\nexport {\r\n    baseUrl,\r\n    campaignsUrl,\r\n    chainsUrl,\r\n    taskstagesUrl,\r\n    webhookstagesUrl,\r\n    conditionalstagesUrl,\r\n    casesUrl,\r\n    tasksUrl\r\n}","import axios from \"axios\";\r\nimport {baseUrl} from \"./Urls\";\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: baseUrl\r\n});\r\n\r\ninstance.interceptors.request.use(\r\n    function (config) {\r\n        const token = localStorage.getItem(\"token\");\r\n\r\n        if (token) {\r\n            config.headers[\"Authorization\"] = 'JWT ' + token;\r\n        }\r\n        return config;\r\n    },\r\n    function (error) {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nexport default instance;","import React, {useEffect, useRef, useState} from 'react';\r\nimport ReactFlow, {addEdge, Controls, FlowElement, ReactFlowProvider, Edge} from 'react-flow-renderer';\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport firebase from '../../util/Firebase'\r\nimport CustomLogicNode from '../nodes/LogicNode'\r\nimport CustomStageNode from '../nodes/StageNode'\r\nimport Sidebar from '../sidebar/Sidebar';\r\n\r\nimport '../../dnd.css';\r\nimport axios from '../../util/Axios';\r\nimport {conditionalstagesUrl, taskstagesUrl} from '../../util/Urls'\r\n\r\ntype RouterParams = { chainId: string, campaignId: string }\r\n\r\nconst DnDFlow = () => {\r\n    const reactFlowWrapper = useRef(null);\r\n    const history = useHistory();\r\n    const {chainId, campaignId} = useParams<RouterParams>();\r\n\r\n    const [reactFlowInstance, setReactFlowInstance] = useState(null);\r\n    const [elements, setElements] = useState<FlowElement[]>([]);\r\n\r\n    useEffect(() => {\r\n        const getStageNodes = () => {\r\n            return axios.get(taskstagesUrl)\r\n        };\r\n\r\n        const getLogicNodes = () => {\r\n            return axios.get(conditionalstagesUrl)\r\n        };\r\n\r\n        Promise.all([getStageNodes(), getLogicNodes()])\r\n            .then((results) => {\r\n                const stageNodes = results[0].data;\r\n                const logicNodes = results[1].data;\r\n                stageNodes.forEach((node: any) => node.type = \"STAGE\")\r\n                logicNodes.forEach((node: any) => node.type = \"LOGIC\")\r\n                const allNodes = [...stageNodes, ...logicNodes].filter((node: any) => node.chain == chainId)\r\n                const nodes: FlowElement[] = allNodes.map((node: any) => (\r\n                        {\r\n                            id: node.id.toString(),\r\n                            position: {x: parseFloat(node.x_pos), y: parseFloat(node.y_pos)},\r\n                            data: {label: node.name},\r\n                            type: node.type\r\n                        }\r\n                    )\r\n                )\r\n                setElements(nodes)\r\n                return allNodes\r\n            })\r\n            .then(allNodes => {\r\n                allNodes.forEach(stage => {\r\n                    if (stage.in_stages.length > 0) {\r\n                        stage.in_stages.forEach((sourceId: string | number) => {\r\n                            const edge = {\r\n                                source: sourceId.toString(),\r\n                                target: stage.id.toString(),\r\n                                id: `${sourceId}-${stage.id}`,\r\n                                arrowHeadType: \"arrow\"\r\n                            } as Edge\r\n                            setElements((els) => addEdge(edge, els))\r\n                        })\r\n                    }\r\n                })\r\n            })\r\n    }, [])\r\n\r\n    const getNode = (id: string | number) => {\r\n        return elements.filter(node => node.id == id).pop()\r\n    }\r\n\r\n    const getTypeUrl = (node: FlowElement) => {\r\n        if (node.type == \"STAGE\") {\r\n            return taskstagesUrl\r\n        }\r\n        if (node.type == \"LOGIC\") {\r\n            return conditionalstagesUrl\r\n        }\r\n        return undefined\r\n    }\r\n\r\n    const updateConnections = async (node: FlowElement, currentNodeId: string | number, type: \"in\" | \"out\", method: \"create\" | \"delete\") => {\r\n        const url = getTypeUrl(node)\r\n        if (url) {\r\n            const connections = await axios.get(url + node.id + '/').then(res => {\r\n                if (type === 'in') {\r\n                    return res.data.in_stages\r\n                }\r\n                if (type === 'out') {\r\n                    return res.data.out_stages\r\n                }\r\n                return undefined;\r\n            }).catch(err => undefined);\r\n\r\n            if (connections) {\r\n                let parsed = connections.map((connection: string | number) => connection.toString())\r\n\r\n                let ids = []\r\n                if (method === 'create') {\r\n                    ids = [currentNodeId, ...parsed]\r\n                }\r\n                if (method === 'delete') {\r\n                    ids = parsed.filter((connection: string) => connection !== currentNodeId)\r\n                }\r\n\r\n                let data = undefined\r\n                if (type === 'in') {\r\n                    data = {in_stages: ids}\r\n                }\r\n                if (type === 'out') {\r\n                    data = {out_stages: ids}\r\n                }\r\n\r\n                if (data) {\r\n                    console.log(data)\r\n                    axios.patch(url + node.id + '/', data)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const onConnect = async (params: object) => {\r\n        const newParams: any = {...params, arrowHeadType: 'arrow'}\r\n        const targetNode = getNode(newParams.target)\r\n        const sourceNode = getNode(newParams.source)\r\n        const target = newParams.target\r\n        const source = newParams.source\r\n\r\n        setElements((els: FlowElement[]) => addEdge(newParams, els))\r\n\r\n        if (targetNode) {\r\n            updateConnections(targetNode, source, 'in', 'create')\r\n        }\r\n\r\n        if (sourceNode) {\r\n            updateConnections(sourceNode, target, 'out', 'create')\r\n        }\r\n    }\r\n\r\n    const removeConnections = async (target: string, source: string) => {\r\n        const targetNode = getNode(target)\r\n        const sourceNode = getNode(source)\r\n\r\n        if (targetNode) {\r\n            updateConnections(targetNode, source, 'in', 'delete')\r\n        }\r\n\r\n        if (sourceNode) {\r\n            updateConnections(sourceNode, target, 'out', 'delete')\r\n        }\r\n    }\r\n\r\n    const removeElements = (elementsToRemove: FlowElement[], elements: FlowElement[]) => {\r\n        let nodeIdsToRemove = elementsToRemove.map((n: any) => {\r\n            return n.id;\r\n        });\r\n\r\n        return elements.filter((element: any) => {\r\n            let edgeElement = element;\r\n            if (nodeIdsToRemove.includes(element.id) || nodeIdsToRemove.includes(edgeElement.target) || nodeIdsToRemove.includes(edgeElement.source)) {\r\n                if (element.hasOwnProperty('source') && element.hasOwnProperty('target')) {\r\n                    let target = element.target\r\n                    let source = element.source\r\n\r\n                    removeConnections(target, source)\r\n\r\n                } else {\r\n                    const url = getTypeUrl(element)\r\n                    if (url) {\r\n                        axios.delete(url + element.id + '/')\r\n                    }\r\n                }\r\n                return false\r\n            } else {\r\n                return true\r\n            }\r\n        });\r\n    };\r\n\r\n    const onElementsRemove = (elementsToRemove: FlowElement[]) => {\r\n        setElements((els) => removeElements(elementsToRemove, els));\r\n    }\r\n\r\n    const onLoad = (_reactFlowInstance: any) =>\r\n        setReactFlowInstance(_reactFlowInstance);\r\n\r\n    const onDragOver = (event: any) => {\r\n        event.preventDefault();\r\n        event.dataTransfer.dropEffect = 'move';\r\n    };\r\n\r\n    const onDrop = async (event: any) => {\r\n        event.preventDefault();\r\n\r\n        // @ts-ignore\r\n        const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\r\n        const transfer = event.dataTransfer.getData('application/reactflow');\r\n        // @ts-ignore\r\n        const position = reactFlowInstance.project({\r\n            x: event.clientX - reactFlowBounds.left,\r\n            y: event.clientY - reactFlowBounds.top,\r\n        });\r\n\r\n        const parsedData = JSON.parse(transfer)\r\n        const label = parsedData.label\r\n        const type = parsedData.type\r\n\r\n        const id = await createNode({type, position, label})\r\n\r\n        let newNode = {\r\n            id,\r\n            type,\r\n            position,\r\n            data: {label},\r\n        };\r\n\r\n        setElements((es) => es.concat(newNode));\r\n    };\r\n\r\n    const onNodeDragStop = (event: any, node: any) => {\r\n        updateNode(node)\r\n    }\r\n\r\n    const updateNodeInFirebase = (node: any) => {\r\n        firebase.firestore().collection('flow').doc(node.id).set(node, {merge: true})\r\n    }\r\n\r\n    const updateNode = (node: any) => {\r\n        let x_pos = node.position.x\r\n        let y_pos = node.position.y\r\n        let data = {x_pos, y_pos}\r\n        const url = getTypeUrl(node)\r\n        if (url) {\r\n            axios.patch(url + node.id + '/', data)\r\n        }\r\n    }\r\n\r\n    const createNode = async (node: any) => {\r\n        let data = {\r\n            name: node.label,\r\n            x_pos: node.position.x,\r\n            y_pos: node.position.y,\r\n            chain: parseInt(chainId),\r\n            out_stages: []\r\n        }\r\n\r\n        const url = getTypeUrl(node)\r\n        if (url) {\r\n            let res = await axios.post(url, data)\r\n            return res.data.id.toString()\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    const onElementDoubleClick = (event: any, element: any) => {\r\n        console.log(element)\r\n        let location = history.location.pathname\r\n        if (element.id) {\r\n            if (element.type === 'LOGIC') {\r\n                history.push(`${location}/createlogic/${element.id}`)\r\n            }\r\n            if (element.type === 'STAGE') {\r\n                // history.push('/createStage/' + element.id)\r\n                history.push(`${location}/actions/${element.id}`)\r\n            }\r\n            if (element.type === 'default' && (element.target || element.source)) {\r\n                console.log('edge')\r\n            }\r\n        }\r\n    }\r\n\r\n    const nodeTypes = {\r\n        LOGIC: CustomLogicNode,\r\n        STAGE: CustomStageNode\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"dndflow\">\r\n            <ReactFlowProvider>\r\n                <div className=\"reactflow-wrapper\" ref={reactFlowWrapper}>\r\n                    <ReactFlow\r\n                        nodeTypes={nodeTypes}\r\n                        elements={elements}\r\n                        onConnect={onConnect}\r\n                        onElementsRemove={onElementsRemove}\r\n                        onNodeDoubleClick={onElementDoubleClick}\r\n                        onEdgeDoubleClick={onElementDoubleClick}\r\n                        onLoad={onLoad}\r\n                        onDrop={onDrop}\r\n                        onDragOver={onDragOver}\r\n                        onNodeDragStop={onNodeDragStop}\r\n                        style={{\r\n                            width: '100%',\r\n                            height: 700,\r\n                        }}\r\n                    >\r\n                        <Controls/>\r\n                    </ReactFlow>\r\n                </div>\r\n                <Sidebar/>\r\n            </ReactFlowProvider>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DnDFlow;","import React from 'react'\r\n\r\n\r\nconst CustomFileWidget = (props: any) => {\r\n    const {schema} = props;\r\n    return (\r\n        <div>\r\n            <label className={\"form-label\"}>{schema?.title}</label>\r\n            <br/>\r\n            <input type=\"file\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomFileWidget","import React, {useEffect, useState} from 'react'\r\nimport Form from \"@rjsf/bootstrap-4\";\r\nimport {Button, Switch, TextField, Typography} from \"@material-ui/core\";\r\n\r\nimport CustomFileWidget from '../custom-widgets/file-widget/CustomFileWidget'\r\n\r\ntype FormProps = {\r\n    jsonSchema: string,\r\n    uiSchema: string,\r\n    formResponses: any,\r\n    onJsonChange: (schema: string) => void,\r\n    onUiChange: (schema: string) => void\r\n}\r\n\r\nconst Preview = ({jsonSchema, uiSchema, formResponses, onJsonChange, onUiChange}: FormProps) => {\r\n    const json_schema = JSON.parse(jsonSchema) ?? {}\r\n    const ui_schema = JSON.parse(uiSchema) ?? {}\r\n    const stage_data = JSON.stringify({...formResponses, json_schema: json_schema, ui_schema: ui_schema})\r\n    const [edit, setEdit] = useState(false)\r\n    const [localJson, setLocalJson] = useState('')\r\n    const [localUi, setLocalUi] = useState('')\r\n\r\n    const widgets = {\r\n        customfile: CustomFileWidget\r\n    };\r\n\r\n    useEffect(() => {\r\n        setLocalJson(jsonSchema)\r\n        setLocalUi(uiSchema)\r\n    }, [])\r\n\r\n    const copyToClipboard = () => {\r\n        navigator.clipboard.writeText(stage_data).then(() => console.log(\"success\")).catch(err => alert(err))\r\n    }\r\n\r\n    const handleJsonSchemaChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setLocalJson(event.target.value)\r\n    }\r\n\r\n    const handleUiSchemaChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setLocalUi(event.target.value)\r\n    }\r\n\r\n    const handleEditChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setEdit(event.target.checked)\r\n    }\r\n\r\n    const handleSave = () => {\r\n        console.log(localJson)\r\n        console.log(localUi)\r\n        onJsonChange(localJson)\r\n        onUiChange(localUi)\r\n    };\r\n\r\n    return (\r\n        <div style={{width: '70%', minWidth: '400px', margin: '0 auto', display: 'block', padding: 10}}>\r\n            <Form\r\n                schema={json_schema as any}\r\n                uiSchema={ui_schema}\r\n                widgets={widgets}\r\n                onSubmit={(formData) => console.log(formData.formData)}\r\n            />\r\n            <br/>\r\n            <Switch\r\n                checked={edit}\r\n                onChange={handleEditChange}\r\n                name=\"checkedA\"\r\n                inputProps={{'aria-label': 'secondary checkbox'}}\r\n            />\r\n            {edit && <Button color={\"primary\"} variant={\"contained\"} onClick={handleSave}>Save Schemas</Button>}\r\n            {edit && <Typography variant={\"h6\"} color={\"error\"}>\r\n                Осторожно: можно легко удалить всю проделанную работу\r\n            </Typography>}\r\n            <TextField\r\n                id=\"outlined-multiline-static\"\r\n                label=\"JSON\"\r\n                multiline\r\n                fullWidth\r\n                defaultValue=\"Default Value\"\r\n                variant=\"outlined\"\r\n                InputProps={{\r\n                    readOnly: !edit,\r\n                }}\r\n                value={localJson}\r\n                onChange={handleJsonSchemaChange}\r\n                style={{marginTop: 15, marginBottom: 15}}\r\n            />\r\n            <TextField\r\n                id=\"outlined-multiline-static\"\r\n                label=\"UI\"\r\n                multiline\r\n                fullWidth\r\n                defaultValue=\"Default Value\"\r\n                variant=\"outlined\"\r\n                InputProps={{\r\n                    readOnly: !edit,\r\n                }}\r\n                value={localUi}\r\n                onChange={handleUiSchemaChange}\r\n                style={{marginTop: 15, marginBottom: 30}}\r\n            />\r\n            <br/>\r\n            <Button onClick={copyToClipboard} variant={\"contained\"} color={\"primary\"} style={{marginBottom: 15}}>Copy\r\n                FUL STAGE to Clipboard</Button>\r\n            <TextField\r\n                id=\"outlined-multiline-static\"\r\n                label=\"FULL STAGE\"\r\n                multiline\r\n                fullWidth\r\n                defaultValue=\"Default Value\"\r\n                variant=\"outlined\"\r\n                InputProps={{\r\n                    readOnly: true,\r\n                }}\r\n                value={stage_data}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preview","import React from 'react'\r\n\r\nconst CardBody = (props: any) => {\r\n    const handleChange = (event: any) => {\r\n        props.onChange({...props.parameters, default: event.target.checked})\r\n    }\r\n    return (\r\n        <div>\r\n            <input type=\"checkbox\" id=\"multiple\"\r\n                   value={props.parameters.default}\r\n                   onChange={handleChange}\r\n            />\r\n            <label htmlFor=\"multiple\">Multiple files</label>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst CustomFileType = {\r\n    file: {\r\n        displayName: \"File\",\r\n        matchIf: [\r\n            {\r\n                types: [\"string\"],\r\n                widget: \"customfile\"\r\n            },\r\n        ],\r\n        defaultDataSchema: {},\r\n        defaultUiSchema: {\r\n            \"ui:widget\": \"customfile\"\r\n        },\r\n        type: \"string\",\r\n        // cardBody: CardBody,\r\n        // modalBody: (parameters: any, onChange: any) => <div>\r\n        //     Extra editing options in modal appear hear\r\n        // </div>,\r\n    }\r\n};\r\n\r\nexport default CustomFileType","import React, {useEffect, useState} from \"react\";\r\n// @ts-ignore\r\nimport {FormBuilder} from '@ginkgo-bioworks/react-json-schema-form-builder';\r\nimport Form from \"@rjsf/bootstrap-4\";\r\nimport StageOptions from '../../json-schema/StageOptions_v2.json'\r\nimport {useParams} from \"react-router-dom\";\r\nimport {JSONSchema7} from \"json-schema\";\r\nimport PreviewStage from './PreviewStage'\r\nimport CustomFileType from '../custom-widgets/file-widget/CustomFileType'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from \"../../util/Axios\";\r\nimport {chainsUrl, taskstagesUrl} from \"../../util/Urls\";\r\nimport {IconButton} from \"@material-ui/core\";\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\n\r\ntype RouterParams = { id: string, chainId: string }\r\ntype ChainProps = { id: number, name: string, description: string, campaign: number }\r\n\r\nconst Builder = () => {\r\n    let {id, chainId} = useParams<RouterParams>();\r\n\r\n    const [schema, setSchema] = useState('')\r\n    const [uiSchema, setUiSchema] = useState('')\r\n    const [optionsSchema, setOptionsSchema] = useState(StageOptions)\r\n    const [formResponses, setFormResponses] = useState({})\r\n    const [preview, setPreview] = useState(false)\r\n\r\n    useEffect(() => {\r\n        const getStage = () => {\r\n            axios.get(taskstagesUrl + id + '/')\r\n                .then(res => res.data)\r\n                .then(res => {\r\n                    const {id, json_schema, ui_schema, ...options} = res\r\n                    let parse_json_schema = JSON.stringify(json_schema)\r\n                    let parse_ui_schema = JSON.stringify(ui_schema)\r\n                    setSchema(parse_json_schema)\r\n                    setUiSchema(parse_ui_schema)\r\n                    setFormResponses(options)\r\n                })\r\n        }\r\n        if (id) {\r\n            getStage()\r\n        }\r\n    }, [id])\r\n\r\n    const handleSubmit = () => {\r\n        let json_schema = null\r\n        let ui_schema = null\r\n        if (schema && uiSchema) {\r\n            json_schema = JSON.parse(schema)\r\n            ui_schema = JSON.parse(uiSchema)\r\n        }\r\n\r\n        let data = {...formResponses, json_schema: json_schema, ui_schema: ui_schema}\r\n        console.log(data)\r\n\r\n        axios\r\n            .patch(taskstagesUrl + id + '/', data)\r\n            .then((res: any) => alert(\"Saved\"))\r\n            .catch((err: any) => alert(err));\r\n    }\r\n\r\n    const changePreviewMode = () => {\r\n        setPreview(p => !p)\r\n    }\r\n\r\n    const handleJsonSchemaChange = (schema: string) => {\r\n        // let parsed = JSON.parse(schema)\r\n        setSchema(schema)\r\n    }\r\n\r\n    const handleUiSchemaChange = (schema: string) => {\r\n        // let parsed = JSON.parse(schema)\r\n        setUiSchema(schema)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <IconButton style={{float: 'right'}} onClick={changePreviewMode}>\r\n                {!preview ?\r\n                    <VisibilityIcon fontSize={\"large\"}/>\r\n                    :\r\n                    <VisibilityOffIcon fontSize={\"large\"}/>\r\n                }\r\n\r\n            </IconButton>\r\n            {!preview ?\r\n                <div>\r\n                    <FormBuilder\r\n                        schema={schema}\r\n                        uischema={uiSchema}\r\n                        onChange={(newSchema: string, newUiSchema: string) => {\r\n                            setSchema(newSchema)\r\n                            setUiSchema(newUiSchema)\r\n                        }}\r\n                        mods={\r\n                            {\r\n                                customFormInputs: {...CustomFileType}\r\n                            }\r\n                        }\r\n                    />\r\n                    <div style={{width: '70%', minWidth: '400px', margin: '0 auto', display: 'block', padding: 10}}>\r\n                        <Form\r\n                            schema={optionsSchema as JSONSchema7}\r\n                            formData={formResponses}\r\n                            onChange={(e: { formData: object }) => setFormResponses(e.formData)}\r\n                            onSubmit={handleSubmit}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                :\r\n                <PreviewStage\r\n                    jsonSchema={schema}\r\n                    uiSchema={uiSchema}\r\n                    formResponses={formResponses}\r\n                    onJsonChange={handleJsonSchemaChange}\r\n                    onUiChange={handleUiSchemaChange}\r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Builder\r\n\r\n\r\n","import {retrieveSchema, toPathSchema, toIdSchema, resolveSchema} from \"@rjsf/core/lib/utils\";\r\nimport _get from \"lodash/get\";\r\nimport _isEmpty from \"lodash/isEmpty\";\r\n\r\nconst getFormFields = (schema, formData = {}, uiSchema) => {\r\n    const retrievedSchema = retrieveSchema(\r\n        schema\r\n    );\r\n\r\n    const pathSchema = toPathSchema(\r\n        retrievedSchema,\r\n        \"\",\r\n        schema,\r\n        formData\r\n    );\r\n    // let resolvedSchema = resolveSchema(schema);\r\n    // console.log(\"resolvedSchema: \", resolvedSchema)\r\n    // const idSchema = toIdSchema(\r\n    //   retrievedSchema,\r\n    //   uiSchema[\"ui:rootFieldId\"],\r\n    //   schema,\r\n    //   formData,\r\n    //   'root_newInput1_newInput1_test2'\r\n    // );\r\n    //\r\n    // console.log(idSchema)\r\n\r\n    const getFieldNames = (pathSchema, formData) => {\r\n        const getAllPaths = (_obj, acc = [], paths = [\"\"]) => {\r\n            Object.keys(_obj).forEach(key => {\r\n                if (typeof _obj[key] === \"object\") {\r\n                    let newPaths = paths.map(path => `${path}.${key}`);\r\n                    // If an object is marked with additionalProperties, all its keys are valid\r\n                    if (_obj[key].__rjsf_additionalProperties && _obj[key].$name !== \"\") {\r\n                        acc.push(_obj[key].$name);\r\n                    } else {\r\n                        getAllPaths(_obj[key], acc, newPaths);\r\n                    }\r\n                } else if (key === \"$name\" && _obj[key] !== \"\") {\r\n                    paths.forEach(path => {\r\n                        path = path.replace(/^\\./, \"\");\r\n                        const formValue = _get(formData, path);\r\n                        // adds path to fieldNames if it points to a value\r\n                        // or an empty object/array\r\n                        if (typeof formValue !== \"object\" || _isEmpty(formValue)) {\r\n                            acc.push(path);\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n            return acc;\r\n        };\r\n        return getAllPaths(pathSchema);\r\n    };\r\n\r\n    const fieldNames = getFieldNames(pathSchema, formData);\r\n    // console.log(\"retrievedSchema\", retrievedSchema)\r\n    // console.log(\"pathSchema\", pathSchema)\r\n    // console.log(\"fieldNames\", fieldNames)\r\n\r\n    return fieldNames\r\n}\r\n\r\nexport default getFormFields","import React, {useEffect, useState} from \"react\";\r\nimport firebase from '../../util/Firebase'\r\nimport Form from \"@rjsf/bootstrap-4\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {JSONSchema7} from \"json-schema\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Grid} from \"@material-ui/core\";\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport axios from '../../util/Axios'\r\nimport {conditionalstagesUrl, taskstagesUrl} from \"../../util/Urls\";\r\nimport GetFormFields from './GetFormFields'\r\nimport getFormFields from \"./GetFormFields\";\r\n\r\ntype RouterParams = { id: string }\r\n\r\nconst Builder = () => {\r\n    const {id} = useParams<RouterParams>();\r\n\r\n    const [ready, setReady] = useState(false)\r\n    const [fields, setFields] = useState<string[]>([]);\r\n    const [schema, setSchema] = useState<{}>({})\r\n    const [uiSchema, setUiSchema] = useState({\r\n        logic_array: {\r\n            items: {\r\n                'ui:order': [\r\n                    'field',\r\n                    'condition',\r\n                    'value'\r\n                ]\r\n            }\r\n        },\r\n        'ui:order': [\r\n            'logic_array'\r\n        ]\r\n    })\r\n    const [formResponses, setFormResponses] = useState({})\r\n    const [connectedStages, setConnectedStages] = useState<any[]>()\r\n    const [pingPong, setPingPong] = useState<boolean>(false)\r\n\r\n    useEffect(() => {\r\n        axios.get(conditionalstagesUrl + id + '/').then(res => res.data).then(currentStage => {\r\n            setFormResponses(currentStage.conditions)\r\n            setPingPong(currentStage.pingpong)\r\n            console.log(\"PING PONG\", currentStage.pingpong)\r\n        })\r\n    }, [id])\r\n\r\n    useEffect(() => {\r\n        const getStage = (stageId?: number | string) => {\r\n            if (stageId) {\r\n                let taskStage = axios.get(taskstagesUrl + stageId + '/').then(res => res.data)\r\n                if (taskStage) {\r\n                    return taskStage\r\n                } else {\r\n                    return axios.get(conditionalstagesUrl + stageId + '/').then(res => res.data)\r\n                }\r\n            }\r\n            return axios.get(conditionalstagesUrl + id + '/').then(res => res.data)\r\n        }\r\n\r\n        const getConnectedStages = async (ids: number[]) => {\r\n            return ids.map(async connId => {\r\n                let stage = await getStage(connId)\r\n                return {[connId]: stage}\r\n            })\r\n        }\r\n\r\n        const getData = async () => {\r\n            let currentStage = await getStage()\r\n\r\n            let connectedIds = undefined\r\n            if (pingPong) {\r\n                connectedIds = currentStage.out_stages\r\n            } else {\r\n                connectedIds = currentStage.in_stages\r\n            }\r\n            if (connectedIds) {\r\n                let connStages = await getConnectedStages(connectedIds)\r\n                Promise.all(connStages).then(res => {\r\n                    if (Object.keys(res).length > 0) {\r\n                        setConnectedStages(res)\r\n                        setReady(true)\r\n                    }\r\n                })\r\n            }\r\n        }\r\n\r\n        if (id) {\r\n            getData()\r\n        }\r\n\r\n    }, [id, pingPong])\r\n\r\n    useEffect(() => {\r\n        const getDependentFields = (dep: any) => {\r\n            let data = null\r\n            if (dep.hasOwnProperty(\"oneOf\")) {\r\n                data = dep.oneOf\r\n            }\r\n            if (dep.hasOwnProperty(\"allOf\")) {\r\n                data = dep.allOf\r\n            }\r\n            if (data) {\r\n                let nestedFields = data.map((nested: any) => {\r\n                    let fiction = {type: \"object\", ...nested}\r\n                    let localFields = getFormFields(fiction)\r\n                    return localFields\r\n                }).flat()\r\n                return nestedFields\r\n            }\r\n            return []\r\n        }\r\n\r\n        if (connectedStages && connectedStages.length > 0) {\r\n            const allFields = connectedStages.map(stageObject => {\r\n                let stage = Object.values(stageObject)[0] as any\r\n                let ui = stage.ui_schema\r\n                let sc = stage.json_schema\r\n                let deps = sc.dependencies ?? {}\r\n                let depValues = Object.values(deps)\r\n                let stageFields = GetFormFields(sc)\r\n                if (depValues.length > 0) {\r\n                    let depFields = depValues.map((dep: any) => getDependentFields(dep)).flat()\r\n                    stageFields = Array.from(new Set([...fields, ...depFields]))\r\n                }\r\n                console.log(stage)\r\n                console.log(\"Fields\", fields)\r\n                return stageFields\r\n            }).flat()\r\n            setFields(allFields)\r\n        }\r\n    }, [pingPong, connectedStages])\r\n\r\n    useEffect(() => {\r\n        setSchema({\r\n            items: {\r\n                type: 'object',\r\n                title: 'Logic',\r\n                properties: {\r\n                    field: {\r\n                        enum: fields,\r\n                        title: 'Field',\r\n                        type: 'string'\r\n                    },\r\n                    condition: {\r\n                        enum: [\r\n                            '==',\r\n                            '!=',\r\n                            '>',\r\n                            '<',\r\n                            '>=',\r\n                            '<=',\r\n                            'ARRAY-CONTAINS',\r\n                            'ARRAY-CONTAINS-NOT'\r\n                        ],\r\n                        title: 'Condition',\r\n                        type: 'string'\r\n                    },\r\n                    value: {\r\n                        title: 'Value',\r\n                        type: 'string'\r\n                    }\r\n                },\r\n                dependencies: {},\r\n                required: []\r\n            },\r\n            title: 'Logic Array',\r\n            type: 'array',\r\n            dependencies: {},\r\n            required: []\r\n        })\r\n    }, [fields])\r\n\r\n    const handleSubmit = () => {\r\n        let data = {conditions: formResponses, pingpong: pingPong}\r\n        console.log(formResponses)\r\n\r\n        axios\r\n            .patch(conditionalstagesUrl + id + '/', data)\r\n            .then((res: any) => alert(\"Saved\"))\r\n            .catch((err: any) => alert(err));\r\n    }\r\n\r\n    const handleChangePingPong = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setPingPong(event.target.checked);\r\n    }\r\n\r\n    return (\r\n        <div style={{width: '70%', minWidth: '400px', margin: '0 auto', display: 'block', padding: 10}}>\r\n            {ready ?\r\n                <div>\r\n                    <FormControlLabel\r\n                        control={<Checkbox checked={pingPong} onChange={handleChangePingPong} name=\"PingPong\"\r\n                                           color=\"primary\"/>}\r\n                        label=\"Ping Pong\"\r\n                    />\r\n                    <Form\r\n                        schema={schema as JSONSchema7}\r\n                        formData={formResponses}\r\n                        onChange={(e: { formData: object }) => setFormResponses(e.formData)}\r\n                        onSubmit={handleSubmit}/>\r\n                </div>\r\n                :\r\n                <p>No node connection or end_ui detected. Connect to one or check if form has fields.</p>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Builder\r\n\r\n\r\n","import React, {useEffect, useState} from \"react\";\r\nimport firebase from '../../util/Firebase'\r\nimport {\r\n    useHistory,\r\n    useParams\r\n} from \"react-router-dom\";\r\n\r\nimport {\r\n    Button,\r\n    FormControl,\r\n    Grid,\r\n    Select,\r\n    InputLabel,\r\n    MenuItem,\r\n    createStyles,\r\n    makeStyles,\r\n    Theme\r\n} from '@material-ui/core'\r\nimport axios from \"../../util/Axios\";\r\n\r\nimport {casesUrl, tasksUrl} from '../../util/Urls'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        formControl: {\r\n            margin: theme.spacing(1),\r\n            minWidth: 150,\r\n        },\r\n        selectEmpty: {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n    }));\r\n\r\ntype RouterParams = { id: string, chainId: string }\r\n\r\nconst Builder = () => {\r\n    let {id, chainId} = useParams<RouterParams>();\r\n    const history = useHistory();\r\n\r\n    const handleCreateStage = () => {\r\n        let location = history.location.pathname.split('/actions')[0]\r\n        console.log(location)\r\n        history.push(`${location}/createstage/${id}`)\r\n    }\r\n\r\n    const handleCreateTask = async () => {\r\n        let location = history.location.pathname.split('/actions')[0]\r\n        let caseData = await axios.post(casesUrl, {chain: chainId})\r\n            .then(res => res.data)\r\n        console.log(caseData)\r\n        let taskData = await axios.post(tasksUrl, {case: caseData.id, stage: id})\r\n            .then(res => res.data)\r\n        console.log(taskData)\r\n        history.push(`${location}/task/${taskData.id}`)\r\n    }\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid container justify=\"center\" style={{background: '#7FB3D5'}} component={\"div\"}>\r\n                <Grid item style={{margin: 20}}>\r\n                    <Button onClick={handleCreateStage}>Create Form</Button>\r\n                </Grid>\r\n                <Grid item style={{margin: 20}}>\r\n                    <Button onClick={handleCreateTask}>Create Task (for test)</Button>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Builder","import React, {useEffect, useState} from \"react\";\r\nimport Form from \"@rjsf/bootstrap-4\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport axios from \"../../util/Axios\";\r\nimport {casesUrl, taskstagesUrl, tasksUrl} from '../../util/Urls'\r\n\r\ntype RouterParams = { id: string }\r\n\r\nconst Builder = () => {\r\n    const [schema, setSchema] = useState({})\r\n    const [uiSchema, setUiSchema] = useState({})\r\n    const [formResponses, setFormResponses] = useState({})\r\n    let {id} = useParams<RouterParams>();\r\n\r\n    useEffect(() => {\r\n        const getTask = () => {\r\n            return axios.get(tasksUrl + id).then(res => res.data)\r\n        }\r\n        const getStage = (stageId: string | number) => {\r\n            return axios.get(taskstagesUrl + stageId).then(res => res.data)\r\n        }\r\n        const setFormData = async () => {\r\n            let task = await getTask()\r\n            let stage = await getStage(task.stage)\r\n            console.log(task, stage)\r\n            setFormResponses(task.responses)\r\n            setSchema(stage.json_schema)\r\n            setUiSchema(stage.ui_schema)\r\n        }\r\n        if (id) {\r\n            setFormData()\r\n        }\r\n    }, [id])\r\n\r\n    const handleSubmit = () => {\r\n        console.log(formResponses)\r\n        let data = {responses: formResponses}\r\n        axios.patch(tasksUrl + id, data)\r\n        // .then(res => res.data)\r\n        // .then(res => {\r\n        //     console.log(res)\r\n        //     setFormResponses(res.responses)\r\n        //     setSchema(res.stage.json_schema)\r\n        //     setUiSchema(res.stage.ui_schema)\r\n        // })\r\n    }\r\n\r\n    return (\r\n        <div style={{width: '70%', minWidth: '400px', margin: '0 auto', display: 'block', padding: 10}}>\r\n            <Form schema={schema} uiSchema={uiSchema} formData={formResponses}\r\n                  onChange={(e) => setFormResponses(e.formData)} onSubmit={handleSubmit}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Builder\r\n\r\n\r\n","import React, {useEffect, useState} from \"react\";\r\nimport firebase from \"./Firebase\";\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nexport const AuthProvider = ({children}) => {\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged((user) => {\r\n            if (user) {\r\n                setCurrentUser(user)\r\n                user.getIdToken(true).then((idToken) => {\r\n                    localStorage.setItem(\"token\", idToken);\r\n                })\r\n            }\r\n        });\r\n        firebase.auth().onIdTokenChanged(user => {\r\n            if (user) {\r\n                user.getIdToken(false).then((idToken) => {\r\n                    localStorage.setItem(\"token\", idToken);\r\n                })\r\n            }\r\n        })\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n            value={{\r\n                currentUser\r\n            }}\r\n        >\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n","import React, {useContext, useState, useEffect} from 'react';\r\nimport clsx from 'clsx';\r\nimport {createStyles, makeStyles, Theme, useTheme} from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\n\r\nimport {\r\n    MenuItem,\r\n    Select,\r\n    FormControl,\r\n    InputLabel,\r\n    AppBar,\r\n    Button,\r\n    CssBaseline,\r\n    Drawer,\r\n    IconButton,\r\n    List,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    Toolbar,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport {signInWithGoogle, signOut} from '../../util/Firebase';\r\nimport {AuthContext} from \"../../util/Auth\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport axios from '../../util/Axios';\r\n\r\nimport {campaignsUrl} from '../../util/Urls';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            display: 'flex',\r\n        },\r\n        appBar: {\r\n            zIndex: theme.zIndex.drawer + 1,\r\n            transition: theme.transitions.create(['width', 'margin'], {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen,\r\n            }),\r\n        },\r\n        appBarShift: {\r\n            marginLeft: drawerWidth,\r\n            width: `calc(100% - ${drawerWidth}px)`,\r\n            transition: theme.transitions.create(['width', 'margin'], {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n        },\r\n        menuButton: {\r\n            marginRight: 36,\r\n        },\r\n        hide: {\r\n            display: 'none',\r\n        },\r\n        drawer: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n            whiteSpace: 'nowrap',\r\n        },\r\n        drawerOpen: {\r\n            width: drawerWidth,\r\n            transition: theme.transitions.create('width', {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n        },\r\n        drawerClose: {\r\n            transition: theme.transitions.create('width', {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen,\r\n            }),\r\n            overflowX: 'hidden',\r\n            width: theme.spacing(7) + 1,\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: theme.spacing(9) + 1,\r\n            },\r\n        },\r\n        toolbar: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'flex-end',\r\n            padding: theme.spacing(0, 1),\r\n            // necessary for content to be below app bar\r\n            ...theme.mixins.toolbar,\r\n        },\r\n        content: {\r\n            flexGrow: 1,\r\n            // padding: theme.spacing(3),\r\n        },\r\n        title: {\r\n            flexGrow: 1\r\n        },\r\n        formControl: {\r\n            margin: theme.spacing(1),\r\n            alignItems: 'center'\r\n            // minWidth: 120,\r\n        },\r\n        selectEmpty: {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n        select: {},\r\n        selectIcon: {\r\n            fill: 'white',\r\n            top: 'calc(50% - 14px)'\r\n        },\r\n    }),\r\n);\r\n\r\ntype AppbarProps = { children: React.ReactNode }\r\ntype CampaingParams = { id: number, name: string, description?: string };\r\n\r\nconst Appbar = (props: AppbarProps) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const history = useHistory();\r\n    const {campaignId} = useParams<{ campaignId: string }>();\r\n    const {currentUser} = useContext(AuthContext)\r\n    const {children} = props;\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [campaign, setCampaign] = useState<number | string | unknown>(campaignId);\r\n    const [allCampaigns, setAllCampaigns] = useState<CampaingParams[]>([])\r\n\r\n    console.log(\"CURRENT CAMPAIGN\", campaignId)\r\n\r\n    useEffect(() => {\r\n        axios.get(campaignsUrl)\r\n            .then(res => res.data)\r\n            .then(res => {\r\n                console.log(res)\r\n                setAllCampaigns(res)\r\n            })\r\n    }, [])\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleOptionClick = (page: string) => {\r\n        history.push(`/campaign/${campaignId}/${page}`)\r\n    };\r\n\r\n    const handleCampaignChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n        let value = event.target.value;\r\n        console.log(value)\r\n        setCampaign(value)\r\n        history.push(`/campaign/${value}`)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline/>\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, {\r\n                            [classes.hide]: open,\r\n                        })}\r\n                    >\r\n                        <MenuIcon/>\r\n                    </IconButton>\r\n                    <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                        GigaTurnip Admin\r\n                    </Typography>\r\n                    <FormControl className={classes.formControl} size=\"small\">\r\n                        <Select\r\n                            className={classes.select}\r\n                            autoWidth\r\n                            labelId=\"campaign-select-label\"\r\n                            id=\"campaign-select-label\"\r\n                            value={campaign}\r\n                            onChange={handleCampaignChange}\r\n                            label=\"Campaign\"\r\n                            disableUnderline\r\n                            style={{color: 'white'}}\r\n                            inputProps={{\r\n                                classes: {\r\n                                    icon: classes.selectIcon,\r\n                                },\r\n                            }}\r\n                        >\r\n                            {allCampaigns.map(camp => <MenuItem key={`${camp.name}_${camp.id}`} value={camp.id}>{camp.name}</MenuItem>)}\r\n                        </Select>\r\n                    </FormControl>\r\n                    {currentUser ?\r\n                        <Button onClick={signOut} color={\"inherit\"}>\r\n                            Log out\r\n                        </Button>\r\n                        :\r\n                        <Button onClick={signInWithGoogle} color={\"inherit\"}>\r\n                            Login\r\n                        </Button>\r\n                    }\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                variant=\"permanent\"\r\n                className={clsx(classes.drawer, {\r\n                    [classes.drawerOpen]: open,\r\n                    [classes.drawerClose]: !open,\r\n                })}\r\n                classes={{\r\n                    paper: clsx({\r\n                        [classes.drawerOpen]: open,\r\n                        [classes.drawerClose]: !open,\r\n                    }),\r\n                }}\r\n            >\r\n                <div className={classes.toolbar}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === 'rtl' ? <ChevronRightIcon/> : <ChevronLeftIcon/>}\r\n                    </IconButton>\r\n                </div>\r\n                <Divider/>\r\n                <List>\r\n                    <ListItem button onClick={() => handleOptionClick(\"chain\")}>\r\n                        <ListItemIcon><InboxIcon/></ListItemIcon>\r\n                        <ListItemText primary={\"Chains\"}/>\r\n                    </ListItem>\r\n                </List>\r\n            </Drawer>\r\n            <main className={classes.content}>\r\n                <div className={classes.toolbar}/>\r\n                {children}\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Appbar\r\n","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 300,\r\n        // height: 200\r\n    },\r\n    extra: {\r\n        marginBottom: 15\r\n    }\r\n});\r\n\r\ntype CardProps = { chain: { id: number, campaign: number, name: string, description?: string } }\r\n\r\nconst ChainCard = (props: CardProps) => {\r\n    const classes = useStyles();\r\n    const {id, campaign, name, description} = props.chain;\r\n    const history = useHistory()\r\n\r\n    const handleOpen = () => {\r\n        history.push(`${history.location.pathname}/${id}`)\r\n    }\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardContent>\r\n                <Typography variant=\"h5\" component=\"h2\" gutterBottom={true}>\r\n                    {name}\r\n                </Typography>\r\n                <Typography className={classes.extra} variant=\"subtitle2\" color=\"textSecondary\">\r\n                    ID: {id} Campaign: {campaign}\r\n                </Typography>\r\n                <Typography variant=\"body1\" component=\"p\">\r\n                    {description ? description : <br/>}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                <Button size=\"small\" onClick={handleOpen}>Open</Button>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default ChainCard","import React, {useState} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport {blue} from '@material-ui/core/colors';\r\nimport {DialogActions, DialogContent, Grid, TextField} from \"@material-ui/core\";\r\nimport {NewChainParams} from \"./Chains\";\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    avatar: {\r\n        backgroundColor: blue[100],\r\n        color: blue[600],\r\n    },\r\n});\r\n\r\ntype ChainDialogProps = {\r\n    open: boolean;\r\n    onClose: () => void;\r\n    onSave: (data: NewChainParams) => void;\r\n}\r\n\r\ntype RouterParams = {campaignId: string}\r\n\r\nconst AddChainDialog = (props: ChainDialogProps) => {\r\n    const classes = useStyles();\r\n    const {campaignId} = useParams<RouterParams>();\r\n\r\n    const {onClose, onSave, open} = props;\r\n\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [campaign, setCampaign] = useState(campaignId)\r\n\r\n    const handleClose = () => {\r\n        onClose();\r\n    };\r\n\r\n    const handleSave = () => {\r\n        if (name && campaign) {\r\n            let parsedCampaign = parseInt(campaign)\r\n            let data = {name, description, campaign: parsedCampaign}\r\n            onSave(data)\r\n        }\r\n    }\r\n\r\n    const handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        let value = event.target.value\r\n        if (value) {\r\n            setName(value)\r\n        }\r\n        else {\r\n            setName('')\r\n        }\r\n    };\r\n\r\n    const handleDescriptionChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        let value = event.target.value\r\n        if (value) {\r\n            setDescription(value)\r\n        }\r\n        else {\r\n            setDescription('')\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n            <DialogTitle>Add Chain</DialogTitle>\r\n            <DialogContent>\r\n                <Grid container justify={\"center\"}>\r\n                    <Grid container item><TextField fullWidth label={\"Name\"} onChange={handleNameChange}/></Grid>\r\n                    <Grid container item>\r\n                        <TextField fullWidth label={\"Description\"} multiline rows={4} onChange={handleDescriptionChange}/>\r\n                    </Grid>\r\n                </Grid>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleSave}>Save</Button>\r\n                <Button onClick={handleClose}>Close</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default AddChainDialog","import React, {useEffect, useState} from \"react\";\r\nimport {\r\n    useHistory,\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport axios from \"../../util/Axios\";\r\nimport {Button, Grid, Typography} from \"@material-ui/core\";\r\nimport Card from \"./ChainCard\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport AddChainDialog from \"./Dialog\";\r\nimport {chainsUrl} from '../../util/Urls'\r\n\r\ntype RouterParams = {campaignId: string}\r\ntype ChainParams = { id: number, campaign: number, name: string, description?: string };\r\nexport type NewChainParams = { campaign: number, name: string, description?: string }\r\n\r\nconst Builder = () => {\r\n    const [chains, setChains] = useState<ChainParams[]>([])\r\n    const [open, setOpen] = useState(false);\r\n    const {campaignId} = useParams<RouterParams>()\r\n\r\n    useEffect(() => {\r\n        axios.get(chainsUrl)\r\n            .then(res => res.data)\r\n            .then(res => {\r\n                console.log(res)\r\n                const filtered = res.filter((chain: {campaign: number, name: string, description: string, id: number}) => chain.campaign?.toString() == campaignId)\r\n                setChains(filtered)\r\n            })\r\n    }, [])\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleDialogSave = (data: NewChainParams) => {\r\n        setOpen(false);\r\n        handleAddChain(data)\r\n    }\r\n\r\n    const handleAddChain = (data: NewChainParams) => {\r\n        console.log(data)\r\n        axios.post(chainsUrl, data)\r\n            .then(res => {\r\n                console.log(res)\r\n                window.location.reload(false);\r\n            })\r\n    };\r\n\r\n    return (\r\n        <Grid container justify={\"center\"}>\r\n            <AddChainDialog open={open} onSave={handleDialogSave} onClose={handleClose}/>\r\n            <Grid container style={{padding: 20}}>\r\n                <Button variant={\"contained\"} color={\"primary\"} startIcon={<AddIcon/>} onClick={handleClickOpen}>Add Chain</Button>\r\n            </Grid>\r\n            {chains.map(chain => (\r\n                <Grid item style={{padding: 10}}>\r\n                    <Card key={chain.id} chain={chain}/>\r\n                </Grid>\r\n            ))}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Builder\r\n\r\n\r\n","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 300,\r\n        // height: 200\r\n    },\r\n    extra: {\r\n        marginBottom: 15\r\n    }\r\n});\r\n\r\ntype CardProps = { chain: { id: number, name: string, description?: string } }\r\n\r\nconst ChainCard = (props: CardProps) => {\r\n    const classes = useStyles();\r\n    const {id, name, description} = props.chain;\r\n    const history = useHistory()\r\n\r\n    const handleOpen = () => {\r\n        history.push(`/campaign/${id}`)\r\n    }\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardContent>\r\n                <Typography variant=\"h5\" component=\"h2\" gutterBottom={true}>\r\n                    {name}\r\n                </Typography>\r\n                <Typography className={classes.extra} variant=\"subtitle2\" color=\"textSecondary\">\r\n                    ID: {id}\r\n                </Typography>\r\n                <Typography variant=\"body1\" component=\"p\">\r\n                    {description ? description : <br/>}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                <Button size=\"small\" onClick={handleOpen}>Open</Button>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default ChainCard","import React, {useState} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport {blue} from '@material-ui/core/colors';\r\nimport {DialogActions, DialogContent, Grid, TextField} from \"@material-ui/core\";\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    avatar: {\r\n        backgroundColor: blue[100],\r\n        color: blue[600],\r\n    },\r\n});\r\n\r\ntype ChainDialogProps = {\r\n    open: boolean;\r\n    onClose: () => void;\r\n    onSave: (data: any) => void;\r\n}\r\n\r\nconst AddCampaignDialog = (props: ChainDialogProps) => {\r\n    const classes = useStyles();\r\n    const {onClose, onSave, open} = props;\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [campaign, setCampaign] = useState<number>();\r\n\r\n    const handleClose = () => {\r\n        onClose();\r\n    };\r\n\r\n    const handleSave = () => {\r\n        if (name) {\r\n            let data = {name, description, campaign}\r\n            onSave(data)\r\n        }\r\n        else {\r\n            alert('error: No name')\r\n        }\r\n    }\r\n\r\n    const handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        let value = event.target.value\r\n        if (value) {\r\n            setName(value)\r\n        }\r\n        else {\r\n            setName('')\r\n        }\r\n    };\r\n\r\n    const handleDescriptionChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        let value = event.target.value\r\n        if (value) {\r\n            setDescription(value)\r\n        }\r\n        else {\r\n            setDescription('')\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n            <DialogTitle>Add Chain</DialogTitle>\r\n            <DialogContent>\r\n                <Grid container justify={\"center\"}>\r\n                    <Grid container item><TextField fullWidth label={\"Name\"} onChange={handleNameChange}/></Grid>\r\n                    <Grid container item>\r\n                        <TextField fullWidth label={\"Description\"} multiline rows={4} onChange={handleDescriptionChange}/>\r\n                    </Grid>\r\n                </Grid>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleSave}>Save</Button>\r\n                <Button onClick={handleClose}>Close</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default AddCampaignDialog","import React, {useEffect, useState} from \"react\";\r\nimport axios from \"../../util/Axios\";\r\nimport {Button, Grid} from \"@material-ui/core\";\r\nimport Card from \"./CampaignCard\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport AddChainDialog from \"./Dialog\";\r\nimport {campaignsUrl} from \"../../util/Urls\"\r\n\r\ntype CampaingParams = { id: number, name: string, description?: string };\r\nexport type NewCampaignParams = { name: string, description?: string }\r\n\r\nconst Builder = () => {\r\n    const [campaigns, setCampaigns] = useState<CampaingParams[]>([])\r\n    const [open, setOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        axios.get(campaignsUrl)\r\n            .then(res => res.data)\r\n            .then(res => {\r\n                console.log(res)\r\n                setCampaigns(res)\r\n            })\r\n    }, [])\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleDialogSave = (data: NewCampaignParams) => {\r\n        setOpen(false);\r\n        handleCampaignAdd(data)\r\n    }\r\n\r\n    const handleCampaignAdd = (data: NewCampaignParams) => {\r\n        axios.post(campaignsUrl, data)\r\n            .then(res => {\r\n                console.log(res)\r\n                window.location.reload(false);\r\n            })\r\n    };\r\n\r\n    return (\r\n        <Grid container justify={\"center\"}>\r\n            <AddChainDialog open={open} onSave={handleDialogSave} onClose={handleClose}/>\r\n            <Grid container style={{padding: 20}}>\r\n                <Button variant={\"contained\"} color={\"primary\"} startIcon={<AddIcon/>} onClick={handleClickOpen}>Add Campaign</Button>\r\n            </Grid>\r\n            {campaigns.map(campaign => (\r\n                <Grid item style={{padding: 10}}>\r\n                    <Card key={campaign.id} chain={campaign}/>\r\n                </Grid>\r\n            ))}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Builder\r\n\r\n\r\n","import React, {useContext} from 'react';\r\nimport clsx from 'clsx';\r\nimport {createStyles, makeStyles, Theme, useTheme} from '@material-ui/core/styles';\r\nimport {AppBar, Button, CssBaseline, Toolbar, Typography} from \"@material-ui/core\";\r\nimport {signInWithGoogle, signOut} from '../../util/Firebase';\r\nimport {AuthContext} from \"../../util/Auth\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            display: 'flex',\r\n        },\r\n        appBar: {\r\n            zIndex: theme.zIndex.drawer + 1,\r\n            transition: theme.transitions.create(['width', 'margin'], {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen,\r\n            }),\r\n        },\r\n        appBarShift: {\r\n            marginLeft: drawerWidth,\r\n            width: `calc(100% - ${drawerWidth}px)`,\r\n            transition: theme.transitions.create(['width', 'margin'], {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n        },\r\n        menuButton: {\r\n            marginRight: 36,\r\n        },\r\n        hide: {\r\n            display: 'none',\r\n        },\r\n        drawer: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n            whiteSpace: 'nowrap',\r\n        },\r\n        drawerOpen: {\r\n            width: drawerWidth,\r\n            transition: theme.transitions.create('width', {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n        },\r\n        drawerClose: {\r\n            transition: theme.transitions.create('width', {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen,\r\n            }),\r\n            overflowX: 'hidden',\r\n            width: theme.spacing(7) + 1,\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: theme.spacing(9) + 1,\r\n            },\r\n        },\r\n        toolbar: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'flex-end',\r\n            padding: theme.spacing(0, 1),\r\n            // necessary for content to be below app bar\r\n            ...theme.mixins.toolbar,\r\n        },\r\n        content: {\r\n            flexGrow: 1,\r\n            // padding: theme.spacing(3),\r\n        },\r\n        title: {\r\n            flexGrow: 1\r\n        }\r\n    }),\r\n);\r\n\r\ntype AppbarProps = { children: React.ReactNode }\r\n\r\nconst Appbar = (props: AppbarProps) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n    const {children} = props;\r\n    const {currentUser} = useContext(AuthContext)\r\n    const history = useHistory();\r\n    const {campaignId} = useParams<{campaignId: string}>();\r\n\r\n    console.log(campaignId)\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleOptionClick = (page: string) => {\r\n        history.push(`/campaign/${campaignId}/${page}`)\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline/>\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n                <Toolbar>\r\n                    <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                        GigaTurnip Admin\r\n                    </Typography>\r\n                    {currentUser ?\r\n                        <Button onClick={signOut} color={\"inherit\"}>\r\n                            Log out\r\n                        </Button>\r\n                        :\r\n                        <Button onClick={signInWithGoogle} color={\"inherit\"}>\r\n                            Login\r\n                        </Button>\r\n                    }\r\n                </Toolbar>\r\n            </AppBar>\r\n            <main className={classes.content}>\r\n                <div className={classes.toolbar}/>\r\n                {children}\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Appbar\r\n","import React, {useContext} from \"react\";\r\nimport Graph from './components/graph/Graph'\r\nimport StageBuilder from './components/form-builders/StageBuilder'\r\nimport LogicBuilder from './components/form-builders/LogicBuilder'\r\nimport Actions from './components/actions/Actions'\r\nimport Task from './components/task/Task'\r\nimport Appbar from \"./components/appbar/Appbar\";\r\n\r\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\r\n\r\nimport {AuthContext} from \"./util/Auth\";\r\nimport Chains from \"./components/chains/Chains\";\r\nimport Campaigns from \"./components/campaigns/Campaigns\";\r\nimport SimpleAppbar from \"./components/appbar/SimpleAppbar\";\r\n\r\n\r\nconst App = () => {\r\n    const {currentUser} = useContext(AuthContext)\r\n\r\n    return (\r\n        <div>\r\n            <Router>\r\n                <Switch>\r\n                    <Route path={\"/campaign/:campaignId\"}>\r\n                        <Appbar>\r\n                            <Route exact path=\"/campaign/:campaignId/chain/:chainId/createstage/:id\">\r\n                                <StageBuilder/>\r\n                            </Route>\r\n                            <Route exact path=\"/campaign/:campaignId/chain/:chainId/createlogic/:id\">\r\n                                <LogicBuilder/>\r\n                            </Route>\r\n                            <Route exact path=\"/campaign/:campaignId/chain/:chainId/task/:id\">\r\n                                <Task/>\r\n                            </Route>\r\n                            <Route exact path=\"/campaign/:campaignId/chain/:chainId/actions/:id\">\r\n                                <Actions/>\r\n                            </Route>\r\n                            <Route exact path=\"/campaign/:campaignId/chain\">\r\n                                <Chains/>\r\n                            </Route>\r\n                            <Route exact path=\"/campaign/:campaignId/chain/:chainId\">\r\n                                <Graph/>\r\n                            </Route>\r\n                        </Appbar>\r\n                    </Route>\r\n                    <Route path=\"/\">\r\n                        <SimpleAppbar>\r\n                            <Campaigns/>\r\n                        </SimpleAppbar>\r\n                    </Route>\r\n                </Switch>\r\n            </Router>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {AuthProvider} from \"./util/Auth\";\r\n\r\nReactDOM.render(\r\n    // <React.StrictMode>\r\n    <AuthProvider>\r\n        <App/>\r\n    </AuthProvider>,\r\n    // </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}
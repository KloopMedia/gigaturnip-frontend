{"version":3,"sources":["util/Firebase.js","components/nodes/CustomNode.tsx","components/nodes/LogicNode.tsx","components/nodes/StageNode.tsx","components/sidebar/Sidebar.tsx","util/Urls.js","util/Axios.js","components/graph/Graph.tsx","components/custom-widgets/file-widget/CustomFileWidget.tsx","components/form-builders/PreviewStage.tsx","components/custom-widgets/file-widget/CustomFileType.tsx","components/form-builders/StageBuilder.tsx","components/form-builders/GetFormFields.js","components/form-builders/LogicBuilder.tsx","components/actions/Actions.tsx","components/task/Task.tsx","util/Auth.js","components/appbar/Appbar.tsx","components/chains/ChainCard.tsx","components/chains/Dialog.tsx","components/chains/Chains.tsx","components/campaigns/CampaignCard.tsx","components/campaigns/Dialog.tsx","components/campaigns/Campaigns.tsx","components/appbar/SimpleAppbar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","provider","auth","GoogleAuthProvider","firestore","settings","ignoreUndefinedProperties","signInWithGoogle","setCustomParameters","prompt","signInWithPopup","signOut","then","window","location","reload","useStyles","makeStyles","theme","createStyles","root","background","borderColor","borderWidth","borderStyle","borderRadius","fontSize","width","textAlign","padding","CustomNode","data","style","classes","Grid","className","label","type","position","Position","Top","Bottom","customNodeStyles","CustomLogicNode","CustomStageNode","Sidebar","useState","draggable","setDraggable","formResponses","setFormResponses","useEffect","onDragStart","event","nodeLabel","nodeType","console","log","JSON","stringify","dataTransfer","setData","effectAllowed","onDragEnd","undefined","marginRight","schema","formData","onChange","e","color","display","justifyContent","alignItems","campaignsUrl","chainsUrl","taskstagesUrl","conditionalstagesUrl","tasksUrl","instance","axios","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","error","Promise","reject","DnDFlow","reactFlowWrapper","useRef","history","useHistory","useParams","chainId","campaignId","reactFlowInstance","setReactFlowInstance","elements","setElements","all","get","results","stageNodes","logicNodes","forEach","node","allNodes","filter","chain","nodes","map","id","toString","x","parseFloat","x_pos","y","y_pos","name","stage","in_stages","length","sourceId","edge","source","target","arrowHeadType","els","addEdge","getNode","pop","getTypeUrl","updateConnections","currentNodeId","method","a","url","res","out_stages","catch","err","connections","parsed","connection","ids","patch","onConnect","params","newParams","targetNode","sourceNode","removeConnections","onDrop","preventDefault","reactFlowBounds","current","getBoundingClientRect","transfer","getData","project","clientX","left","clientY","top","parsedData","parse","createNode","newNode","es","concat","updateNode","parseInt","post","onElementDoubleClick","element","pathname","push","nodeTypes","LOGIC","STAGE","ref","onElementsRemove","elementsToRemove","nodeIdsToRemove","n","edgeElement","includes","hasOwnProperty","delete","removeElements","onNodeDoubleClick","onEdgeDoubleClick","onLoad","_reactFlowInstance","onDragOver","dropEffect","onNodeDragStop","height","CustomFileWidget","props","title","Preview","jsonSchema","uiSchema","onJsonChange","onUiChange","json_schema","ui_schema","stage_data","edit","setEdit","localJson","setLocalJson","localUi","setLocalUi","widgets","customfile","minWidth","margin","onSubmit","Switch","checked","inputProps","Button","variant","onClick","Typography","TextField","multiline","fullWidth","defaultValue","InputProps","readOnly","value","marginTop","marginBottom","navigator","clipboard","writeText","alert","CustomFileType","file","displayName","matchIf","types","widget","defaultDataSchema","defaultUiSchema","Builder","setSchema","setUiSchema","StageOptions","optionsSchema","preview","setPreview","options","parse_json_schema","parse_ui_schema","IconButton","float","p","PreviewStage","uischema","newSchema","newUiSchema","mods","customFormInputs","getFormFields","retrievedSchema","retrieveSchema","pathSchema","toPathSchema","getFieldNames","getAllPaths","_obj","acc","paths","Object","keys","key","newPaths","path","__rjsf_additionalProperties","$name","replace","formValue","_get","_isEmpty","fieldNames","ready","setReady","fields","setFields","logic_array","items","connectedStages","setConnectedStages","pingPong","setPingPong","currentStage","conditions","pingpong","getStage","stageId","taskStage","getConnectedStages","connId","connectedIds","connStages","allFields","stageObject","values","sc","deps","dependencies","depValues","stageFields","GetFormFields","depFields","dep","oneOf","allOf","nested","fiction","flat","getDependentFields","Array","from","Set","properties","field","enum","condition","required","FormControlLabel","control","Checkbox","formControl","spacing","selectEmpty","handleCreateTask","split","caseData","case","taskData","container","justify","component","item","task","responses","setFormData","AuthContext","React","createContext","AuthProvider","children","currentUser","setCurrentUser","onAuthStateChanged","user","getIdToken","idToken","setItem","onIdTokenChanged","Provider","drawerWidth","appBar","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","toolbar","mixins","content","flexGrow","select","selectIcon","fill","Appbar","useTheme","useContext","open","setOpen","campaign","setCampaign","allCampaigns","setAllCampaigns","CssBaseline","AppBar","clsx","Toolbar","aria-label","noWrap","cursor","FormControl","size","Select","autoWidth","labelId","disableUnderline","icon","camp","MenuItem","Drawer","paper","direction","Divider","List","ListItem","button","page","ListItemIcon","ListItemText","primary","extra","ChainCard","description","Card","CardContent","gutterBottom","CardActions","avatar","backgroundColor","blue","AddChainDialog","onClose","onSave","setName","setDescription","handleClose","Dialog","aria-labelledby","DialogTitle","DialogContent","rows","DialogActions","parsedCampaign","chains","setChains","filtered","handleAddChain","startIcon","AddCampaignDialog","campaigns","setCampaigns","handleCampaignAdd","App","exact","StageBuilder","LogicBuilder","Task","Actions","Chains","Graph","SimpleAppbar","Campaigns","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.67be46db.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCXiwOUNsbzKH7sbSAZrqA9f7VOeCMdUOQ\",\r\n    authDomain: \"gigaturnip-b6b5b.firebaseapp.com\",\r\n    projectId: \"gigaturnip-b6b5b\",\r\n    storageBucket: \"gigaturnip-b6b5b.appspot.com\",\r\n    messagingSenderId: \"414429242328\",\r\n    appId: \"1:414429242328:web:a4685f5ac6895ea767c8ad\",\r\n    measurementId: \"G-Y8JTEJMTET\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n// const db = firebase.firestore();\r\n// if (window.location.hostname === \"localhost\") {\r\n//   db.useEmulator(\"localhost\", 8080);\r\n// }\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nfirebase.firestore().settings({\r\n    ignoreUndefinedProperties: true,\r\n})\r\nexport const signInWithGoogle = () => {\r\n    provider.setCustomParameters({\r\n        prompt: 'select_account'\r\n    });\r\n    firebase.auth().signInWithPopup(provider);\r\n};\r\n\r\nexport const signOut = () => {\r\n    firebase.auth().signOut().then(() => window.location.reload(false))\r\n}\r\n\r\nexport default firebase;","import React from 'react';\r\nimport {Handle, Position} from 'react-flow-renderer';\r\nimport {createStyles, Grid, makeStyles, Theme} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            background: '#FFF',\r\n            borderColor: '#000',\r\n            borderWidth: '1px',\r\n            borderStyle: 'solid',\r\n            borderRadius: '3px',\r\n            fontSize: '12px',\r\n            width: '150px',\r\n            textAlign: 'center',\r\n            padding: 10\r\n        },\r\n    }));\r\n\r\ntype NodeProps = { data: {label: string}, style: object }\r\n\r\nconst CustomNode = ({data, style}: NodeProps) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid className={classes.root} style={style}>\r\n            <div>{data.label}</div>\r\n            <Handle\r\n                type=\"target\"\r\n                position={Position.Top}\r\n                style={{borderRadius: '100%'}}\r\n            />\r\n            <Handle\r\n                type=\"source\"\r\n                position={Position.Bottom}\r\n                style={{borderRadius: '100%'}}\r\n            />\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default CustomNode","import React from 'react';\r\nimport CustomNode from \"./CustomNode\";\r\n\r\nconst customNodeStyles = {\r\n  borderColor: '#0041d0'\r\n};\r\n\r\ntype NodeProps = { data: {label: string} }\r\n\r\nconst CustomLogicNode = ({ data }: NodeProps) => <CustomNode data={data} style={customNodeStyles} />;\r\n\r\nexport default CustomLogicNode","import React from 'react';\r\nimport CustomNode from \"./CustomNode\";\r\n\r\nconst customNodeStyles = {\r\n  borderColor: '#32CD32'\r\n};\r\n\r\ntype NodeProps = { data: {label: string} }\r\n\r\nconst CustomStageNode = ({ data }: NodeProps) => <CustomNode data={data} style={customNodeStyles} />;\r\n\r\nexport default CustomStageNode","import React, {useEffect, useState} from 'react';\r\nimport firebase from '../../util/Firebase'\r\nimport Form from \"@rjsf/bootstrap-4\";\r\nimport {JSONSchema7} from \"json-schema\";\r\n\r\nimport schema from '../../json-schema/SidebarSchema.json'\r\n\r\ntype FormResponsesProps = { label: string }\r\n\r\nconst Sidebar = () => {\r\n    const [draggable, setDraggable] = useState(false)\r\n    const [formResponses, setFormResponses] = useState<FormResponsesProps | undefined>()\r\n\r\n    useEffect(() => {\r\n\r\n        if (formResponses && formResponses.label && formResponses.label !== '') {\r\n            setDraggable(true)\r\n        } else {\r\n            setDraggable(false)\r\n        }\r\n    }, [formResponses])\r\n\r\n    const onDragStart = (event: { dataTransfer: DataTransfer }, nodeLabel: string, nodeType: string) => {\r\n        console.log(nodeLabel, nodeType)\r\n        let data = JSON.stringify({...formResponses, type: nodeType})\r\n        event.dataTransfer.setData('application/reactflow', data);\r\n        event.dataTransfer.effectAllowed = 'move';\r\n    };\r\n\r\n    const onDragEnd = () => {\r\n        setFormResponses(undefined)\r\n    }\r\n\r\n    return (\r\n        <aside>\r\n            <div className=\"description\">You can drag these nodes to the pane on the right.</div>\r\n            <div style={{marginRight: 5}}>\r\n                <Form schema={schema as JSONSchema7} formData={formResponses} onChange={(e) => setFormResponses(e.formData)}> </Form>\r\n            </div>\r\n            <div draggable={false} style={{\r\n                color: 'red',\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n                padding: 10\r\n            }}>{!draggable && 'Enter Label to drag the node'}</div>\r\n            <div className=\"dndnode stage\" onDragEnd={onDragEnd}\r\n                 onDragStart={(event) => onDragStart(event, formResponses ? formResponses.label : '', 'STAGE')} draggable={draggable}>\r\n                Stage Node\r\n            </div>\r\n            <div className=\"dndnode logic\" onDragEnd={onDragEnd}\r\n                 onDragStart={(event) => onDragStart(event, formResponses ? formResponses.label : '', 'LOGIC')} draggable={draggable}>\r\n                Logic Node\r\n            </div>\r\n        </aside>\r\n    );\r\n};\r\n\r\nexport default Sidebar","const baseUrl = \"https://journal-bb5e3.uc.r.appspot.com/\"\r\n// const baseUrl = \"http://127.0.0.1:8000/\"\r\nconst campaignsUrl = \"api/v1/campaigns/\"\r\nconst chainsUrl = \"api/v1/chains/\"\r\nconst taskstagesUrl = \"api/v1/taskstages/\"\r\nconst ranksUrl = \"api/v1/ranks/\"\r\nconst rankslimitsUrl = \"api/v1/ranklimits/\"\r\nconst webhookstagesUrl = \"api/v1/webhookstages/\"\r\nconst conditionalstagesUrl = \"api/v1/conditionalstages/\"\r\nconst casesUrl = \"api/v1/cases/\"\r\nconst tasksUrl = \"api/v1/tasks/\"\r\n\r\nexport {\r\n    baseUrl,\r\n    campaignsUrl,\r\n    chainsUrl,\r\n    taskstagesUrl,\r\n    ranksUrl,\r\n    rankslimitsUrl,\r\n    webhookstagesUrl,\r\n    conditionalstagesUrl,\r\n    casesUrl,\r\n    tasksUrl\r\n}","import axios from \"axios\";\r\nimport {baseUrl} from \"./Urls\";\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: baseUrl\r\n});\r\n\r\ninstance.interceptors.request.use(\r\n    function (config) {\r\n        const token = localStorage.getItem(\"token\");\r\n\r\n        if (token) {\r\n            config.headers[\"Authorization\"] = 'JWT ' + token;\r\n        }\r\n        return config;\r\n    },\r\n    function (error) {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nexport default instance;","import React, {useEffect, useRef, useState} from 'react';\r\nimport ReactFlow, {addEdge, Controls, FlowElement, ReactFlowProvider, Edge} from 'react-flow-renderer';\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport firebase from '../../util/Firebase'\r\nimport CustomLogicNode from '../nodes/LogicNode'\r\nimport CustomStageNode from '../nodes/StageNode'\r\nimport Sidebar from '../sidebar/Sidebar';\r\n\r\nimport '../../dnd.css';\r\nimport axios from '../../util/Axios';\r\nimport {conditionalstagesUrl, taskstagesUrl} from '../../util/Urls'\r\n\r\ntype RouterParams = { chainId: string, campaignId: string }\r\n\r\nconst DnDFlow = () => {\r\n    const reactFlowWrapper = useRef(null);\r\n    const history = useHistory();\r\n    const {chainId, campaignId} = useParams<RouterParams>();\r\n\r\n    const [reactFlowInstance, setReactFlowInstance] = useState(null);\r\n    const [elements, setElements] = useState<FlowElement[]>([]);\r\n\r\n    useEffect(() => {\r\n        const getStageNodes = () => {\r\n            return axios.get(taskstagesUrl)\r\n        };\r\n\r\n        const getLogicNodes = () => {\r\n            return axios.get(conditionalstagesUrl)\r\n        };\r\n\r\n        Promise.all([getStageNodes(), getLogicNodes()])\r\n            .then((results) => {\r\n                const stageNodes = results[0].data;\r\n                const logicNodes = results[1].data;\r\n                stageNodes.forEach((node: any) => node.type = \"STAGE\")\r\n                logicNodes.forEach((node: any) => node.type = \"LOGIC\")\r\n                const allNodes = [...stageNodes, ...logicNodes].filter((node: any) => node.chain == chainId)\r\n                const nodes: FlowElement[] = allNodes.map((node: any) => (\r\n                        {\r\n                            id: node.id.toString(),\r\n                            position: {x: parseFloat(node.x_pos), y: parseFloat(node.y_pos)},\r\n                            data: {label: node.name},\r\n                            type: node.type\r\n                        }\r\n                    )\r\n                )\r\n                setElements(nodes)\r\n                return allNodes\r\n            })\r\n            .then(allNodes => {\r\n                allNodes.forEach(stage => {\r\n                    if (stage.in_stages.length > 0) {\r\n                        stage.in_stages.forEach((sourceId: string | number) => {\r\n                            const edge = {\r\n                                source: sourceId.toString(),\r\n                                target: stage.id.toString(),\r\n                                id: `${sourceId}-${stage.id}`,\r\n                                arrowHeadType: \"arrow\"\r\n                            } as Edge\r\n                            setElements((els) => addEdge(edge, els))\r\n                        })\r\n                    }\r\n                })\r\n            })\r\n    }, [])\r\n\r\n    const getNode = (id: string | number) => {\r\n        return elements.filter(node => node.id == id).pop()\r\n    }\r\n\r\n    const getTypeUrl = (node: FlowElement) => {\r\n        if (node.type == \"STAGE\") {\r\n            return taskstagesUrl\r\n        }\r\n        if (node.type == \"LOGIC\") {\r\n            return conditionalstagesUrl\r\n        }\r\n        return undefined\r\n    }\r\n\r\n    const updateConnections = async (node: FlowElement, currentNodeId: string | number, type: \"in\" | \"out\", method: \"create\" | \"delete\") => {\r\n        const url = getTypeUrl(node)\r\n        if (url) {\r\n            const connections = await axios.get(url + node.id + '/').then(res => {\r\n                if (type === 'in') {\r\n                    return res.data.in_stages\r\n                }\r\n                if (type === 'out') {\r\n                    return res.data.out_stages\r\n                }\r\n                return undefined;\r\n            }).catch(err => undefined);\r\n\r\n            if (connections) {\r\n                let parsed = connections.map((connection: string | number) => connection.toString())\r\n\r\n                let ids = []\r\n                if (method === 'create') {\r\n                    ids = [currentNodeId, ...parsed]\r\n                }\r\n                if (method === 'delete') {\r\n                    ids = parsed.filter((connection: string) => connection !== currentNodeId)\r\n                }\r\n\r\n                let data = undefined\r\n                if (type === 'in') {\r\n                    data = {in_stages: ids}\r\n                }\r\n                if (type === 'out') {\r\n                    data = {out_stages: ids}\r\n                }\r\n\r\n                if (data) {\r\n                    console.log(data)\r\n                    axios.patch(url + node.id + '/', data)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const onConnect = async (params: object) => {\r\n        const newParams: any = {...params, arrowHeadType: 'arrow'}\r\n        const targetNode = getNode(newParams.target)\r\n        const sourceNode = getNode(newParams.source)\r\n        const target = newParams.target\r\n        const source = newParams.source\r\n\r\n        setElements((els: FlowElement[]) => addEdge(newParams, els))\r\n\r\n        if (targetNode) {\r\n            updateConnections(targetNode, source, 'in', 'create')\r\n        }\r\n\r\n        if (sourceNode) {\r\n            updateConnections(sourceNode, target, 'out', 'create')\r\n        }\r\n    }\r\n\r\n    const removeConnections = async (target: string, source: string) => {\r\n        const targetNode = getNode(target)\r\n        const sourceNode = getNode(source)\r\n\r\n        if (targetNode) {\r\n            updateConnections(targetNode, source, 'in', 'delete')\r\n        }\r\n\r\n        if (sourceNode) {\r\n            updateConnections(sourceNode, target, 'out', 'delete')\r\n        }\r\n    }\r\n\r\n    const removeElements = (elementsToRemove: FlowElement[], elements: FlowElement[]) => {\r\n        let nodeIdsToRemove = elementsToRemove.map((n: any) => {\r\n            return n.id;\r\n        });\r\n\r\n        return elements.filter((element: any) => {\r\n            let edgeElement = element;\r\n            if (nodeIdsToRemove.includes(element.id) || nodeIdsToRemove.includes(edgeElement.target) || nodeIdsToRemove.includes(edgeElement.source)) {\r\n                if (element.hasOwnProperty('source') && element.hasOwnProperty('target')) {\r\n                    let target = element.target\r\n                    let source = element.source\r\n\r\n                    removeConnections(target, source)\r\n\r\n                } else {\r\n                    const url = getTypeUrl(element)\r\n                    if (url) {\r\n                        axios.delete(url + element.id + '/')\r\n                    }\r\n                }\r\n                return false\r\n            } else {\r\n                return true\r\n            }\r\n        });\r\n    };\r\n\r\n    const onElementsRemove = (elementsToRemove: FlowElement[]) => {\r\n        setElements((els) => removeElements(elementsToRemove, els));\r\n    }\r\n\r\n    const onLoad = (_reactFlowInstance: any) =>\r\n        setReactFlowInstance(_reactFlowInstance);\r\n\r\n    const onDragOver = (event: any) => {\r\n        event.preventDefault();\r\n        event.dataTransfer.dropEffect = 'move';\r\n    };\r\n\r\n    const onDrop = async (event: any) => {\r\n        event.preventDefault();\r\n\r\n        // @ts-ignore\r\n        const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\r\n        const transfer = event.dataTransfer.getData('application/reactflow');\r\n        // @ts-ignore\r\n        const position = reactFlowInstance.project({\r\n            x: event.clientX - reactFlowBounds.left,\r\n            y: event.clientY - reactFlowBounds.top,\r\n        });\r\n\r\n        const parsedData = JSON.parse(transfer)\r\n        const label = parsedData.label\r\n        const type = parsedData.type\r\n\r\n        const id = await createNode({type, position, label})\r\n\r\n        let newNode = {\r\n            id,\r\n            type,\r\n            position,\r\n            data: {label},\r\n        };\r\n\r\n        setElements((es) => es.concat(newNode));\r\n    };\r\n\r\n    const onNodeDragStop = (event: any, node: any) => {\r\n        updateNode(node)\r\n    }\r\n\r\n    const updateNodeInFirebase = (node: any) => {\r\n        firebase.firestore().collection('flow').doc(node.id).set(node, {merge: true})\r\n    }\r\n\r\n    const updateNode = (node: any) => {\r\n        let x_pos = node.position.x\r\n        let y_pos = node.position.y\r\n        let data = {x_pos, y_pos}\r\n        const url = getTypeUrl(node)\r\n        if (url) {\r\n            axios.patch(url + node.id + '/', data)\r\n        }\r\n    }\r\n\r\n    const createNode = async (node: any) => {\r\n        let data = {\r\n            name: node.label,\r\n            x_pos: node.position.x,\r\n            y_pos: node.position.y,\r\n            chain: parseInt(chainId),\r\n            out_stages: []\r\n        }\r\n\r\n        const url = getTypeUrl(node)\r\n        if (url) {\r\n            let res = await axios.post(url, data)\r\n            return res.data.id.toString()\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    const onElementDoubleClick = (event: any, element: any) => {\r\n        console.log(element)\r\n        let location = history.location.pathname\r\n        if (element.id) {\r\n            if (element.type === 'LOGIC') {\r\n                history.push(`${location}/createlogic/${element.id}`)\r\n            }\r\n            if (element.type === 'STAGE') {\r\n                // history.push('/createStage/' + element.id)\r\n                history.push(`${location}/actions/${element.id}`)\r\n            }\r\n            if (element.type === 'default' && (element.target || element.source)) {\r\n                console.log('edge')\r\n            }\r\n        }\r\n    }\r\n\r\n    const nodeTypes = {\r\n        LOGIC: CustomLogicNode,\r\n        STAGE: CustomStageNode\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"dndflow\">\r\n            <ReactFlowProvider>\r\n                <div className=\"reactflow-wrapper\" ref={reactFlowWrapper}>\r\n                    <ReactFlow\r\n                        nodeTypes={nodeTypes}\r\n                        elements={elements}\r\n                        onConnect={onConnect}\r\n                        onElementsRemove={onElementsRemove}\r\n                        onNodeDoubleClick={onElementDoubleClick}\r\n                        onEdgeDoubleClick={onElementDoubleClick}\r\n                        onLoad={onLoad}\r\n                        onDrop={onDrop}\r\n                        onDragOver={onDragOver}\r\n                        onNodeDragStop={onNodeDragStop}\r\n                        style={{\r\n                            width: '100%',\r\n                            height: 700,\r\n                        }}\r\n                    >\r\n                        <Controls/>\r\n                    </ReactFlow>\r\n                </div>\r\n                <Sidebar/>\r\n            </ReactFlowProvider>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DnDFlow;","import React from 'react'\r\n\r\n\r\nconst CustomFileWidget = (props: any) => {\r\n    const {schema} = props;\r\n    return (\r\n        <div>\r\n            <label className={\"form-label\"}>{schema?.title}</label>\r\n            <br/>\r\n            <input type=\"file\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomFileWidget","import React, {useEffect, useState} from 'react'\r\nimport Form from \"@rjsf/bootstrap-4\";\r\nimport {Button, Switch, TextField, Typography} from \"@material-ui/core\";\r\n\r\nimport CustomFileWidget from '../custom-widgets/file-widget/CustomFileWidget'\r\n\r\ntype FormProps = {\r\n    jsonSchema: string,\r\n    uiSchema: string,\r\n    formResponses: any,\r\n    onJsonChange: (schema: string) => void,\r\n    onUiChange: (schema: string) => void\r\n}\r\n\r\nconst Preview = ({jsonSchema, uiSchema, formResponses, onJsonChange, onUiChange}: FormProps) => {\r\n    const json_schema = JSON.parse(jsonSchema) ?? {}\r\n    const ui_schema = JSON.parse(uiSchema) ?? {}\r\n    const stage_data = JSON.stringify({...formResponses, json_schema: json_schema, ui_schema: ui_schema})\r\n    const [edit, setEdit] = useState(false)\r\n    const [localJson, setLocalJson] = useState('')\r\n    const [localUi, setLocalUi] = useState('')\r\n\r\n    const widgets = {\r\n        customfile: CustomFileWidget\r\n    };\r\n\r\n    useEffect(() => {\r\n        setLocalJson(jsonSchema)\r\n        setLocalUi(uiSchema)\r\n    }, [])\r\n\r\n    const copyToClipboard = () => {\r\n        navigator.clipboard.writeText(stage_data).then(() => console.log(\"success\")).catch(err => alert(err))\r\n    }\r\n\r\n    const handleJsonSchemaChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setLocalJson(event.target.value)\r\n    }\r\n\r\n    const handleUiSchemaChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setLocalUi(event.target.value)\r\n    }\r\n\r\n    const handleEditChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setEdit(event.target.checked)\r\n    }\r\n\r\n    const handleSave = () => {\r\n        console.log(localJson)\r\n        console.log(localUi)\r\n        onJsonChange(localJson)\r\n        onUiChange(localUi)\r\n    };\r\n\r\n    return (\r\n        <div style={{width: '70%', minWidth: '400px', margin: '0 auto', display: 'block', padding: 10}}>\r\n            <Form\r\n                schema={json_schema as any}\r\n                uiSchema={ui_schema}\r\n                widgets={widgets}\r\n                onSubmit={(formData) => console.log(formData.formData)}\r\n            />\r\n            <br/>\r\n            <Switch\r\n                checked={edit}\r\n                onChange={handleEditChange}\r\n                name=\"checkedA\"\r\n                inputProps={{'aria-label': 'secondary checkbox'}}\r\n            />\r\n            {edit && <Button color={\"primary\"} variant={\"contained\"} onClick={handleSave}>Save Schemas</Button>}\r\n            {edit && <Typography variant={\"h6\"} color={\"error\"}>\r\n                Осторожно: можно легко удалить всю проделанную работу\r\n            </Typography>}\r\n            <TextField\r\n                id=\"outlined-multiline-static\"\r\n                label=\"JSON\"\r\n                multiline\r\n                fullWidth\r\n                defaultValue=\"Default Value\"\r\n                variant=\"outlined\"\r\n                InputProps={{\r\n                    readOnly: !edit,\r\n                }}\r\n                value={localJson}\r\n                onChange={handleJsonSchemaChange}\r\n                style={{marginTop: 15, marginBottom: 15}}\r\n            />\r\n            <TextField\r\n                id=\"outlined-multiline-static\"\r\n                label=\"UI\"\r\n                multiline\r\n                fullWidth\r\n                defaultValue=\"Default Value\"\r\n                variant=\"outlined\"\r\n                InputProps={{\r\n                    readOnly: !edit,\r\n                }}\r\n                value={localUi}\r\n                onChange={handleUiSchemaChange}\r\n                style={{marginTop: 15, marginBottom: 30}}\r\n            />\r\n            <br/>\r\n            <Button onClick={copyToClipboard} variant={\"contained\"} color={\"primary\"} style={{marginBottom: 15}}>Copy\r\n                FUL STAGE to Clipboard</Button>\r\n            <TextField\r\n                id=\"outlined-multiline-static\"\r\n                label=\"FULL STAGE\"\r\n                multiline\r\n                fullWidth\r\n                defaultValue=\"Default Value\"\r\n                variant=\"outlined\"\r\n                InputProps={{\r\n                    readOnly: true,\r\n                }}\r\n                value={stage_data}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preview","import React from 'react'\r\n\r\nconst CardBody = (props: any) => {\r\n    const handleChange = (event: any) => {\r\n        props.onChange({...props.parameters, default: event.target.checked})\r\n    }\r\n    return (\r\n        <div>\r\n            <input type=\"checkbox\" id=\"multiple\"\r\n                   value={props.parameters.default}\r\n                   onChange={handleChange}\r\n            />\r\n            <label htmlFor=\"multiple\">Multiple files</label>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst CustomFileType = {\r\n    file: {\r\n        displayName: \"File\",\r\n        matchIf: [\r\n            {\r\n                types: [\"string\"],\r\n                widget: \"customfile\"\r\n            },\r\n        ],\r\n        defaultDataSchema: {},\r\n        defaultUiSchema: {\r\n            \"ui:widget\": \"customfile\"\r\n        },\r\n        type: \"string\",\r\n        // cardBody: CardBody,\r\n        // modalBody: (parameters: any, onChange: any) => <div>\r\n        //     Extra editing options in modal appear hear\r\n        // </div>,\r\n    }\r\n};\r\n\r\nexport default CustomFileType","import React, {ChangeEvent, useEffect, useState} from \"react\";\r\n// @ts-ignore\r\nimport {FormBuilder} from '@ginkgo-bioworks/react-json-schema-form-builder';\r\nimport Form from \"@rjsf/bootstrap-4\";\r\nimport StageOptions from '../../json-schema/StageOptions_v2.json'\r\nimport {useParams} from \"react-router-dom\";\r\nimport {JSONSchema7} from \"json-schema\";\r\nimport PreviewStage from './PreviewStage'\r\nimport CustomFileType from '../custom-widgets/file-widget/CustomFileType'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from \"../../util/Axios\";\r\nimport {chainsUrl, rankslimitsUrl, ranksUrl, taskstagesUrl} from \"../../util/Urls\";\r\nimport {IconButton} from \"@material-ui/core\";\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\n\r\ntype RouterParams = { id: string, chainId: string }\r\ntype ChainProps = { id: number, name: string, description: string, campaign: number }\r\n\r\nconst Builder = () => {\r\n    let {id, chainId} = useParams<RouterParams>();\r\n\r\n    const [schema, setSchema] = useState('')\r\n    const [uiSchema, setUiSchema] = useState('')\r\n    const [optionsSchema, setOptionsSchema] = useState<{ [index: string]: any }>(StageOptions)\r\n    const [formResponses, setFormResponses] = useState<{ [index: string]: any }>({})\r\n    const [preview, setPreview] = useState(false)\r\n    const [existingRanks, setExistingRanks] = useState<any[]>([])\r\n    const [isByRanks, setIsByRanks] = useState<boolean>(true)\r\n    const [recipients, setRecipients] = useState<string[]>([])\r\n    const [allInStages, setAllInStages] = useState<string[]>([])\r\n    const [ranksLimits, setRanksLimits] = useState([])\r\n\r\n    useEffect(() => {\r\n        /*const getAllInStages = (prevTask: number[], previousStages: number[]) => {\r\n            if (prevTask[0]) {\r\n                axios.get(taskstagesUrl + prevTask[0] + '/')\r\n                    .then(res => res.data)\r\n                    .then(res => {\r\n                        let previousInStage = res.in_stages;\r\n                        if (previousInStage[0]) {\r\n                            previousStages.push(previousInStage[0])\r\n                            getAllInStages(res.in_stages, previousStages)\r\n                        } else {\r\n                            setAllInStages(previousStages.map(String))\r\n                        }\r\n                    })\r\n            }\r\n        }*/\r\n        /* const getAllRanks = () => {\r\n            axios.get(ranksUrl)\r\n                .then(res => res.data).then(res => {\r\n                setExistingRanks(res)\r\n            })\r\n        }*/\r\n        const getStage = () => {\r\n            axios.get(taskstagesUrl + id + '/')\r\n                .then(res => res.data)\r\n                .then(res => {\r\n                    const {id, json_schema, ui_schema, ...options} = res\r\n                    let parse_json_schema = JSON.stringify(json_schema)\r\n                    let parse_ui_schema = JSON.stringify(ui_schema)\r\n                    // getAllInStages(res.in_stages, res.in_stages)\r\n                    setSchema(parse_json_schema)\r\n                    setUiSchema(parse_ui_schema)\r\n                    setFormResponses(options)\r\n                })\r\n        }\r\n\r\n\r\n\r\n        if (id) {\r\n            getStage()\r\n            // getAllRanks()\r\n        }\r\n    }, [id])\r\n\r\n    /*function formPropsForSchema(arrayOfNames: string[]) {\r\n        let propsForSchema: { [index: string]: { [index: string]: string } } = {};\r\n        arrayOfNames.forEach((rank, index, array) => {\r\n            propsForSchema[index.toString()] = {title: rank, type: \"boolean\"}\r\n        })\r\n        return propsForSchema;\r\n    }\r\n\r\n    const getRanksLimits = () => {\r\n            axios.get(rankslimitsUrl)\r\n                .then(res => res.data)\r\n                .then(res => {\r\n                    setRanksLimits(res)\r\n                })\r\n        }\r\n\r\n    useEffect(() => {\r\n        if (formResponses) {\r\n            let transition: { [index: string]: { [index: string]: any } } = formResponses['transition']\r\n            if (transition) {\r\n                let sentBy = transition['assign_user_by']\r\n                if (sentBy) {\r\n                    let whichSent: string = formResponses['transition']['assign_user_by'];\r\n                    if (whichSent === 'ranks') {\r\n                        getRanksLimits()\r\n                        setIsByRanks(true)\r\n                    } else if (whichSent === 'prevStage') {\r\n                        setRanksLimits([])\r\n                        setIsByRanks(false)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }, [formResponses])\r\n\r\n    useEffect(() => {\r\n        if (existingRanks) {\r\n            let propExistingRanks = formPropsForSchema(existingRanks.map(item => item.name));\r\n            let newOptionSchema = optionsSchema;\r\n            newOptionSchema.properties.transition.dependencies.assign_user_by.oneOf[0].properties.ranks.properties = propExistingRanks;\r\n            setOptionsSchema(newOptionSchema)\r\n        }\r\n    }, [existingRanks])\r\n\r\n    useEffect(() => {\r\n        let propPrevInStages = formPropsForSchema(allInStages);\r\n        let newOptionSchema = optionsSchema;\r\n        newOptionSchema.properties.transition.dependencies.assign_user_by.oneOf[1].properties.by_previous_stages.properties = propPrevInStages;\r\n        setOptionsSchema(newOptionSchema)\r\n    }, [allInStages])*/\r\n\r\n    const handleSubmit = () => {\r\n        let json_schema = null\r\n        let ui_schema = null\r\n        if (schema && uiSchema) {\r\n            json_schema = JSON.parse(schema)\r\n            ui_schema = JSON.parse(uiSchema)\r\n        }\r\n        /*let transition: { [key: string]: string | any } = formResponses['transition'];\r\n\r\n        if (transition['assign_user_by'] === 'ranks') {\r\n            // debugger\r\n            existingRanks.forEach((item, index, array) => {\r\n                if (transition['ranks'][index]) {\r\n                    let formdata = {\r\n                        open_limit: 0,\r\n                        total_limit: 0,\r\n                        list_permission: false,\r\n                        close_submission: false,\r\n                        close_selection: false,\r\n                        stage: +id,\r\n                        rank: item['id']\r\n                    }\r\n\r\n                    let existingRank: boolean[] = [];\r\n                    ranksLimits.forEach((rankLimit) => {\r\n                        if (rankLimit['rank'] === item['id'] && rankLimit['stage'] === +id) {\r\n                            existingRank.push(true)\r\n                        } else {\r\n                            existingRank.push(false)\r\n                        }\r\n                    })\r\n\r\n                    if (existingRank.includes(false) || !(ranksLimits.length != 0)) {\r\n                        axios\r\n                            .post(rankslimitsUrl, formdata)\r\n                            // .then((res: any) => alert(\"Saved\"))\r\n                            .catch((err: any) => alert(err));\r\n                    }\r\n\r\n                } else {\r\n                    ranksLimits.forEach((rankLimit) => {\r\n                        // console.log(rankLimit['rank'], item['id'])\r\n                        // console.log(rankLimit['stage'], +id)\r\n                        // console.log('========')\r\n                        if (rankLimit['rank'] === item['id'] && rankLimit['stage'] === +id) {\r\n                            axios\r\n                                .delete(rankslimitsUrl + rankLimit['id'] + '/')\r\n                                // .then((res: any) => alert(\"Delete rankLimit for \" + item['name'] + \" rank\"))\r\n                                .catch((err: any) => alert(err));\r\n                        }\r\n                    })\r\n\r\n                }\r\n            })\r\n        } else if (transition['assign_user_by'] === 'prevStage') {\r\n        }*/\r\n\r\n        let data = {...formResponses, json_schema: json_schema, ui_schema: ui_schema}\r\n        axios\r\n            .patch(taskstagesUrl + id + '/', data)\r\n            .then((res: any) => alert(\"Saved\"))\r\n            .catch((err: any) => alert(err));\r\n    }\r\n\r\n    const changePreviewMode = () => {\r\n        setPreview(p => !p)\r\n    }\r\n\r\n    const handleJsonSchemaChange = (schema: string) => {\r\n        // let parsed = JSON.parse(schema)\r\n        setSchema(schema)\r\n    }\r\n\r\n    const handleUiSchemaChange = (schema: string) => {\r\n        // let parsed = JSON.parse(schema)\r\n        setUiSchema(schema)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <IconButton style={{float: 'right'}} onClick={changePreviewMode}>\r\n                {!preview ?\r\n                    <VisibilityIcon fontSize={\"large\"}/>\r\n                    :\r\n                    <VisibilityOffIcon fontSize={\"large\"}/>\r\n                }\r\n\r\n            </IconButton>\r\n            {!preview ?\r\n                <div>\r\n                    <FormBuilder\r\n                        schema={schema}\r\n                        uischema={uiSchema}\r\n                        onChange={(newSchema: string, newUiSchema: string) => {\r\n                            setSchema(newSchema)\r\n                            setUiSchema(newUiSchema)\r\n                        }}\r\n                        mods={\r\n                            {\r\n                                customFormInputs: {...CustomFileType}\r\n                            }\r\n                        }\r\n                    />\r\n                    <div style={{width: '70%', minWidth: '400px', margin: '0 auto', display: 'block', padding: 10}}>\r\n                        <Form\r\n                            schema={optionsSchema as JSONSchema7}\r\n                            formData={formResponses}\r\n                            onChange={(e: { formData: object }) => setFormResponses(e.formData)}\r\n                            onSubmit={handleSubmit}\r\n                        />\r\n                    </div>\r\n                    {/*<div>\r\n                        {JSON.stringify(ranksLimits)}\r\n                    </div>*/}\r\n\r\n\r\n                </div>\r\n                :\r\n                <PreviewStage\r\n                    jsonSchema={schema}\r\n                    uiSchema={uiSchema}\r\n                    formResponses={formResponses}\r\n                    onJsonChange={handleJsonSchemaChange}\r\n                    onUiChange={handleUiSchemaChange}\r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Builder\r\n\r\n\r\n","import {retrieveSchema, toPathSchema, toIdSchema, resolveSchema} from \"@rjsf/core/lib/utils\";\r\nimport _get from \"lodash/get\";\r\nimport _isEmpty from \"lodash/isEmpty\";\r\n\r\nconst getFormFields = (schema, formData = {}, uiSchema) => {\r\n    const retrievedSchema = retrieveSchema(\r\n        schema\r\n    );\r\n\r\n    const pathSchema = toPathSchema(\r\n        retrievedSchema,\r\n        \"\",\r\n        schema,\r\n        formData\r\n    );\r\n    // let resolvedSchema = resolveSchema(schema);\r\n    // console.log(\"resolvedSchema: \", resolvedSchema)\r\n    // const idSchema = toIdSchema(\r\n    //   retrievedSchema,\r\n    //   uiSchema[\"ui:rootFieldId\"],\r\n    //   schema,\r\n    //   formData,\r\n    //   'root_newInput1_newInput1_test2'\r\n    // );\r\n    //\r\n    // console.log(idSchema)\r\n\r\n    const getFieldNames = (pathSchema, formData) => {\r\n        const getAllPaths = (_obj, acc = [], paths = [\"\"]) => {\r\n            Object.keys(_obj).forEach(key => {\r\n                if (typeof _obj[key] === \"object\") {\r\n                    let newPaths = paths.map(path => `${path}.${key}`);\r\n                    // If an object is marked with additionalProperties, all its keys are valid\r\n                    if (_obj[key].__rjsf_additionalProperties && _obj[key].$name !== \"\") {\r\n                        acc.push(_obj[key].$name);\r\n                    } else {\r\n                        getAllPaths(_obj[key], acc, newPaths);\r\n                    }\r\n                } else if (key === \"$name\" && _obj[key] !== \"\") {\r\n                    paths.forEach(path => {\r\n                        path = path.replace(/^\\./, \"\");\r\n                        const formValue = _get(formData, path);\r\n                        // adds path to fieldNames if it points to a value\r\n                        // or an empty object/array\r\n                        if (typeof formValue !== \"object\" || _isEmpty(formValue)) {\r\n                            acc.push(path);\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n            return acc;\r\n        };\r\n        return getAllPaths(pathSchema);\r\n    };\r\n\r\n    const fieldNames = getFieldNames(pathSchema, formData);\r\n    // console.log(\"retrievedSchema\", retrievedSchema)\r\n    // console.log(\"pathSchema\", pathSchema)\r\n    // console.log(\"fieldNames\", fieldNames)\r\n\r\n    return fieldNames\r\n}\r\n\r\nexport default getFormFields","import React, {useEffect, useState} from \"react\";\r\nimport firebase from '../../util/Firebase'\r\nimport Form from \"@rjsf/bootstrap-4\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {JSONSchema7} from \"json-schema\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Grid} from \"@material-ui/core\";\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport axios from '../../util/Axios'\r\nimport {conditionalstagesUrl, taskstagesUrl} from \"../../util/Urls\";\r\nimport GetFormFields from './GetFormFields'\r\nimport getFormFields from \"./GetFormFields\";\r\n\r\ntype RouterParams = { id: string }\r\n\r\nconst Builder = () => {\r\n    const {id} = useParams<RouterParams>();\r\n\r\n    const [ready, setReady] = useState(false)\r\n    const [fields, setFields] = useState<string[]>([]);\r\n    const [schema, setSchema] = useState<{}>({})\r\n    const [uiSchema, setUiSchema] = useState({\r\n        logic_array: {\r\n            items: {\r\n                'ui:order': [\r\n                    'field',\r\n                    'condition',\r\n                    'value'\r\n                ]\r\n            }\r\n        },\r\n        'ui:order': [\r\n            'logic_array'\r\n        ]\r\n    })\r\n    const [formResponses, setFormResponses] = useState({})\r\n    const [connectedStages, setConnectedStages] = useState<any[]>()\r\n    const [pingPong, setPingPong] = useState<boolean>(false)\r\n\r\n    useEffect(() => {\r\n        axios.get(conditionalstagesUrl + id + '/').then(res => res.data).then(currentStage => {\r\n            setFormResponses(currentStage.conditions)\r\n            setPingPong(currentStage.pingpong)\r\n            console.log(\"PING PONG\", currentStage.pingpong)\r\n        })\r\n    }, [id])\r\n\r\n    useEffect(() => {\r\n        const getStage = (stageId?: number | string) => {\r\n            if (stageId) {\r\n                let taskStage = axios.get(taskstagesUrl + stageId + '/').then(res => res.data)\r\n                if (taskStage) {\r\n                    return taskStage\r\n                } else {\r\n                    return axios.get(conditionalstagesUrl + stageId + '/').then(res => res.data)\r\n                }\r\n            }\r\n            return axios.get(conditionalstagesUrl + id + '/').then(res => res.data)\r\n        }\r\n\r\n        const getConnectedStages = async (ids: number[]) => {\r\n            return ids.map(async connId => {\r\n                let stage = await getStage(connId)\r\n                return {[connId]: stage}\r\n            })\r\n        }\r\n\r\n        const getData = async () => {\r\n            let currentStage = await getStage()\r\n\r\n            let connectedIds = undefined\r\n            if (pingPong) {\r\n                connectedIds = currentStage.out_stages\r\n            } else {\r\n                connectedIds = currentStage.in_stages\r\n            }\r\n            if (connectedIds) {\r\n                let connStages = await getConnectedStages(connectedIds)\r\n                Promise.all(connStages).then(res => {\r\n                    if (Object.keys(res).length > 0) {\r\n                        setConnectedStages(res)\r\n                        setReady(true)\r\n                    }\r\n                })\r\n            }\r\n        }\r\n\r\n        if (id) {\r\n            getData()\r\n        }\r\n\r\n    }, [id, pingPong])\r\n\r\n    useEffect(() => {\r\n        const getDependentFields = (dep: any) => {\r\n            let data = null\r\n            if (dep.hasOwnProperty(\"oneOf\")) {\r\n                data = dep.oneOf\r\n            }\r\n            if (dep.hasOwnProperty(\"allOf\")) {\r\n                data = dep.allOf\r\n            }\r\n            if (data) {\r\n                let nestedFields = data.map((nested: any) => {\r\n                    let fiction = {type: \"object\", ...nested}\r\n                    let localFields = getFormFields(fiction)\r\n                    return localFields\r\n                }).flat()\r\n                return nestedFields\r\n            }\r\n            return []\r\n        }\r\n\r\n        if (connectedStages && connectedStages.length > 0) {\r\n            const allFields = connectedStages.map(stageObject => {\r\n                let stage = Object.values(stageObject)[0] as any\r\n                let ui = stage.ui_schema\r\n                let sc = stage.json_schema\r\n                let deps = sc.dependencies ?? {}\r\n                let depValues = Object.values(deps)\r\n                let stageFields = GetFormFields(sc)\r\n                if (depValues.length > 0) {\r\n                    let depFields = depValues.map((dep: any) => getDependentFields(dep)).flat()\r\n                    stageFields = Array.from(new Set([...fields, ...depFields]))\r\n                }\r\n                console.log(stage)\r\n                console.log(\"Fields\", fields)\r\n                return stageFields\r\n            }).flat()\r\n            setFields(allFields)\r\n        }\r\n    }, [pingPong, connectedStages])\r\n\r\n    useEffect(() => {\r\n        setSchema({\r\n            items: {\r\n                type: 'object',\r\n                title: 'Logic',\r\n                properties: {\r\n                    field: {\r\n                        enum: fields,\r\n                        title: 'Field',\r\n                        type: 'string'\r\n                    },\r\n                    condition: {\r\n                        enum: [\r\n                            '==',\r\n                            '!=',\r\n                            '>',\r\n                            '<',\r\n                            '>=',\r\n                            '<=',\r\n                            'ARRAY-CONTAINS',\r\n                            'ARRAY-CONTAINS-NOT'\r\n                        ],\r\n                        title: 'Condition',\r\n                        type: 'string'\r\n                    },\r\n                    value: {\r\n                        title: 'Value',\r\n                        type: 'string'\r\n                    }\r\n                },\r\n                dependencies: {},\r\n                required: []\r\n            },\r\n            title: 'Logic Array',\r\n            type: 'array',\r\n            dependencies: {},\r\n            required: []\r\n        })\r\n    }, [fields])\r\n\r\n    const handleSubmit = () => {\r\n        let data = {conditions: formResponses, pingpong: pingPong}\r\n        console.log(formResponses)\r\n\r\n        axios\r\n            .patch(conditionalstagesUrl + id + '/', data)\r\n            .then((res: any) => alert(\"Saved\"))\r\n            .catch((err: any) => alert(err));\r\n    }\r\n\r\n    const handleChangePingPong = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setPingPong(event.target.checked);\r\n    }\r\n\r\n    return (\r\n        <div style={{width: '70%', minWidth: '400px', margin: '0 auto', display: 'block', padding: 10}}>\r\n            {ready ?\r\n                <div>\r\n                    <FormControlLabel\r\n                        control={<Checkbox checked={pingPong} onChange={handleChangePingPong} name=\"PingPong\"\r\n                                           color=\"primary\"/>}\r\n                        label=\"Ping Pong\"\r\n                    />\r\n                    <Form\r\n                        schema={schema as JSONSchema7}\r\n                        formData={formResponses}\r\n                        onChange={(e: { formData: object }) => setFormResponses(e.formData)}\r\n                        onSubmit={handleSubmit}/>\r\n                </div>\r\n                :\r\n                <p>No node connection or end_ui detected. Connect to one or check if form has fields.</p>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Builder\r\n\r\n\r\n","import React, {useEffect, useState} from \"react\";\r\nimport firebase from '../../util/Firebase'\r\nimport {\r\n    useHistory,\r\n    useParams\r\n} from \"react-router-dom\";\r\n\r\nimport {\r\n    Button,\r\n    FormControl,\r\n    Grid,\r\n    Select,\r\n    InputLabel,\r\n    MenuItem,\r\n    createStyles,\r\n    makeStyles,\r\n    Theme\r\n} from '@material-ui/core'\r\nimport axios from \"../../util/Axios\";\r\n\r\nimport {casesUrl, tasksUrl} from '../../util/Urls'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        formControl: {\r\n            margin: theme.spacing(1),\r\n            minWidth: 150,\r\n        },\r\n        selectEmpty: {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n    }));\r\n\r\ntype RouterParams = { id: string, chainId: string }\r\n\r\nconst Builder = () => {\r\n    let {id, chainId} = useParams<RouterParams>();\r\n    const history = useHistory();\r\n\r\n    const handleCreateStage = () => {\r\n        let location = history.location.pathname.split('/actions')[0]\r\n        console.log(location)\r\n        history.push(`${location}/createstage/${id}`)\r\n    }\r\n\r\n    const handleCreateTask = async () => {\r\n        let location = history.location.pathname.split('/actions')[0]\r\n        let caseData = await axios.post(casesUrl, {chain: chainId})\r\n            .then(res => res.data)\r\n        console.log(caseData)\r\n        let taskData = await axios.post(tasksUrl, {case: caseData.id, stage: id})\r\n            .then(res => res.data)\r\n        console.log(taskData)\r\n        history.push(`${location}/task/${taskData.id}`)\r\n    }\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid container justify=\"center\" style={{background: '#7FB3D5'}} component={\"div\"}>\r\n                <Grid item style={{margin: 20}}>\r\n                    <Button onClick={handleCreateStage}>Create Form</Button>\r\n                </Grid>\r\n                <Grid item style={{margin: 20}}>\r\n                    <Button onClick={handleCreateTask}>Create Task (for test)</Button>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Builder","import React, {useEffect, useState} from \"react\";\r\nimport Form from \"@rjsf/bootstrap-4\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport axios from \"../../util/Axios\";\r\nimport {casesUrl, taskstagesUrl, tasksUrl} from '../../util/Urls'\r\n\r\ntype RouterParams = { id: string }\r\n\r\nconst Builder = () => {\r\n    const [schema, setSchema] = useState({})\r\n    const [uiSchema, setUiSchema] = useState({})\r\n    const [formResponses, setFormResponses] = useState({})\r\n    let {id} = useParams<RouterParams>();\r\n\r\n    useEffect(() => {\r\n        const getTask = () => {\r\n            return axios.get(tasksUrl + id).then(res => res.data)\r\n        }\r\n        const getStage = (stageId: string | number) => {\r\n            return axios.get(taskstagesUrl + stageId).then(res => res.data)\r\n        }\r\n        const setFormData = async () => {\r\n            let task = await getTask()\r\n            let stage = await getStage(task.stage)\r\n            console.log(task, stage)\r\n            setFormResponses(task.responses)\r\n            setSchema(stage.json_schema)\r\n            setUiSchema(stage.ui_schema)\r\n        }\r\n        if (id) {\r\n            setFormData()\r\n        }\r\n    }, [id])\r\n\r\n    const handleSubmit = () => {\r\n        console.log(formResponses)\r\n        let data = {responses: formResponses}\r\n        axios.patch(tasksUrl + id, data)\r\n        // .then(res => res.data)\r\n        // .then(res => {\r\n        //     console.log(res)\r\n        //     setFormResponses(res.responses)\r\n        //     setSchema(res.stage.json_schema)\r\n        //     setUiSchema(res.stage.ui_schema)\r\n        // })\r\n    }\r\n\r\n    return (\r\n        <div style={{width: '70%', minWidth: '400px', margin: '0 auto', display: 'block', padding: 10}}>\r\n            <Form schema={schema} uiSchema={uiSchema} formData={formResponses}\r\n                  onChange={(e) => setFormResponses(e.formData)} onSubmit={handleSubmit}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Builder\r\n\r\n\r\n","import React, {useEffect, useState} from \"react\";\r\nimport firebase from \"./Firebase\";\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nexport const AuthProvider = ({children}) => {\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged((user) => {\r\n            if (user) {\r\n                setCurrentUser(user)\r\n                user.getIdToken(true).then((idToken) => {\r\n                    localStorage.setItem(\"token\", idToken);\r\n                })\r\n            }\r\n        });\r\n        firebase.auth().onIdTokenChanged(user => {\r\n            if (user) {\r\n                user.getIdToken(false).then((idToken) => {\r\n                    localStorage.setItem(\"token\", idToken);\r\n                })\r\n            }\r\n        })\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n            value={{\r\n                currentUser\r\n            }}\r\n        >\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n","import React, {useContext, useState, useEffect} from 'react';\r\nimport clsx from 'clsx';\r\nimport {createStyles, makeStyles, Theme, useTheme} from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\n\r\nimport {\r\n    MenuItem,\r\n    Select,\r\n    FormControl,\r\n    InputLabel,\r\n    AppBar,\r\n    Button,\r\n    CssBaseline,\r\n    Drawer,\r\n    IconButton,\r\n    List,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    Toolbar,\r\n    Typography, Grid\r\n} from \"@material-ui/core\";\r\nimport {signInWithGoogle, signOut} from '../../util/Firebase';\r\nimport {AuthContext} from \"../../util/Auth\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport axios from '../../util/Axios';\r\n\r\nimport {campaignsUrl} from '../../util/Urls';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            display: 'flex',\r\n        },\r\n        appBar: {\r\n            zIndex: theme.zIndex.drawer + 1,\r\n            transition: theme.transitions.create(['width', 'margin'], {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen,\r\n            }),\r\n        },\r\n        appBarShift: {\r\n            marginLeft: drawerWidth,\r\n            width: `calc(100% - ${drawerWidth}px)`,\r\n            transition: theme.transitions.create(['width', 'margin'], {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n        },\r\n        menuButton: {\r\n            marginRight: 36,\r\n        },\r\n        hide: {\r\n            display: 'none',\r\n        },\r\n        drawer: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n            whiteSpace: 'nowrap',\r\n        },\r\n        drawerOpen: {\r\n            width: drawerWidth,\r\n            transition: theme.transitions.create('width', {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n        },\r\n        drawerClose: {\r\n            transition: theme.transitions.create('width', {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen,\r\n            }),\r\n            overflowX: 'hidden',\r\n            width: theme.spacing(7) + 1,\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: theme.spacing(9) + 1,\r\n            },\r\n        },\r\n        toolbar: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'flex-end',\r\n            padding: theme.spacing(0, 1),\r\n            // necessary for content to be below app bar\r\n            ...theme.mixins.toolbar,\r\n        },\r\n        content: {\r\n            flexGrow: 1,\r\n            // padding: theme.spacing(3),\r\n        },\r\n        title: {\r\n            flexGrow: 1\r\n        },\r\n        formControl: {\r\n            margin: theme.spacing(1),\r\n            alignItems: 'center'\r\n            // minWidth: 120,\r\n        },\r\n        selectEmpty: {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n        select: {},\r\n        selectIcon: {\r\n            fill: 'white',\r\n            top: 'calc(50% - 14px)'\r\n        },\r\n    }),\r\n);\r\n\r\ntype AppbarProps = { children: React.ReactNode }\r\ntype CampaingParams = { id: number, name: string, description?: string };\r\n\r\nconst Appbar = (props: AppbarProps) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const history = useHistory();\r\n    const {campaignId} = useParams<{ campaignId: string }>();\r\n    const {currentUser} = useContext(AuthContext)\r\n    const {children} = props;\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [campaign, setCampaign] = useState<number | string | unknown>(campaignId);\r\n    const [allCampaigns, setAllCampaigns] = useState<CampaingParams[]>([])\r\n\r\n    console.log(\"CURRENT CAMPAIGN\", campaignId)\r\n\r\n    useEffect(() => {\r\n        axios.get(campaignsUrl)\r\n            .then(res => res.data)\r\n            .then(res => {\r\n                console.log(res)\r\n                setAllCampaigns(res)\r\n            })\r\n    }, [])\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleOptionClick = (page: string) => {\r\n        history.push(`/campaign/${campaignId}/${page}`)\r\n    };\r\n\r\n    const handleCampaignChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n        let value = event.target.value;\r\n        console.log(value)\r\n        setCampaign(value)\r\n        history.push(`/campaign/${value}`)\r\n    }\r\n\r\n    const redirectToMain = () => {\r\n        history.push('/')\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline/>\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, {\r\n                            [classes.hide]: open,\r\n                        })}\r\n                    >\r\n                        <MenuIcon/>\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" noWrap style={{cursor: \"pointer\"}} onClick={redirectToMain}>\r\n                        GigaTurnip Admin\r\n                    </Typography>\r\n                    <Grid className={classes.title} />\r\n                    <FormControl className={classes.formControl} size=\"small\">\r\n                        <Select\r\n                            className={classes.select}\r\n                            autoWidth\r\n                            labelId=\"campaign-select-label\"\r\n                            id=\"campaign-select-label\"\r\n                            value={campaign}\r\n                            onChange={handleCampaignChange}\r\n                            label=\"Campaign\"\r\n                            disableUnderline\r\n                            style={{color: 'white'}}\r\n                            inputProps={{\r\n                                classes: {\r\n                                    icon: classes.selectIcon,\r\n                                },\r\n                            }}\r\n                        >\r\n                            {allCampaigns.map(camp => <MenuItem key={`${camp.name}_${camp.id}`}\r\n                                                                value={camp.id}>{camp.name}</MenuItem>)}\r\n                        </Select>\r\n                    </FormControl>\r\n                    {currentUser ?\r\n                        <Button onClick={signOut} color={\"inherit\"}>\r\n                            Log out\r\n                        </Button>\r\n                        :\r\n                        <Button onClick={signInWithGoogle} color={\"inherit\"}>\r\n                            Login\r\n                        </Button>\r\n                    }\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                variant=\"permanent\"\r\n                className={clsx(classes.drawer, {\r\n                    [classes.drawerOpen]: open,\r\n                    [classes.drawerClose]: !open,\r\n                })}\r\n                classes={{\r\n                    paper: clsx({\r\n                        [classes.drawerOpen]: open,\r\n                        [classes.drawerClose]: !open,\r\n                    }),\r\n                }}\r\n            >\r\n                <div className={classes.toolbar}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === 'rtl' ? <ChevronRightIcon/> : <ChevronLeftIcon/>}\r\n                    </IconButton>\r\n                </div>\r\n                <Divider/>\r\n                <List>\r\n                    <ListItem button onClick={() => handleOptionClick(\"chain\")}>\r\n                        <ListItemIcon><InboxIcon/></ListItemIcon>\r\n                        <ListItemText primary={\"Chains\"}/>\r\n                    </ListItem>\r\n                </List>\r\n            </Drawer>\r\n            <main className={classes.content}>\r\n                <div className={classes.toolbar}/>\r\n                {children}\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Appbar\r\n","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 300,\r\n        // height: 200\r\n    },\r\n    extra: {\r\n        marginBottom: 15\r\n    }\r\n});\r\n\r\ntype CardProps = { chain: { id: number, campaign: number, name: string, description?: string } }\r\n\r\nconst ChainCard = (props: CardProps) => {\r\n    const classes = useStyles();\r\n    const {id, campaign, name, description} = props.chain;\r\n    const history = useHistory()\r\n\r\n    const handleOpen = () => {\r\n        history.push(`${history.location.pathname}/${id}`)\r\n    }\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardContent>\r\n                <Typography variant=\"h5\" component=\"h2\" gutterBottom={true}>\r\n                    {name}\r\n                </Typography>\r\n                <Typography className={classes.extra} variant=\"subtitle2\" color=\"textSecondary\">\r\n                    ID: {id} Campaign: {campaign}\r\n                </Typography>\r\n                <Typography variant=\"body1\" component=\"p\">\r\n                    {description ? description : <br/>}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                <Button size=\"small\" onClick={handleOpen}>Open</Button>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default ChainCard","import React, {useState} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport {blue} from '@material-ui/core/colors';\r\nimport {DialogActions, DialogContent, Grid, TextField} from \"@material-ui/core\";\r\nimport {NewChainParams} from \"./Chains\";\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    avatar: {\r\n        backgroundColor: blue[100],\r\n        color: blue[600],\r\n    },\r\n});\r\n\r\ntype ChainDialogProps = {\r\n    open: boolean;\r\n    onClose: () => void;\r\n    onSave: (data: NewChainParams) => void;\r\n}\r\n\r\ntype RouterParams = {campaignId: string}\r\n\r\nconst AddChainDialog = (props: ChainDialogProps) => {\r\n    const classes = useStyles();\r\n    const {campaignId} = useParams<RouterParams>();\r\n\r\n    const {onClose, onSave, open} = props;\r\n\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [campaign, setCampaign] = useState(campaignId)\r\n\r\n    const handleClose = () => {\r\n        onClose();\r\n    };\r\n\r\n    const handleSave = () => {\r\n        if (name && campaign) {\r\n            let parsedCampaign = parseInt(campaign)\r\n            let data = {name, description, campaign: parsedCampaign}\r\n            onSave(data)\r\n        }\r\n    }\r\n\r\n    const handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        let value = event.target.value\r\n        if (value) {\r\n            setName(value)\r\n        }\r\n        else {\r\n            setName('')\r\n        }\r\n    };\r\n\r\n    const handleDescriptionChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        let value = event.target.value\r\n        if (value) {\r\n            setDescription(value)\r\n        }\r\n        else {\r\n            setDescription('')\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n            <DialogTitle>Add Chain</DialogTitle>\r\n            <DialogContent>\r\n                <Grid container justify={\"center\"}>\r\n                    <Grid container item><TextField fullWidth label={\"Name\"} onChange={handleNameChange}/></Grid>\r\n                    <Grid container item>\r\n                        <TextField fullWidth label={\"Description\"} multiline rows={4} onChange={handleDescriptionChange}/>\r\n                    </Grid>\r\n                </Grid>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleSave}>Save</Button>\r\n                <Button onClick={handleClose}>Close</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default AddChainDialog","import React, {useEffect, useState} from \"react\";\r\nimport {\r\n    useHistory,\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport axios from \"../../util/Axios\";\r\nimport {Button, Grid, Typography} from \"@material-ui/core\";\r\nimport Card from \"./ChainCard\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport AddChainDialog from \"./Dialog\";\r\nimport {chainsUrl} from '../../util/Urls'\r\n\r\ntype RouterParams = {campaignId: string}\r\ntype ChainParams = { id: number, campaign: number, name: string, description?: string };\r\nexport type NewChainParams = { campaign: number, name: string, description?: string }\r\n\r\nconst Builder = () => {\r\n    const [chains, setChains] = useState<ChainParams[]>([])\r\n    const [open, setOpen] = useState(false);\r\n    const {campaignId} = useParams<RouterParams>()\r\n\r\n    useEffect(() => {\r\n        axios.get(chainsUrl)\r\n            .then(res => res.data)\r\n            .then(res => {\r\n                console.log(res)\r\n                const filtered = res.filter((chain: {campaign: number, name: string, description: string, id: number}) => chain.campaign?.toString() == campaignId)\r\n                setChains(filtered)\r\n            })\r\n    }, [])\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleDialogSave = (data: NewChainParams) => {\r\n        setOpen(false);\r\n        handleAddChain(data)\r\n    }\r\n\r\n    const handleAddChain = (data: NewChainParams) => {\r\n        console.log(data)\r\n        axios.post(chainsUrl, data)\r\n            .then(res => {\r\n                console.log(res)\r\n                window.location.reload(false);\r\n            })\r\n    };\r\n\r\n    return (\r\n        <Grid container justify={\"center\"}>\r\n            <AddChainDialog open={open} onSave={handleDialogSave} onClose={handleClose}/>\r\n            <Grid container style={{padding: 20}}>\r\n                <Button variant={\"contained\"} color={\"primary\"} startIcon={<AddIcon/>} onClick={handleClickOpen}>Add Chain</Button>\r\n            </Grid>\r\n            {chains.map(chain => (\r\n                <Grid item style={{padding: 10}}>\r\n                    <Card key={chain.id} chain={chain}/>\r\n                </Grid>\r\n            ))}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Builder\r\n\r\n\r\n","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 300,\r\n        // height: 200\r\n    },\r\n    extra: {\r\n        marginBottom: 15\r\n    }\r\n});\r\n\r\ntype CardProps = { chain: { id: number, name: string, description?: string } }\r\n\r\nconst ChainCard = (props: CardProps) => {\r\n    const classes = useStyles();\r\n    const {id, name, description} = props.chain;\r\n    const history = useHistory()\r\n\r\n    const handleOpen = () => {\r\n        history.push(`/campaign/${id}`)\r\n    }\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardContent>\r\n                <Typography variant=\"h5\" component=\"h2\" gutterBottom={true}>\r\n                    {name}\r\n                </Typography>\r\n                <Typography className={classes.extra} variant=\"subtitle2\" color=\"textSecondary\">\r\n                    ID: {id}\r\n                </Typography>\r\n                <Typography variant=\"body1\" component=\"p\">\r\n                    {description ? description : <br/>}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                <Button size=\"small\" onClick={handleOpen}>Open</Button>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default ChainCard","import React, {useState} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport {blue} from '@material-ui/core/colors';\r\nimport {DialogActions, DialogContent, Grid, TextField} from \"@material-ui/core\";\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    avatar: {\r\n        backgroundColor: blue[100],\r\n        color: blue[600],\r\n    },\r\n});\r\n\r\ntype ChainDialogProps = {\r\n    open: boolean;\r\n    onClose: () => void;\r\n    onSave: (data: any) => void;\r\n}\r\n\r\nconst AddCampaignDialog = (props: ChainDialogProps) => {\r\n    const classes = useStyles();\r\n    const {onClose, onSave, open} = props;\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [campaign, setCampaign] = useState<number>();\r\n\r\n    const handleClose = () => {\r\n        onClose();\r\n    };\r\n\r\n    const handleSave = () => {\r\n        if (name) {\r\n            let data = {name, description, campaign}\r\n            onSave(data)\r\n        }\r\n        else {\r\n            alert('error: No name')\r\n        }\r\n    }\r\n\r\n    const handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        let value = event.target.value\r\n        if (value) {\r\n            setName(value)\r\n        }\r\n        else {\r\n            setName('')\r\n        }\r\n    };\r\n\r\n    const handleDescriptionChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        let value = event.target.value\r\n        if (value) {\r\n            setDescription(value)\r\n        }\r\n        else {\r\n            setDescription('')\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n            <DialogTitle>Add Chain</DialogTitle>\r\n            <DialogContent>\r\n                <Grid container justify={\"center\"}>\r\n                    <Grid container item><TextField fullWidth label={\"Name\"} onChange={handleNameChange}/></Grid>\r\n                    <Grid container item>\r\n                        <TextField fullWidth label={\"Description\"} multiline rows={4} onChange={handleDescriptionChange}/>\r\n                    </Grid>\r\n                </Grid>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleSave}>Save</Button>\r\n                <Button onClick={handleClose}>Close</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default AddCampaignDialog","import React, {useEffect, useState} from \"react\";\r\nimport axios from \"../../util/Axios\";\r\nimport {Button, Grid} from \"@material-ui/core\";\r\nimport Card from \"./CampaignCard\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport AddChainDialog from \"./Dialog\";\r\nimport {campaignsUrl} from \"../../util/Urls\"\r\n\r\ntype CampaingParams = { id: number, name: string, description?: string };\r\nexport type NewCampaignParams = { name: string, description?: string }\r\n\r\nconst Builder = () => {\r\n    const [campaigns, setCampaigns] = useState<CampaingParams[]>([])\r\n    const [open, setOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        axios.get(campaignsUrl)\r\n            .then(res => res.data)\r\n            .then(res => {\r\n                console.log(res)\r\n                setCampaigns(res)\r\n            })\r\n    }, [])\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleDialogSave = (data: NewCampaignParams) => {\r\n        setOpen(false);\r\n        handleCampaignAdd(data)\r\n    }\r\n\r\n    const handleCampaignAdd = (data: NewCampaignParams) => {\r\n        axios.post(campaignsUrl, data)\r\n            .then(res => {\r\n                console.log(res)\r\n                window.location.reload(false);\r\n            })\r\n    };\r\n\r\n    return (\r\n        <Grid container justify={\"center\"}>\r\n            <AddChainDialog open={open} onSave={handleDialogSave} onClose={handleClose}/>\r\n            <Grid container style={{padding: 20}}>\r\n                <Button variant={\"contained\"} color={\"primary\"} startIcon={<AddIcon/>} onClick={handleClickOpen}>Add Campaign</Button>\r\n            </Grid>\r\n            {campaigns.map(campaign => (\r\n                <Grid item style={{padding: 10}}>\r\n                    <Card key={campaign.id} chain={campaign}/>\r\n                </Grid>\r\n            ))}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Builder\r\n\r\n\r\n","import React, {useContext} from 'react';\r\nimport clsx from 'clsx';\r\nimport {createStyles, makeStyles, Theme, useTheme} from '@material-ui/core/styles';\r\nimport {AppBar, Button, CssBaseline, Toolbar, Typography} from \"@material-ui/core\";\r\nimport {signInWithGoogle, signOut} from '../../util/Firebase';\r\nimport {AuthContext} from \"../../util/Auth\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            display: 'flex',\r\n        },\r\n        appBar: {\r\n            zIndex: theme.zIndex.drawer + 1,\r\n            transition: theme.transitions.create(['width', 'margin'], {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen,\r\n            }),\r\n        },\r\n        appBarShift: {\r\n            marginLeft: drawerWidth,\r\n            width: `calc(100% - ${drawerWidth}px)`,\r\n            transition: theme.transitions.create(['width', 'margin'], {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n        },\r\n        menuButton: {\r\n            marginRight: 36,\r\n        },\r\n        hide: {\r\n            display: 'none',\r\n        },\r\n        drawer: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n            whiteSpace: 'nowrap',\r\n        },\r\n        drawerOpen: {\r\n            width: drawerWidth,\r\n            transition: theme.transitions.create('width', {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n        },\r\n        drawerClose: {\r\n            transition: theme.transitions.create('width', {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen,\r\n            }),\r\n            overflowX: 'hidden',\r\n            width: theme.spacing(7) + 1,\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: theme.spacing(9) + 1,\r\n            },\r\n        },\r\n        toolbar: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'flex-end',\r\n            padding: theme.spacing(0, 1),\r\n            // necessary for content to be below app bar\r\n            ...theme.mixins.toolbar,\r\n        },\r\n        content: {\r\n            flexGrow: 1,\r\n            // padding: theme.spacing(3),\r\n        },\r\n        title: {\r\n            flexGrow: 1\r\n        }\r\n    }),\r\n);\r\n\r\ntype AppbarProps = { children: React.ReactNode }\r\n\r\nconst Appbar = (props: AppbarProps) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n    const {children} = props;\r\n    const {currentUser} = useContext(AuthContext)\r\n    const history = useHistory();\r\n    const {campaignId} = useParams<{campaignId: string}>();\r\n\r\n    console.log(campaignId)\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleOptionClick = (page: string) => {\r\n        history.push(`/campaign/${campaignId}/${page}`)\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline/>\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n                <Toolbar>\r\n                    <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                        GigaTurnip Admin\r\n                    </Typography>\r\n                    {currentUser ?\r\n                        <Button onClick={signOut} color={\"inherit\"}>\r\n                            Log out\r\n                        </Button>\r\n                        :\r\n                        <Button onClick={signInWithGoogle} color={\"inherit\"}>\r\n                            Login\r\n                        </Button>\r\n                    }\r\n                </Toolbar>\r\n            </AppBar>\r\n            <main className={classes.content}>\r\n                <div className={classes.toolbar}/>\r\n                {children}\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Appbar\r\n","import React, {useContext} from \"react\";\r\nimport Graph from './components/graph/Graph'\r\nimport StageBuilder from './components/form-builders/StageBuilder'\r\nimport LogicBuilder from './components/form-builders/LogicBuilder'\r\nimport Actions from './components/actions/Actions'\r\nimport Task from './components/task/Task'\r\nimport Appbar from \"./components/appbar/Appbar\";\r\n\r\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\r\n\r\nimport {AuthContext} from \"./util/Auth\";\r\nimport Chains from \"./components/chains/Chains\";\r\nimport Campaigns from \"./components/campaigns/Campaigns\";\r\nimport SimpleAppbar from \"./components/appbar/SimpleAppbar\";\r\n\r\n\r\nconst App = () => {\r\n    const {currentUser} = useContext(AuthContext)\r\n\r\n    return (\r\n        <div>\r\n            <Router>\r\n                <Switch>\r\n                    <Route path={\"/campaign/:campaignId\"}>\r\n                        <Appbar>\r\n                            <Route exact path=\"/campaign/:campaignId/chain/:chainId/createstage/:id\">\r\n                                <StageBuilder/>\r\n                            </Route>\r\n                            <Route exact path=\"/campaign/:campaignId/chain/:chainId/createlogic/:id\">\r\n                                <LogicBuilder/>\r\n                            </Route>\r\n                            <Route exact path=\"/campaign/:campaignId/chain/:chainId/task/:id\">\r\n                                <Task/>\r\n                            </Route>\r\n                            <Route exact path=\"/campaign/:campaignId/chain/:chainId/actions/:id\">\r\n                                <Actions/>\r\n                            </Route>\r\n                            <Route exact path=\"/campaign/:campaignId/chain\">\r\n                                <Chains/>\r\n                            </Route>\r\n                            <Route exact path=\"/campaign/:campaignId/chain/:chainId\">\r\n                                <Graph/>\r\n                            </Route>\r\n                        </Appbar>\r\n                    </Route>\r\n                    <Route path=\"/\">\r\n                        <SimpleAppbar>\r\n                            <Campaigns/>\r\n                        </SimpleAppbar>\r\n                    </Route>\r\n                </Switch>\r\n            </Router>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {AuthProvider} from \"./util/Auth\";\r\n\r\nReactDOM.render(\r\n    // <React.StrictMode>\r\n    <AuthProvider>\r\n        <App/>\r\n    </AuthProvider>,\r\n    // </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}
{"version":3,"sources":["services/firebase/Firebase.js","context/authentication/AuthProvider.tsx","context/authentication/hooks/useAuth.tsx","utils/constants/Paths.js","pages/login/RequireAuth.tsx","services/api/Urls.js","services/api/useAxios.tsx","components/card/Card.tsx","components/card/ExpandableCard.tsx","components/list/ListContent.tsx","components/list/ListHeader.tsx","components/list/List.tsx","pages/campaigns/Campaigns.tsx","pages/login/Login.tsx","components/layout/appbar/Appbar.tsx","components/layout/Layout.tsx","pages/chains/Chains.tsx","pages/graph/nodes/BaseNode.tsx","pages/graph/nodes/LogicNode.tsx","pages/graph/nodes/StageNode.tsx","utils/hooks/UseHelpers.ts","pages/graph/sidebar/Sidebar.tsx","pages/graph/Graph.tsx","pages/form-builders/stage-builder/controls/Controls.tsx","components/form/custom-widgets/AudioWidget.tsx","components/form/custom-widgets/AutoCompleteWidget.tsx","components/form/custom-widgets/CustomLinkWidget.tsx","components/form/custom-widgets/FixedRadioWidget.tsx","components/form/custom-widgets/Counter.tsx","components/form/Form.tsx","components/form-builder/custom-fields/AudioType.tsx","components/form-builder/custom-fields/AutoCompleteType.tsx","components/form-builder/custom-fields/CustomFileType.tsx","components/form-builder/custom-fields/CustomLinkType.tsx","components/form-builder/custom-fields/CounterType.tsx","components/form-builder/custom-fields/CustomLongAnswerType.tsx","components/form-builder/custom-fields/CardType.tsx","components/form-builder/custom-fields/ReaderType.tsx","components/text-editor/TextEditor.tsx","components/form-builder/custom-fields/RichTextType.tsx","components/form-builder/custom-fields/index.tsx","components/form-builder/FormBuilder.tsx","components/layout/common-layouts/BuilderLayout.tsx","pages/form-builders/stage-builder/builder/Builder.tsx","components/text-editor/TextViewer.tsx","pages/form-builders/stage-builder/preview/Preview.tsx","pages/form-builders/stage-builder/schema-editor/SchemaEditor.tsx","pages/form-builders/stage-builder/plugins/Plugin.tsx","pages/form-builders/stage-builder/plugins/Plugins.tsx","pages/form-builders/stage-builder/text/Text.tsx","context/toast/ToastProvider.tsx","context/toast/hooks/useToast.tsx","components/prompt/Prompt.tsx","pages/form-builders/stage-builder/card-data/CardDataBuilder.tsx","pages/form-builders/stage-builder/StageBuilder.tsx","pages/form-builders/logic-builder/LogicBuilder.tsx","pages/chains/create-chain/CreateChain.tsx","pages/response-flattener/ResponseFlattener.tsx","components/card/ResponseFlattenerCard.tsx","pages/response-flattener/FlattenerList.tsx","pages/response-flattener/CreateFlattener.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["auth","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","getAuth","provider","GoogleAuthProvider","setCustomParameters","prompt","AuthContext","React","createContext","AuthProvider","children","useState","user","setUser","ready","setReady","useEffect","onIdTokenChanged","a","value","getToken","getIdToken","login","callback","signInWithPopup","then","result","console","log","logout","signOut","Provider","useAuth","useContext","ROUTES","title","path","RequireAuth","location","useLocation","to","state","from","CircularProgress","chainsUrl","taskstagesUrl","conditionalstagesUrl","responseflattener","useAxios","axios","defaultAxios","create","baseURL","interceptors","request","use","config","token","headers","error","Promise","reject","getCampaigns","get","res","data","results","getChains","campaignId","createChain","post","getStageNodes","chainId","getLogicNodes","getTaskStage","id","saveTaskStage","patch","getTaskStageOptions","options","getConditionalStage","saveConditionalStage","getResponseFlattenerList","campaign","getResponseFlattener","downloadFlattenedResponses","stage","flattener","responseType","response","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","saveResponseFlattener","put","createResponseFlattener","Card","props","onClick","name","description","CardContent","sx","pb","Typography","variant","component","gutterBottom","color","overflow","textOverflow","height","maxWidth","CardActions","Button","size","ExpandMore","styled","expand","other","IconButton","theme","transform","marginLeft","transition","transitions","duration","shortest","ExpandableCard","hideExpandButton","hideOpenButton","setExpand","actions","push","aria-expanded","aria-label","CardHeader","action","Stack","direction","spacing","subheader","titleTypographyProps","subheaderTypographyProps","Collapse","in","timeout","unmountOnExit","ListContent","view","onSelect","Grid","container","py","xs","md","columns","sm","map","item","index","ListHeader","label","hideCreateButton","hideViewButton","onViewChange","alignItems","flex","hidden","Link","boxShadow","Tooltip","List","defaultView","setView","localStorage","getItem","Box","setItem","Campaigns","navigate","useNavigate","setData","px","Login","pathname","replace","drawerWidth","openedMixin","width","easing","sharp","enteringScreen","overflowX","closedMixin","leavingScreen","breakpoints","down","DrawerHeader","display","justifyContent","padding","mixins","toolbar","StyledAppBar","MuiAppBar","shouldForwardProp","prop","open","zIndex","drawer","Drawer","MuiDrawer","flexShrink","whiteSpace","boxSizing","Appbar","useTheme","useParams","setOpen","DrawerItems","page","icon","CssBaseline","position","Toolbar","edge","marginRight","flexGrow","underline","noWrap","Divider","ListItem","ListItemIcon","ListItemText","primary","Layout","Chains","parsedId","parseInt","Node","type","fontSize","textAlign","palette","success","contrastText","backgroundColor","main","borderRadius","shape","BaseNode","Position","Top","style","Bottom","CustomLogicNode","CustomStageNode","useHelpers","getNode","elements","filter","node","pop","getUrl","updateConnections","currentNodeId","method","connections","undefined","in_stages","out_stages","ids","connection","removeConnections","target","source","targetNode","sourceNode","createNode","x_pos","Math","round","x","y_pos","y","chain","catch","err","toString","getFormFields","schema","formData","retrievedSchema","retrieveSchema","pathSchema","toPathSchema","getFieldNames","getAllPaths","_obj","acc","paths","Object","keys","forEach","key","newPaths","__rjsf_additionalProperties","$name","formValue","_get","_isEmpty","parseId","Error","addConnections","removeElements","elementsToRemove","nodeIdsToRemove","n","element","includes","isEdge","delete","updateNode","cursor","margin","Sidebar","draggable","setDraggable","setLabel","onDragStart","event","nodeLabel","nodeType","JSON","stringify","dataTransfer","effectAllowed","onDragEnd","mt","TextField","onChange","e","align","Graph","reactFlowWrapper","useRef","reactFlowInstance","setReactFlowInstance","setElements","parsedCampaignId","parsedChainId","extraEdgeOptions","strokeWidth","arrowHeadType","all","stageNodes","logicNodes","allNodes","nodes","parseFloat","length","sourceId","els","addEdge","onConnect","params","newParams","onDrop","preventDefault","reactFlowBounds","current","getBoundingClientRect","transfer","getData","project","clientX","left","clientY","top","parsedData","parse","newNode","es","onElementDoubleClick","nodeTypes","LOGIC","LogicNode","STAGE","StageNode","ref","onElementsRemove","onNodeDoubleClick","onEdgeDoubleClick","onLoad","_reactFlowInstance","onDragOver","dropEffect","onNodeDragStop","preventScrolling","background","GoBackButton","dark","Controls","mode","allModes","onBack","p","fill","AudioWidget","required","disabled","readonly","onBlur","onFocus","TextWidget","placeholder","autofocus","rawErrors","inputType","Group","className","Label","Control","autoFocus","readOnly","list","examples","emptyValue","concat","default","example","CustomLinkWidget","RadioWidget","enumOptions","enumDisabled","_onChange","_onBlur","_onFocus","inline","Boolean","option","i","itemDisabled","Array","isArray","indexOf","checked","Check","Counter","_value","newValue","Date","toISOString","pr","fullWidth","Form","uiSchema","hideButton","onSubmit","widgets","customfile","autocomplete","AutoCompleteWidget","customlink","LinkWidget","audio","fields","counter","CounterWidget","AudioType","displayName","matchIf","types","widget","possibleOptions","defaultDataSchema","defaultUiSchema","private","cardBody","parameters","ev","CustomAutoCompleteType","webhook","searchField","responseField","Fragment","paddingRight","paddingLeft","CustomFileType","file","multiple","CustomLinkType","CounterType","field","items","format","longAnswerInput","longAnswer","modalBody","minLength","maxLength","rows","pattern","CardType","card","subtype","ReaderType","reader","TextEditor","onEditorChange","editor","tinymceScriptSrc","process","init","plugins","menubar","toolbar_sticky","image_advtab","importcss_append","image_caption","noneditable_noneditable_class","toolbar_mode","contextmenu","autosave_prefix","content_style","RichText","AutoCompleteType","CustomLongAnswerType","FormBuilder","customFormInputs","Types","uischema","ui","mods","BuilderLayout","minWidth","Builder","onSchemaChange","onFormDataChange","optionsSchema","StageOptionsSchema","displayed_prev_stages","TextViewer","Preview","text","SchemaEditor","isEditable","onUiChange","onIsEditableChange","onSave","onUndo","prettySchema","prettyUi","parsedSchema","parsedUi","FormGroup","my","FormControlLabel","control","Switch","inputProps","labelPlacement","m","multiline","InputProps","marginTop","marginBottom","Plugin","setSchema","getOptions","POST","transformOptionsToForm","DEFAULT_FORM_TYPES","properties","help_text","req","template","Plugins","Text","ToastContext","Alert","forwardRef","elevation","ToastProvider","setTitle","setVariant","closeToast","reason","openToast","String","Snackbar","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","severity","useToast","useBlocker","blocker","when","NavigationContext","navigator","unblock","block","tx","autoUnblockingTx","retry","setTimeout","CardDataBuilder","onUseMainSchema","StageBuilder","stageId","setUiSchema","setFormData","viewMode","setViewMode","textEditorData","setTextEditorData","setEditable","tmpSchema","setTmpSchema","tmpUi","setTmpUi","originalSchema","setOriginalSchema","originalUi","setOriginalUi","showPrompt","setShowPrompt","cardSchema","setCardSchema","cardUi","setCardUi","message","useCallback","confirm","usePrompt","schemaJson","uiJson","VIEW_MODES","builder","preview","json_schema","ui_schema","rich_text","webhook_address","webhook_params","card_json_schema","card_ui_schema","getStage","compileData","parsed_webhook_params","responses","saveData","debouncedSave","debounce","handleSchemaChange","handleCardDataChange","handleFormDataChange","handleTextChange","d","handleIsEditableChange","handleTmpSchemaChange","handleTmpUiChange","handleTmpSave","handleTmpUndo","useMainSchemaInCardData","renderContent","LogicBuilder","isPingPong","setPingPong","connectedStages","setConnectedStages","setFields","conditions","pingpong","taskStage","currentStage","connectedIds","connId","connStages","allFields","stageObject","values","stageSchema","dependencies","dependenciesValues","formFields","depFields","dep","hasOwnProperty","oneOf","allOf","nested","fictionalSchema","flat","getDependentFields","Set","enum","condition","Checkbox","CreateChain","alert","ResponseFlattener","task_stage","rest","ResponseFlattenerCard","onDownloadClick","onSettingsClick","FlattenerList","handleDownload","handleOpen","CreateFlattener","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"iwDAcMA,GADMC,YAVW,CACnBC,OAAQ,0CACRC,WAAY,mCACZC,UAAW,mBACXC,cAAe,+BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAINC,eAEPC,EAAW,IAAIC,IACrBD,EAASE,oBAAoB,CACzBC,OAAQ,mB,WCNCC,EAAcC,IAAMC,cAA+B,MA0CjDC,EAxCM,SAAC,GAA+C,IAA9CC,EAA6C,EAA7CA,SACnB,EAAwBC,mBAAc,MAAtC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,oBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAEAC,qBAAU,WACNC,YAAiBzB,EAAD,uCAAO,WAAOoB,GAAP,SAAAM,EAAA,sDAEfL,EADAD,GAGQ,MAEZG,GAAS,GANU,2CAAP,yDAQjB,IAEH,IAoBMI,EAAQ,CAACP,OAAME,QAAOM,SApBd,uCAAG,sBAAAF,EAAA,sEACAG,YAAWT,GADX,mFAAH,qDAoBwBU,MAhBxB,SAACC,GACX,OAAOC,YAAgBhC,EAAMU,GAAUuB,MAAK,SAACC,GACzC,IAAMd,EAAOc,EAAOd,KACpBe,QAAQC,IAAIhB,GACZC,EAAQD,GACRW,QAWqCM,OAP9B,SAACN,GACZ,OAAOO,YAAQtC,GAAMiC,MAAK,WACtBZ,EAAQ,MACRU,SAMR,OAAO,cAACjB,EAAYyB,SAAb,CAAsBZ,MAAOA,EAA7B,SAAqCT,KChDnCsB,EAAU,kBAAMzB,IAAM0B,WAAW3B,ICFjC4B,EACF,CAACC,MAAO,QAASC,KAAM,U,SCgBnBC,EAbK,SAAC,GAA6C,IAA3C3B,EAA0C,EAA1CA,SACflB,EAAOwC,IACPM,EAAWC,cAIjB,OAFAZ,QAAQC,IAAIpC,GAERA,EAAKsB,QAAUtB,EAAKoB,KACf,cAAC,IAAD,CAAU4B,GAAIN,EAAaE,KAAMK,MAAO,CAAEC,KAAMJ,KAGlD9C,EAAKsB,MAAQJ,EAAW,cAACiC,EAAA,EAAD,KCZ3BC,EAAY,iBACZC,EAAgB,qBAIhBC,EAAuB,4BAIvBC,EAAoB,6B,kBC0HXC,EAzHE,WACb,IAAO5B,EAAYY,IAAZZ,SACD6B,EAAQC,IAAaC,OAAO,CAC9BC,QDhBQ,4CCmBZH,EAAMI,aAAaC,QAAQC,KACvB,SAAAC,GACI,OAAOpC,IAAWK,MAAK,SAAAgC,GAInB,OAHIA,GAASD,GAAUA,EAAOE,UAC1BF,EAAOE,QAAP,cAAkC,OAASD,GAExCD,QAGf,SAAAG,GAAK,OAAIC,QAAQC,OAAOF,MAsF5B,MAAO,CACHV,QACAa,aApFiB,WACjB,OAAOb,EAAMc,IAAN,UD/BM,oBC+BN,gBACFtC,MAAK,SAAAuC,GAAG,OAAIA,EAAIC,QAChBxC,MAAK,SAAAuC,GAAG,OAAIA,EAAIE,YAkFrBC,UA/Ec,SAACC,GACf,OAAOnB,EAAMc,IAAN,UAAanB,EAAb,qBAAmCwB,EAAnC,gBACF3C,MAAK,SAAAuC,GAAG,OAAIA,EAAIC,QAChBxC,MAAK,SAAAuC,GAAG,OAAIA,EAAIE,YA6ErBG,YA1EgB,SAACJ,GACjB,OAAOhB,EAAMqB,KAAN,UAAc1B,GAAaqB,IA0ElCM,cAvEkB,SAACH,EAAoBI,GACvC,OAAOvB,EAAMc,IAAN,UAAalB,EAAb,4BAA8CuB,EAA9C,kBAAkEI,EAAlE,gBACF/C,MAAK,SAAAuC,GAAG,OAAIA,EAAIC,QAChBxC,MAAK,SAAAuC,GAAG,OAAIA,EAAIE,YAqErBO,cAlEkB,SAACL,EAAoBI,GACvC,OAAOvB,EAAMc,IAAN,UAAajB,EAAb,4BAAqDsB,EAArD,kBAAyEI,EAAzE,gBACF/C,MAAK,SAAAuC,GAAG,OAAIA,EAAIC,QAChBxC,MAAK,SAAAuC,GAAG,OAAIA,EAAIE,YAgErBQ,aA7DiB,SAACC,GAClB,OAAO1B,EAAMc,IAAN,UAAalB,EAAgB8B,EAA7B,MACFlD,MAAK,SAAAuC,GAAG,OAAIA,EAAIC,SA4DrBW,cAzDkB,SAACD,EAAYV,GAC/B,OAAOhB,EAAM4B,MAAN,UAAehC,EAAgB8B,EAA/B,KAAsCV,IAyD7Ca,oBAtDwB,WACxB,OAAO7B,EAAM8B,QAAN,UAAiBlC,IACnBpB,MAAK,SAAAuC,GAAG,OAAIA,EAAIC,SAqDrBe,oBAlDwB,SAACL,GACzB,OAAO1B,EAAMc,IAAN,UAAajB,EAAuB6B,EAApC,MACFlD,MAAK,SAAAuC,GAAG,OAAIA,EAAIC,SAiDrBgB,qBA9CyB,SAACN,EAAYV,GACtC,OAAOhB,EAAM4B,MAAN,UAAe/B,EAAuB6B,EAAtC,KAA6CV,IA8CpDiB,yBA3C6B,SAACC,GAC9B,OAAOlC,EAAMc,IAAN,UAAahB,EAAb,wCAA8DoC,IAChE1D,MAAK,SAAAuC,GAAG,OAAIA,EAAIC,QAChBxC,MAAK,SAAAuC,GAAG,OAAIA,EAAIE,YAyCrBkB,qBAtCyB,SAACT,GAC1B,OAAO1B,EAAMc,IAAN,UAAahB,EAAoB4B,EAAjC,MACFlD,MAAK,SAAAuC,GAAG,OAAIA,EAAIC,SAqCrBoB,2BA3B+B,SAACC,EAAeC,GAC/C,OAAOtC,EAAMc,IAAN,UAAahB,EAAoBwC,EAAjC,SAAmD,CACtDC,aAAc,SACf/D,MAAK,SAACgE,GACL,IAAMC,EAAMC,OAAOC,IAAIC,gBAAgB,IAAIC,KAAK,CAACL,EAASxB,QACpD8B,EAAOC,SAASC,cAAc,KACpCF,EAAKG,KAAOR,EACZK,EAAKI,aAAa,WAAY,eAC9BH,SAASI,KAAKC,YAAYN,GAC1BA,EAAKO,YAmBTC,sBApC0B,SAAC5B,EAAYV,GACvC,OAAOhB,EAAMuD,IAAN,UAAazD,EAAoB4B,EAAjC,KAAwCV,IAoC/CwC,wBAjC4B,SAACxC,GAC7B,OAAOhB,EAAMqB,KAAN,UAAcvB,GAAqBkB,M,+DC/DnCyC,EA1BF,SAACC,GACV,IAAO1C,EAAiB0C,EAAjB1C,KAAM2C,EAAWD,EAAXC,QACNC,EAAyB5C,EAAzB4C,KAAMC,EAAmB7C,EAAnB6C,YAAanC,EAAMV,EAANU,GAM1B,OACI,eAAC,IAAD,WACI,eAACoC,EAAA,EAAD,CAAaC,GAAI,CAACC,GAAI,GAAtB,UACI,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,MAAnC,SACKP,IAEL,eAACK,EAAA,EAAD,CAAYG,cAAY,EAACF,QAAS,UAAWG,MAAM,iBAAnD,iBAAyE3C,KACzE,cAACuC,EAAA,EAAD,CAAYK,SAAU,SAAUC,aAAc,WAAYL,QAAQ,QAAQH,GAAI,CAACS,OAAQ,GAAIC,SAAU,KAArG,SACKZ,OAGT,cAACa,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAQC,KAAK,QAAQjB,QAhBb,WAChBA,EAAQjC,IAeA,8D,yFCRVmD,EAAaC,aAAO,SAACpB,GACIA,EAApBqB,OAAP,IAAkBC,EAAlB,YAA2BtB,EAA3B,GACA,OAAO,cAACuB,EAAA,EAAD,eAAgBD,MAFRF,EAGhB,gBAAEI,EAAF,EAAEA,MAAF,MAAsB,CACrBC,UADD,EAASJ,OAC8B,iBAAjB,eACrBK,WAAY,OACZC,WAAYH,EAAMI,YAAYpF,OAAO,YAAa,CAC9CqF,SAAUL,EAAMI,YAAYC,SAASC,eA8D9BC,EA1DyB,SAAC/B,GACrC,IAAO1C,EAA6D0C,EAA7D1C,KAAMvD,EAAuDiG,EAAvDjG,SAAUiI,EAA6ChC,EAA7CgC,iBAAkBC,EAA2BjC,EAA3BiC,eAAgBhC,EAAWD,EAAXC,QAClDC,EAAyB5C,EAAzB4C,KAAmBlC,GAAMV,EAAnB6C,YAAmB7C,EAANU,IAC1B,EAA4BhE,oBAAS,GAArC,mBAAOqH,EAAP,KAAea,EAAf,KAYMC,EAAU,GAoBhB,OAnBKF,GACDE,EAAQC,KACJ,cAACnB,EAAA,EAAD,CAA4BT,QAAS,YAAaP,QATtC,WACZA,GACAA,EAAQjC,IAOR,uDAAa,gBAGhBgE,GACDG,EAAQC,KACJ,cAAC,EAAD,CAEIf,OAAQA,EACRpB,QArBS,WACjBiC,GAAWb,IAqBHgB,gBAAehB,EACfiB,aAAW,YALf,SAOI,cAAC,IAAD,KANK,kBAYb,eAAC,IAAD,WACI,cAACC,EAAA,EAAD,CACIC,OACI,cAACC,EAAA,EAAD,CAAOC,UAAU,MAAMC,QAAS,EAAhC,SACKR,IAIT3G,MAAO0E,EACP0C,UAAS,cAAS5E,GAClB6E,qBAAsB,CAACrC,QAAS,MAChCsC,yBAA0B,CAACtC,QAAS,aAExC,cAACuC,EAAA,EAAD,CAAUC,GAAI3B,EAAQ4B,QAAQ,OAAOC,eAAa,EAAlD,SACI,cAAC9C,EAAA,EAAD,UACKrG,UCzCNoJ,EA9BK,SAACnD,GACjB,IAAO1C,EAAwB0C,EAAxB1C,KAAM8F,EAAkBpD,EAAlBoD,KAAMC,EAAYrD,EAAZqD,SACnB,OAAK/F,EAGQ,SAAT8F,EAEI,cAACE,EAAA,EAAD,CAAMC,WAAS,EAACC,GAAI,EAAGb,QAAS,CAACc,GAAI,EAAGC,GAAI,GAAIC,QAAS,CAACF,GAAI,EAAGG,GAAI,EAAGF,GAAI,IAA5E,SACKpG,EAAKuG,KAAI,SAACC,EAAMC,GAAP,OACN,cAACT,EAAA,EAAD,CAAMQ,MAAI,EAACL,GAAI,EAAGG,GAAI,EAAGF,GAAI,EAA7B,SACI,cAAC,EAAD,CAAMpG,KAAMwG,EAAM7D,QAASoD,KADMU,QAOxC,SAATX,EAEI,cAACE,EAAA,EAAD,CAAMC,WAAS,EAACC,GAAI,EAAGb,QAAS,EAAhC,SACKrF,EAAKuG,KAAI,SAACC,EAAMC,GAAP,OACN,cAACT,EAAA,EAAD,CAAMQ,MAAI,EAACL,GAAI,GAAf,SACI,cAAC,EAAD,CAAgBnG,KAAMwG,EAAM9B,kBAAkB,EAAM/B,QAASoD,KADzCU,QAOjC,KAxBI,cAACxD,EAAA,EAAD,qB,iDCsCAyD,GArCI,SAAChE,GAChB,IAAOiE,EAAyEjE,EAAzEiE,MAAOb,EAAkEpD,EAAlEoD,KAAMzH,EAA4DqE,EAA5DrE,SAAUuI,EAAkDlE,EAAlDkE,iBAAkBC,EAAgCnE,EAAhCmE,eAAgBC,EAAgBpE,EAAhBoE,aAChE,OACI,eAACd,EAAA,EAAD,CAAMC,WAAS,EAACc,WAAY,SAAU1B,QAAS,EAA/C,UACI,cAACW,EAAA,EAAD,CAAMQ,MAAI,EAACQ,KAAM,EAAjB,SACI,cAAC/D,EAAA,EAAD,CAAYgE,QAASN,EAAOzD,QAAS,KAArC,SAA4CyD,MAEhD,cAACX,EAAA,EAAD,CAAMQ,MAAI,EAACS,OAAQL,EAAnB,SACI,cAACjD,EAAA,EAAD,CAAQR,UAAW+D,IAAM3I,GAAI,MAAOC,MAAO,CAACC,KAAMJ,GAAW6E,QAAS,YAAaH,GAAI,CACnF,UAAW,CACPM,MAAO,QACP8D,UAAW,SAHnB,0DAOJ,eAACnB,EAAA,EAAD,CAAMQ,MAAI,EAACS,OAAQJ,EAAnB,UACI,cAACO,EAAA,EAAD,CAASlJ,MAAO,iCAAhB,SACI,cAAC+F,EAAA,EAAD,CACIZ,MAAgB,SAATyC,EAAkB,UAAY,UACrCnD,QAAS,kBAAMmE,EAAa,SAFhC,SAII,cAAC,KAAD,QAGR,cAACM,EAAA,EAAD,CAASlJ,MAAO,uCAAhB,SACI,cAAC+F,EAAA,EAAD,CACIZ,MAAgB,SAATyC,EAAkB,UAAY,UACrCnD,QAAS,kBAAMmE,EAAa,SAFhC,SAII,cAAC,KAAD,eCETO,GA7BF,SAAC3E,GACV,IAAOhC,EAA4EgC,EAA5EhC,GAAIV,EAAwE0C,EAAxE1C,KAAM2G,EAAkEjE,EAAlEiE,MAAOW,EAA2D5E,EAA3D4E,YAAaV,EAA8ClE,EAA9CkE,iBAAkBC,EAA4BnE,EAA5BmE,eAAgBd,EAAYrD,EAAZqD,SACjE1H,EAAWC,cAEjB,EAAwB5B,mBAAQ,OAAY4K,QAAZ,IAAYA,IAAe,QAA3D,mBAAOxB,EAAP,KAAayB,EAAb,KAEAxK,qBAAU,WACN,IAAKuK,EAAa,CACd,IAAMxB,EAAO0B,aAAaC,QAAb,UAAwB/G,EAAxB,WAAmD,OAC5DoF,GACAyB,EAAQzB,MAGjB,IAOH,OACI,eAAC4B,EAAA,EAAD,WACI,cAAC,GAAD,CAAYf,MAAOA,EAAOb,KAAMA,EAAMgB,aAPrB,SAAChB,GACtByB,EAAQzB,GACR0B,aAAaG,QAAb,UAAwBjH,EAAxB,SAAmCoF,IAKuCzH,SAAUA,EACpEuI,iBAAkBA,EAAkBC,eAAgBA,IAChE,cAAC,EAAD,CAAa7G,KAAMA,EAAM8F,KAAMA,EAAMC,SAAUA,QCf5C6B,GArBG,WACd,IAAO/H,EAAgBd,IAAhBc,aACDgI,EAAWC,cAEjB,EAAwBpL,mBAAS,IAAjC,mBAAOsD,EAAP,KAAa+H,EAAb,KAEAhL,qBAAU,WACN8C,IAAerC,MAAK,SAAAuC,GAAG,OAAIgI,EAAQhI,QACpC,IAMH,OACI,cAAC2H,EAAA,EAAD,CAAKM,GAAI,EAAG9B,GAAI,EAAhB,SACI,cAAC,GAAD,CAAMxF,GAAI,YAAaV,KAAMA,EAAM4G,kBAAkB,EAAMD,MAAO,mDAAYZ,SANjE,SAACrF,GAClBmH,EAAS,aAAD,OAAcnH,EAAd,iBCIDuH,GAfD,WAAO,IAAD,IACT5K,EAASU,IAATV,MACDwK,EAAWC,cACXzJ,EAAWC,cAGXG,GAAe,OAARJ,QAAQ,IAARA,GAAA,UAAAA,EAAUG,aAAV,mBAAiBC,YAAjB,eAAuByJ,WAAY,IAMhD,OAAO,cAACvE,EAAA,EAAD,CAAQhB,QAJK,WAChBtF,GAAM,kBAAMwK,EAASpJ,EAAM,CAAE0J,SAAS,QAGnC,oB,8NCKLC,GAAc,IAEdC,GAAc,SAACnE,GAAD,MAA8B,CAC9CoE,MAAOF,GACP/D,WAAYH,EAAMI,YAAYpF,OAAO,QAAS,CAC1CqJ,OAAQrE,EAAMI,YAAYiE,OAAOC,MACjCjE,SAAUL,EAAMI,YAAYC,SAASkE,iBAEzCC,UAAW,WAGTC,GAAc,SAACzE,GAAD,qBAChBG,WAAYH,EAAMI,YAAYpF,OAAO,QAAS,CAC1CqJ,OAAQrE,EAAMI,YAAYiE,OAAOC,MACjCjE,SAAUL,EAAMI,YAAYC,SAASqE,gBAEzCF,UAAW,SACXJ,MAAM,QAAD,OAAUpE,EAAMmB,QAAQ,GAAxB,YACJnB,EAAM2E,YAAYC,KAAK,MAAQ,CAC5BR,MAAO,KAITS,GAAejF,YAAO,MAAPA,EAAc,gBAAEI,EAAF,EAAEA,MAAF,oBAC/B8E,QAAS,OACTjC,WAAY,SACZkC,eAAgB,WAChBC,QAAShF,EAAMmB,QAAQ,EAAG,IAEvBnB,EAAMiF,OAAOC,YAOdC,GAAevF,YAAOwF,KAAW,CACnCC,kBAAmB,SAACC,GAAD,MAAmB,SAATA,IADZ1F,EAEL,gBAAEI,EAAF,EAAEA,MAAOuF,EAAT,EAASA,KAAT,oBACZC,OAAQxF,EAAMwF,OAAOC,OAAS,EAC9BtF,WAAYH,EAAMI,YAAYpF,OAAO,CAAC,QAAS,UAAW,CACtDqJ,OAAQrE,EAAMI,YAAYiE,OAAOC,MACjCjE,SAAUL,EAAMI,YAAYC,SAASqE,iBAErCa,GAAQ,CACRrF,WAAYgE,GACZE,MAAM,eAAD,OAAiBF,GAAjB,OACL/D,WAAYH,EAAMI,YAAYpF,OAAO,CAAC,QAAS,UAAW,CACtDqJ,OAAQrE,EAAMI,YAAYiE,OAAOC,MACjCjE,SAAUL,EAAMI,YAAYC,SAASkE,sBAK3CmB,GAAS9F,YAAO+F,KAAW,CAACN,kBAAmB,SAACC,GAAD,MAAmB,SAATA,IAAhD1F,EACX,gBAAEI,EAAF,EAAEA,MAAOuF,EAAT,EAASA,KAAT,mBAAC,aACGnB,MAAOF,GACP0B,WAAY,EACZC,WAAY,SACZC,UAAW,cACPP,GAAI,2BACDpB,GAAYnE,IADX,IAEJ,qBAAsBmE,GAAYnE,OAEjCuF,GAAD,2BACGd,GAAYzE,IADf,IAEA,qBAAsByE,GAAYzE,SAK/B,SAAS+F,GAAOvH,GAC3B,IAAMwB,EAAQgG,eACP/J,EAAcgK,cAAdhK,WACD0H,EAAWC,cACVlK,EAAUG,IAAVH,OACP,EAAwBtB,IAAMI,UAAS,GAAvC,mBAAO+M,EAAP,KAAaW,EAAb,KACO3N,EAAYiG,EAAZjG,SAUD4N,EAAc,CAChB,CAACC,KAAM,QAASpM,MAAO,6CAAWqM,KAAM,cAAC,KAAD,KACxC,CAACD,KAAM,YAAapM,MAAO,YAAaqM,KAAM,cAAC,KAAD,MAclD,OACI,eAAC7C,EAAA,EAAD,CAAK3E,GAAI,CAACiG,QAAS,QAAnB,UACI,cAACwB,GAAA,EAAD,IACA,cAACnB,GAAD,CAAcoB,SAAS,QAAQhB,KAAMA,EAArC,SACI,eAACiB,GAAA,EAAD,WACKvK,GAAc,cAAC8D,EAAA,EAAD,CACXZ,MAAM,UACN2B,aAAW,cACXrC,QAhCK,WACrByH,GAAQ,IAgCQO,KAAK,QACL5H,GAAE,aACE6H,YAAa,QACTnB,GAAQ,CAACT,QAAS,SAPf,SAUX,cAAC,KAAD,MAEJ,cAACtB,EAAA,EAAD,CAAK3E,GAAI,CAAC8H,SAAU,GAApB,SACI,cAAC,KAAD,CAAS1H,UAAW+D,IAAM7D,MAAO,UAAWyH,UAAU,OAAO5H,QAAQ,KAAK6H,QAAM,EAACxM,GAAI,IAAKwE,GAAI,CAC1F,UAAW,CACPM,MAAO,QACP8D,UAAW,SAHnB,0CASJ,cAACxD,EAAA,EAAD,CAAQN,MAAO,UAAWV,QAAS,kBAAM/E,GAAO,kBAAMiK,EAAS,SAA/D,iDAGP1H,GAAc,eAAC,GAAD,CAAQ+C,QAAQ,YAAYuG,KAAMA,EAAlC,UACX,cAACV,GAAD,UACI,cAAC9E,EAAA,EAAD,CAAYtB,QApDF,WACtByH,GAAQ,IAmDI,SACyB,QAApBlG,EAAMkB,UAAsB,cAAC,KAAD,IAAsB,cAAC,KAAD,QAG3D,cAAC4F,GAAA,EAAD,IACA,cAAC,KAAD,UA/CDX,EAAY9D,KAAI,SAACC,EAAMC,GAAP,OACnB,eAACwE,GAAA,EAAD,CAAsB9H,UAAW+D,IAAM3I,GAAE,mBAAc4B,EAAd,YAA4BqG,EAAK8D,MAA1E,UACI,cAACY,GAAA,EAAD,UACK1E,EAAK+D,OAEV,cAACY,GAAA,EAAD,CAAcC,QAAS5E,EAAKtI,UAJjBuI,WAkDf,eAACiB,EAAA,EAAD,CAAKvE,UAAU,OAAOJ,GAAI,CAAC8H,SAAU,EAAGvC,MAAO,QAA/C,UACI,cAACS,GAAD,IACCtM,QCrKjB,IAUe4O,GAVA,WACX,OACI,8BACI,cAACpB,GAAD,UACI,cAAC,IAAD,SC8BDqB,GA/BA,WACX,IAAOpL,EAAanB,IAAbmB,UACD2H,EAAWC,cACV3H,EAAcgK,cAAdhK,WAEP,EAAwBzD,mBAAS,IAAjC,mBAAOsD,EAAP,KAAa+H,EAAb,KAEAhL,qBAAU,WACN,GAAIoD,EAAY,CACZ,IAAMoL,EAAWC,SAASrL,GAC1BD,EAAUqL,GAAU/N,MAAK,SAAAuC,GAAG,OAAIgI,EAAQhI,SAE7C,IAMH,OACI,cAAC2H,EAAA,EAAD,CAAKM,GAAI,EAAG9B,GAAI,EAAhB,SACI,cAAC,GAAD,CACIxF,GAAI,SACJV,KAAMA,EACN2G,MAAO,6CACPZ,SAVS,SAACrF,GAClBmH,EAAS,GAAD,OAAInH,U,kBCXd+K,GAAO3H,YAAO4D,IAAP5D,EAAuB,gBAAEI,EAAF,EAAEA,MAAOwH,EAAT,EAASA,KAAT,MAAoB,CACpDC,SAAU,OACVrD,MAAO,QACPsD,UAAW,SACXvI,MAAgB,UAATqI,EAAmBxH,EAAM2H,QAAQC,QAAQC,aAAe7H,EAAM2H,QAAQT,QAAQW,aACrFC,gBAA0B,UAATN,EAAmBxH,EAAM2H,QAAQC,QAAQG,KAAO/H,EAAM2H,QAAQT,QAAQa,KACvF/C,QAAShF,EAAMmB,QAAQ,GACvB6G,aAAchI,EAAMiI,MAAMD,iBAwBfE,GApBE,SAAC1J,GACd,IAAO1C,EAAc0C,EAAd1C,KAAM0L,EAAQhJ,EAARgJ,KAEb,OACI,eAACD,GAAD,CAAMC,KAAMA,EAAZ,UACI,cAACzI,EAAA,EAAD,UAAajD,EAAK2G,QAClB,cAAC,KAAD,CACI+E,KAAK,SACLjB,SAAU4B,KAASC,IACnBC,MAAO,CAACL,aAAc,OAAQ5D,MAAO,GAAI9E,OAAQ,MAErD,cAAC,KAAD,CACIkI,KAAK,SACLjB,SAAU4B,KAASG,OACnBD,MAAO,CAACL,aAAc,OAAQ5D,MAAO,GAAI9E,OAAQ,UC/B3DiI,GAAO3H,YAAOsI,GAAPtI,EAAiB,gBAAEI,EAAF,EAAEA,MAAF,MAAc,CAExCb,MAAOa,EAAM2H,QAAQT,QAAQW,aAC7BC,gBAAiB9H,EAAM2H,QAAQT,QAAQa,SAK5BQ,GAFS,SAAC,GAAD,IAAEzM,EAAF,EAAEA,KAAF,OAAsB,cAAC,GAAD,CAAMA,KAAMA,EAAM0L,KAAM,WCLhED,GAAO3H,YAAOsI,GAAPtI,EAAiB,gBAAEI,EAAF,EAAEA,MAAF,MAAc,CAExCb,MAAOa,EAAM2H,QAAQC,QAAQC,aAC7BC,gBAAiB9H,EAAM2H,QAAQC,QAAQG,SAK5BS,GAFS,SAAC,GAAD,IAAG1M,EAAH,EAAGA,KAAH,OAAwB,cAAC,GAAD,CAAMA,KAAMA,EAAM0L,KAAM,W,6DC4OzDiB,GA5OI,WACf,IAAO3N,EAASD,IAATC,MAiED4N,EAAU,SAAClM,EAAYmM,GACzB,OAAOA,EAASC,QAAO,SAACC,GAAD,OAAevB,SAASuB,EAAKrM,MAAQA,KAAIsM,OAQ9DC,EAAS,SAACF,GACZ,MAAkB,UAAdA,EAAKrB,KACE9M,EAEO,UAAdmO,EAAKrB,KACE7M,OADX,GAcEqO,EAAiB,uCAAG,+CAAAjQ,EAAA,yDAAQ8P,EAAR,EAAQA,KAAMI,EAAd,EAAcA,cAAezB,EAA7B,EAA6BA,KAAM0B,EAAnC,EAAmCA,SAEnD3L,EAAMwL,EAAOF,IAFG,wBAKdM,OAAcC,EALA,SAMGtO,EAAMc,IAAN,UAAa2B,EAAMsL,EAAKrM,GAAxB,MANH,mBAMXV,EANW,EAMXA,KAEM,OAAT0L,IACA2B,EAAcrN,EAAKuN,WAEV,QAAT7B,IACA2B,EAAcrN,EAAKwN,aAGnBH,EAfc,oBAgBVI,EAAM,GAEK,WAAXL,IACAK,EAAG,CAAIN,GAAJ,oBAAsBE,KAEd,WAAXD,IACAK,EAAMJ,EAAYP,QAAO,SAACY,GAAD,OAAwBA,IAAeP,MAGhEnN,OAAOsN,EACE,OAAT5B,IACA1L,EAAO,CAACuN,UAAWE,IAEV,QAAT/B,IACA1L,EAAO,CAACwN,WAAYC,KAEpBzN,EAhCU,wBAiCVtC,QAAQC,IAAIqC,GAjCF,UAkCJhB,EAAM4B,MAAN,UAAea,EAAMsL,EAAKrM,GAA1B,KAAiCV,GAlC7B,4CAAH,sDAsDjB2N,EAAoB,SAACC,EAAgBC,EAAgBhB,GACvD,IAAMiB,EAAalB,EAAQgB,EAAQf,GAC7BkB,EAAanB,EAAQiB,EAAQhB,GAE/BiB,GACAZ,EAAkB,CAACH,KAAMe,EAAYX,cAAeU,EAAQnC,KAAM,KAAM0B,OAAQ,WAGhFW,GACAb,EAAkB,CAACH,KAAMgB,EAAYZ,cAAeS,EAAQlC,KAAM,MAAO0B,OAAQ,YAkDnFY,EAAU,uCAAG,WAAOjB,EAA2ExM,GAAlF,mBAAAtD,EAAA,yDACT+C,EAAO,CACT4C,KAAMmK,EAAKpG,MACXsH,MAAOC,KAAKC,MAAMpB,EAAKtC,SAAS2D,GAChCC,MAAOH,KAAKC,MAAMpB,EAAKtC,SAAS6D,GAChCC,MAAOhO,EACPiN,WAAY,MAGV/L,EAAMwL,EAAOF,IATJ,gCAWS/N,EAAMqB,KAAKoB,EAAKzB,GAAMxC,MAAK,SAAAuC,GAAG,OAAIA,EAAIC,QAAMwO,OAAM,SAAAC,GAAG,OAAI/Q,QAAQC,IAAI8Q,MAX9E,cAWLpN,EAXK,yBAYJA,EAAMX,GAAGgO,YAZL,qCAcRpB,GAdQ,2CAAH,wDAgBhB,MAAO,CACHqB,cAtNkB,SAACC,GAAgC,IAAnBC,EAAkB,uDAAP,GACrCC,EAAkBC,aACpBH,GAGEI,EAAaC,aACfH,EACA,GACAF,EACAC,GAGEK,EAAgB,SAACF,EAAiBH,GAyBpC,OAxBoB,SAAdM,EAAeC,GAA8C,IAAnCC,EAAkC,uDAArB,GAAIC,EAAiB,uDAAT,CAAC,IAsBtD,OArBAC,OAAOC,KAAKJ,GAAMK,SAAQ,SAAAC,GACtB,GAAyB,kBAAdN,EAAKM,GAAmB,CAC/B,IAAIC,EAAWL,EAAM/I,KAAI,SAAApI,GAAI,gBAAOA,EAAP,YAAeuR,MAExCN,EAAKM,GAAKE,6BAAmD,KAApBR,EAAKM,GAAKG,MACnDR,EAAIvK,KAAKsK,EAAKM,GAAKG,OAEnBV,EAAYC,EAAKM,GAAML,EAAKM,OAEjB,UAARD,GAAiC,KAAdN,EAAKM,IAC/BJ,EAAMG,SAAQ,SAAAtR,GACVA,EAAOA,EAAKgK,QAAQ,MAAO,IAC3B,IAAM2H,EAAYC,KAAKlB,EAAU1Q,IAGR,kBAAd2R,GAA0BE,KAASF,KAC1CT,EAAIvK,KAAK3G,SAKlBkR,EAEJF,CAAYH,IAGvB,OAAOE,EAAcF,EAAYH,IA+KjCoB,QA5KY,SAACvP,GACb,GAAIA,EACA,OAAO8K,SAAS9K,GAEhB,MAAM,IAAIwP,MAAM,UAyKpBtD,UACAK,SACAC,oBACAiD,eA/FmB,SAACvC,EAAgBC,EAAgBhB,GACpD,IAAMiB,EAAalB,EAAQgB,EAAQf,GAC7BkB,EAAanB,EAAQiB,EAAQhB,GAE/BiB,GACAZ,EAAkB,CAACH,KAAMe,EAAYX,cAAeU,EAAQnC,KAAM,KAAM0B,OAAQ,WAGhFW,GACAb,EAAkB,CAACH,KAAMgB,EAAYZ,cAAeS,EAAQlC,KAAM,MAAO0B,OAAQ,YAuFrFO,oBACAyC,eAtEmB,SAACC,EAAiCxD,GACrD,IAAMyD,EAAkBD,EAAiB9J,KAAI,SAACgK,GAC1C,OAAOA,EAAE7P,MAGb,OAAOmM,EAASC,QAAO,SAAC0D,GACpB,GAAIF,EAAgBG,SAASD,EAAQ9P,IAAK,CACtC,GAAIgQ,aAAOF,GAAU,CACjB,IAAI5C,EAASpC,SAASgF,EAAQ5C,QAC1BC,EAASrC,SAASgF,EAAQ3C,QAE9BF,EAAkBC,EAAQC,EAAQhB,OAC/B,CACH,IAAMpL,EAAMwL,EAAOuD,GACf/O,GACAzC,EAAM2R,OAAOlP,EAAM+O,EAAQ9P,GAAK,KAGxC,OAAO,EAEP,OAAO,MAmDfkQ,WA1Ce,SAAC7D,GAChB,IAEM/M,EAAO,CAACiO,MAFAC,KAAKC,MAAMpB,EAAKtC,SAAS2D,GAElBC,MADPH,KAAKC,MAAMpB,EAAKtC,SAAS6D,IAEjC7M,EAAMwL,EAAOF,GACnBrP,QAAQC,IAAIqC,GACRyB,GACAzC,EAAM4B,MAAMa,EAAMsL,EAAKrM,GAAK,IAAKV,GAAMxC,MAAK,SAAAuC,GAAG,OAAIrC,QAAQC,IAAIoC,EAAIC,UAoCvEgO,e,UC/OFvC,GAAO3H,YAAO4D,IAAP5D,EAAyC,gBAAEI,EAAF,EAAEA,MAAOwH,EAAT,EAASA,KAAT,MAAoB,CACtEC,SAAU,OACVrD,MAAO,QACPsD,UAAW,SACXvI,MAAgB,UAATqI,EAAmBxH,EAAM2H,QAAQC,QAAQC,aAAe7H,EAAM2H,QAAQT,QAAQW,aACrFC,gBAA0B,UAATN,EAAmBxH,EAAM2H,QAAQC,QAAQG,KAAO/H,EAAM2H,QAAQT,QAAQa,KACvF/C,QAAShF,EAAMmB,QAAQ,GACvB6G,aAAchI,EAAMiI,MAAMD,aAC1B2E,OAAQ,OACRC,OAAQ,MAiDGC,GA9CC,WACZ,MAAkCrU,oBAAS,GAA3C,mBAAOsU,EAAP,KAAkBC,EAAlB,KACA,EAA0BvU,mBAAS,IAAnC,mBAAOiK,EAAP,KAAcuK,EAAd,KAEAnU,qBAAU,WAEFkU,KADAtK,GAAmB,KAAVA,MAKd,CAACA,IAEJ,IAAMwK,EAAc,SAACC,EAAuCC,EAAmBC,GAC3E,IAAItR,EAAOuR,KAAKC,UAAU,CAAC7K,QAAO+E,KAAM4F,IACxCF,EAAMK,aAAa1J,QAAQ,wBAAyB/H,GACpDoR,EAAMK,aAAaC,cAAgB,QAGjCC,EAAY,WACdT,EAAS,KAGb,OACI,eAAClL,EAAA,EAAD,CAAMQ,MAAI,EAACP,WAAS,EAACgD,eAAgB,SAAUjB,GAAI,EAAnD,UACI,eAAChC,EAAA,EAAD,CAAMC,WAAS,EAACO,MAAI,EAACoL,GAAI,EAAG3I,eAAgB,SAA5C,UACI,cAAC4I,GAAA,EAAD,CAAWlL,MAAO,QAAS/C,KAAK,QAAQ1G,MAAOyJ,EAAOmL,SAAU,SAACC,GAAD,OAAOb,EAASa,EAAEnE,OAAO1Q,UACzF,cAAC+F,EAAA,EAAD,CAAYiD,GAAI,EAAGhD,QAAS,UAAWG,MAAO,MAAO2O,MAAO,SAA5D,UACMhB,GAAa,oCAGvB,eAAChL,EAAA,EAAD,CAAMQ,MAAI,EAAV,UACI,cAAC,GAAD,CAAMkF,KAAM,QAASiG,UAAWA,EAC1BR,YAAa,SAACC,GAAD,OAAWD,EAAYC,EAAOzK,EAAoB,UAC/DqK,UAAWA,EAFjB,4BAKA,cAAC,GAAD,CAAMtF,KAAM,QAASiG,UAAWA,EAC1BR,YAAa,SAACC,GAAD,OAAWD,EAAYC,EAAOzK,EAAoB,UAC/DqK,UAAWA,EAFjB,qCCiIDiB,GAvKD,WACV,IAAMC,EAAmBC,iBAAO,MAChC,EAAuCpT,IAAhCuB,EAAP,EAAOA,cAAeE,EAAtB,EAAsBA,cACtB,EAA0EmM,KAAnEsD,EAAP,EAAOA,QAASE,EAAhB,EAAgBA,eAAgBnC,EAAhC,EAAgCA,WAAYoC,EAA5C,EAA4CA,eAAgBQ,EAA5D,EAA4DA,WAC5D,EAA8BzG,cAAvBhK,EAAP,EAAOA,WAAYI,EAAnB,EAAmBA,QACnB,EAAkD7D,mBAAS,MAA3D,mBAAO0V,EAAP,KAA0BC,EAA1B,KACA,EAAgC3V,mBAAwB,IAAxD,mBAAOmQ,EAAP,KAAiByF,EAAjB,KACMzK,EAAWC,cAEXyK,EAA2BtC,EAAQ9P,GACnCqS,EAAwBvC,EAAQ1P,GAChCkS,EAAmB,CAAClG,MAAO,CAACmG,YAAa,GAAIC,cAAe,SAGlE5V,qBAAU,WACN4C,QAAQiT,IAAI,CAACtS,EAAciS,EAAkBC,GAAgBhS,EAAc+R,EAAkBC,KACxFhV,MAAK,SAACyC,GACH,IAAM4S,EAAa5S,EAAQ,GACrB6S,EAAa7S,EAAQ,GAG3B4S,EAAWpD,SAAQ,SAAC1C,GAAD,OAAeA,EAAKrB,KAAO,WAC9CoH,EAAWrD,SAAQ,SAAC1C,GAAD,OAAeA,EAAKrB,KAAO,WAG9C,IAAMqH,EAAQ,uBAAOF,GAAP,aAAsBC,IAC9BE,EAAuBD,EAASxM,KAAI,SAACwG,GAAD,MAClC,CACIrM,GAAIqM,EAAKrM,GAAGgO,WACZjE,SAAU,CAAC2D,EAAG6E,WAAWlG,EAAKkB,OAAQK,EAAG2E,WAAWlG,EAAKsB,QACzDrO,KAAM,CAAC2G,MAAOoG,EAAKnK,MACnB8I,KAAMqB,EAAKrB,SAKvB,OADA4G,EAAYU,GACLD,KAEVvV,MAAK,SAAAuV,GAEFA,EAAStD,SAAQ,SAAApO,GACTA,EAAMkM,UAAU2F,OAAS,GACzB7R,EAAMkM,UAAUkC,SAAQ,SAAC0D,GACrB,IAAMxI,EAAI,aACNkD,OAAQsF,EAASzE,WACjBd,OAAQvM,EAAMX,GAAGgO,WACjBhO,GAAG,GAAD,OAAKyS,EAAL,YAAiB9R,EAAMX,KACtB+R,GAEPH,GAAY,SAACc,GAAD,OAASC,aAAQ1I,EAAMyI,iBAKxD,CAACZ,IAKJ,IAAMc,EAAS,uCAAG,WAAOC,GAAP,mBAAAtW,EAAA,sDACRuW,EADQ,2BACaD,GAAWd,GAChC7E,EAASpC,SAASgI,EAAU5F,QAC5BC,EAASrC,SAASgI,EAAU3F,QAElCyE,GAAY,SAACc,GAAD,OAAwBC,aAAQG,EAAWJ,MACvDjD,EAAevC,EAAQC,EAAQhB,GANjB,2CAAH,sDAqBT4G,EAAM,uCAAG,WAAOrC,GAAP,6BAAAnU,EAAA,yDACXmU,EAAMsC,iBAGAC,EAAkBzB,EAAiB0B,QAAQC,wBAE3CC,EAAW1C,EAAMK,aAAasC,QAAQ,yBAEtCtJ,EAAW2H,EAAkB4B,QAAQ,CACvC5F,EAAGgD,EAAM6C,QAAUN,EAAgBO,KACnC5F,EAAG8C,EAAM+C,QAAUR,EAAgBS,MAGjCC,EAAa9C,KAAK+C,MAAMR,GACxBnN,EAAQ0N,EAAW1N,MACnB+E,EAAO2I,EAAW3I,KAEV,KAAV/E,EAjBO,yCAkBA,GAlBA,wBAqBMqH,EAAW,CAACtC,OAAMjB,WAAU9D,SAAQ6L,GArB1C,QAqBL9R,EArBK,OAuBP6T,EAAU,CACV7T,KACAgL,OACAjB,WACAzK,KAAM,CAAC2G,UAGX2L,GAAY,SAACkC,GAAD,6BAAYA,GAAZ,CAAgBD,OA9BjB,4CAAH,sDAqCNE,EAAuB,SAACrD,EAAYZ,GACtC9S,QAAQC,IAAI6S,GACRA,EAAQ9P,KACa,UAAjB8P,EAAQ9E,MACR7D,EAAS,eAAD,OAAgB2I,EAAQ9P,KAEf,UAAjB8P,EAAQ9E,MACR7D,EAAS,eAAD,OAAgB2I,EAAQ9P,OAMtCgU,EAAY,CACdC,MAAOC,GACPC,MAAOC,IAIX,OACI,eAAC9O,EAAA,EAAD,CAAMC,WAAS,EAAf,UACI,cAACD,EAAA,EAAD,CAAMQ,MAAI,EAACJ,GAAI,GAAIsD,OAAQ,EAA3B,SACI,cAAC,KAAD,CACIqL,IAAK7C,EACLwC,UAAWA,EACX7H,SAAUA,EACVyG,UAAWA,EACX0B,iBA5ES,SAAC3E,GACtBiC,GAAY,SAACc,GAAD,OAAShD,EAAeC,EAAkB+C,OA4E1C6B,kBAAmBR,EACnBS,kBAAmBT,EACnBU,OA3ED,SAACC,GAAD,OACX/C,EAAqB+C,IA2ET3B,OAAQA,EACR4B,WA1EG,SAACjE,GAChBA,EAAMsC,iBACNtC,EAAMK,aAAa6D,WAAa,QAyEpBC,eArCO,SAACnE,EAAYrE,GAChC6D,EAAW7D,IAqCCyI,kBAAkB,EAClBjJ,MAAO,CACHjE,MAAO,OACP9E,OAAQ,QAfhB,SAkBI,cAAC,KAAD,QAGR,cAACwC,EAAA,EAAD,CAAMQ,MAAI,EAACJ,GAAI,EAAGsD,OAAQ,EAAGlG,OAAQ,IAAKT,GAAI,CAAC0S,WAAY,SAA3D,SACI,cAAC,GAAD,U,qBCnKVC,GAAe5R,YAAOG,IAAPH,EAAmB,gBAAEI,EAAF,EAAEA,MAAF,MAAc,CAClDb,MAAOa,EAAM2H,QAAQT,QAAQW,aAC7BC,gBAAiB9H,EAAM2H,QAAQT,QAAQa,KACvC,UAAW,CACPD,gBAAiB9H,EAAM2H,QAAQT,QAAQuK,UAyChCC,GArCE,SAAClT,GACd,IAAOmT,EAAoCnT,EAApCmT,KAAMC,EAA8BpT,EAA9BoT,SAAUhE,EAAoBpP,EAApBoP,SAAUiE,EAAUrT,EAAVqT,OAoBjC,OACI,eAACrO,EAAA,EAAD,CAAKsB,QAAS,OAAQC,eAAgB,WAAYlG,GAAI,CAAC0H,SAAU,SAAU2J,IAAK,IAAK4B,EAAG,EAAGtM,OAAQ,EAAnG,UACI,cAAChC,EAAA,EAAD,CAAKV,KAAM,EAAX,SACI,cAACI,EAAA,EAAD,CAASlJ,MAAO,iCAAhB,SACI,cAACwX,GAAD,CAAc/S,QAASoT,EAAvB,SACK,cAAC,KAAD,CAAepK,SAAU,gBAItC,cAACxG,EAAA,EAAD,CAAOC,UAAU,MAAMC,QAAS,EAAhC,SA1BUkK,OAAOC,KAAKsG,GACbvP,KAAI,SAACmF,GACd,IAAMuK,EAAOJ,IAASnK,EAAO,UAAY,UACnCxN,EAAQ4X,EAASpK,GAAMxN,MACvBqM,EAAOuL,EAASpK,GAAMnB,KAC5B,OACI,cAAC7C,EAAA,EAAD,UACI,cAACN,EAAA,EAAD,CAASlJ,MAAOA,EAAhB,SACI,cAAC+F,EAAA,EAAD,CAAYZ,MAAO4S,EAAMtT,QAAS,kBAAMmP,EAASpG,IAAjD,SACKnB,OAHHmB,YCGXwK,GA9BK,SAAC,GAYmB,EAXfxV,GAWe,EAVfkO,OAUe,EATf9N,QASe,EARf5D,MAQe,EAPfiZ,SAOe,EANfC,SAMe,EALfC,SAKe,EAJf1P,MAIe,EAHfmL,SAGe,EAFfwE,OAEe,EADfC,QAcrB,OACI,8H,SCuCOC,GA/DI,SAAC,GAgBA,IAflB9V,EAeiB,EAfjBA,GACA+V,EAciB,EAdjBA,YACAN,EAaiB,EAbjBA,SACAE,EAYiB,EAZjBA,SACAD,EAWiB,EAXjBA,SACAzP,EAUiB,EAVjBA,MACAzJ,EASiB,EATjBA,MACA4U,EAQiB,EARjBA,SACAwE,EAOiB,EAPjBA,OACAC,EAMiB,EANjBA,QACAG,EAKiB,EALjBA,UACA5V,EAIiB,EAJjBA,QACA8N,EAGiB,EAHjBA,OAGiB,IAFjB+H,iBAEiB,MAFL,GAEK,EAUXC,EAA8B,WAAjBhI,EAAOlD,KAAsB,OAA9B,UAA0CkD,EAAOlD,MAEnE,OACE,eAAC,KAAKmL,MAAN,CAAYC,UAAU,OAAtB,UACE,eAAC,KAAKC,MAAN,CAAYD,UAAWH,EAAUzD,OAAS,EAAI,cAAgB,GAA9D,UACGvM,GAASiI,EAAO1Q,OACfyI,GAASiI,EAAO1Q,QAAUiY,EAAW,IAAM,QAE/C,cAAC,KAAKa,QAAN,CACEtW,GAAIA,EACJ+V,YAAaA,EACbQ,UAAWP,EACXP,SAAUA,EACVC,SAAUA,EACVc,SAAUb,EACVS,UAAWH,EAAUzD,OAAS,EAAI,aAAe,GACjDiE,KAAMvI,EAAOwI,SAAP,mBAA8B1W,QAAO4M,EAC3C5B,KAAMkL,EACN1Z,MAAOA,GAAmB,IAAVA,EAAcA,EAAQ,GACtC4U,SA5BY,SAAC,GAAD,IACN5U,EADM,EAChB0Q,OAAU1Q,MADM,OAGhB4U,EAAmB,KAAV5U,EAAe4D,EAAQuW,WAAana,IA0BzCoZ,OAzBU,SAAC,GAAD,IAAapZ,EAAb,EAAG0Q,OAAU1Q,MAAb,OACdoZ,EAAO5V,EAAIxD,IAyBPqZ,QAxBW,SAAC,GAAD,IACLrZ,EADK,EACf0Q,OAAU1Q,MADK,OAEyBqZ,EAAQ7V,EAAIxD,MAyBjD0R,EAAOwI,SACN,0BAAU1W,GAAE,mBAAcA,GAA1B,SACIkO,EAAOwI,SACNE,OAAO1I,EAAO2I,QAAW,CAAC3I,EAAO2I,SAAwB,IACzDhR,KAAI,SAACiR,GACJ,OAAO,wBAAsBta,MAAOsa,GAAhBA,QAGxB,SC5CKC,GAdU,SAAC,GAAmE,IAAlEtB,EAAiE,EAAjEA,SAAUxP,EAAuD,EAAvDA,MAAOzJ,EAAgD,EAAhDA,MAAO0R,EAAyC,EAAzCA,OAAyC,IAAjC+H,iBAAiC,MAArB,GAAqB,EACxF,OACIzZ,EAAQ,eAAC,KAAK2Z,MAAN,CAAYC,UAAU,OAAtB,UACA,eAAC,KAAKC,MAAN,CAAYD,UAAWH,EAAUzD,OAAS,EAAI,cAAgB,GAA9D,UACKvM,GAASiI,EAAO1Q,OACfyI,GAASiI,EAAO1Q,QAAUiY,EAAW,IAAM,QAEjD,uBACA,mBAAGlU,KAAM/E,EAAT,SAAiBA,OAEnB,MCoDCwa,GA9DK,SAAC,GAYD,IAXlBhX,EAWiB,EAXjBA,GACAkO,EAUiB,EAVjBA,OACA9N,EASiB,EATjBA,QACA5D,EAQiB,EARjBA,MACAiZ,EAOiB,EAPjBA,SACAC,EAMiB,EANjBA,SACAC,EAKiB,EALjBA,SACA1P,EAIiB,EAJjBA,MACAmL,EAGiB,EAHjBA,SACAwE,EAEiB,EAFjBA,OACAC,EACiB,EADjBA,QAEQoB,EAA8B7W,EAA9B6W,YAAaC,EAAiB9W,EAAjB8W,aAEfC,EAAY,SAAC,GAAD,IACN3a,EADM,EAChB0Q,OAAU1Q,MADM,OAGhB4U,EAAwB,WAAflD,EAAOlD,KAA8B,UAAVxO,EAAoBA,IACpD4a,EAAU,SAAC,GAAD,IAAa5a,EAAb,EAAG0Q,OAAU1Q,MAAb,OACdoZ,EAAO5V,EAAIxD,IACP6a,EAAW,SAAC,GAAD,IACL7a,EADK,EACf0Q,OAAU1Q,MADK,OAEyBqZ,EAAQ7V,EAAIxD,IAEhD8a,EAASC,QAAQnX,GAAWA,EAAQkX,QAE1C,OACE,eAAC,KAAKnB,MAAN,CAAYC,UAAU,OAAtB,UACE,eAAC,KAAKC,MAAN,CAAYD,UAAU,UAAtB,UACGnQ,GAASiI,EAAO1Q,OACfyI,GAASiI,EAAO1Q,QAAUiY,EAAW,IAAM,QAE7CwB,EAAoBpR,KAAI,SAAC2R,EAAaC,GACtC,IAAMC,EACJC,MAAMC,QAAQV,KAC0B,IAAxCA,EAAaW,QAAQL,EAAOhb,OACxBsb,EAAUN,EAAOhb,OAASA,EAmBhC,OAhBE,cAAC,KAAKub,MAAN,CACET,OAAQA,EACRrR,MAAOuR,EAAOvR,MACdjG,GAAE,UAAKA,EAAL,YAAWwX,EAAOvR,OAEpB/D,KAAMlC,EACNgL,KAAK,QACL0K,SAAUA,GAAYgC,GAAgB/B,EACtCmC,QAASA,EACTrC,SAAUA,EACVjZ,MAAOgb,EAAOhb,MACd4U,SAAU+F,EACVvB,OAAQwB,EACRvB,QAASwB,GATJI,UCbFO,GA9BC,SAAC,GAA+E,IAA9EvC,EAA6E,EAA7EA,SAAUxP,EAAmE,EAAnEA,MAAOkI,EAA4D,EAA5DA,SAAUD,EAAkD,EAAlDA,OAAQkD,EAA0C,EAA1CA,SAA0C,IAAhC6E,iBAAgC,MAApB,GAAoB,EAErFkB,EAAY,SAAC3S,GACf,IAAMyT,EAASN,MAAMC,QAAQzJ,GAAYA,EAAW,GACpD,GAAe,QAAX3J,EAAkB,CAClB,IAAM0T,EAAQ,uBAAOD,GAAP,EAAe,IAAIE,MAAOC,gBACxChH,EAAS8G,QACN,GAAe,WAAX1T,EAAqB,CAC5B,IAAM0T,EAAQ,aAAOD,GACrBC,EAAS5L,MACT8E,EAAS8G,KAIjB,OACI,eAAC,KAAK/B,MAAN,CAAYC,UAAU,OAAtB,UACI,eAAC,KAAKC,MAAN,CAAYD,UAAWH,EAAUzD,OAAS,EAAI,cAAgB,GAA9D,UACKvM,GAASiI,EAAO1Q,OACfyI,GAASiI,EAAO1Q,QAAUiY,EAAW,IAAM,QAEjD,uBACA,eAACzO,EAAA,EAAD,CAAKsB,QAAS,OAAQxF,OAAQ,GAA9B,UACI,cAACP,EAAA,EAAD,CAAYC,QAAS,KAAM6V,GAAI,EAA/B,SAAmCV,MAAMC,QAAQzJ,GAAYA,EAASqE,OAAS,IAC/E,cAACvP,EAAA,EAAD,CAAQqV,WAAS,EAAC9V,QAAS,YAAaP,QAAS,kBAAMkV,EAAU,QAAjE,eACA,cAAClU,EAAA,EAAD,CAAQT,QAAS,YAAaG,MAAO,UAAWV,QAAS,kBAAMkV,EAAU,WAAzE,sB,UC8BDoB,I,OA/CF,SAACvW,GACV,IAAOkM,EAA8DlM,EAA9DkM,OAAQsK,EAAsDxW,EAAtDwW,SAAUrK,EAA4CnM,EAA5CmM,SAAUsK,EAAkCzW,EAAlCyW,WAAYrH,EAAsBpP,EAAtBoP,SAAUsH,EAAY1W,EAAZ0W,SAEnDC,EAAU,CACZC,WAAYpD,GACZqD,aAAcC,GACd9B,YAAaA,GACb+B,WAAYC,GACZC,MAAOzD,IAGL0D,EAAS,CACXC,QAASC,IAmBb,OACI,cAAC,KAAD,CACIlL,OAAQA,EACRsK,SAAUA,EACVrK,SAAUA,EACVwK,QAASA,EACTO,OAAQA,EACR9H,SAvBa,SAACC,GAClB,IAAID,EAGA,OAAO,EAFPA,EAASC,EAAElD,WAsBXuK,SAhBa,SAACrH,GAClB,IAAIqH,EAGA,OAAO,EAFPA,EAASrH,EAAElD,WAOf,SASKsK,EAAa,IACV,wBAAQzN,KAAK,SAASoL,UAAU,kBAAhC,wE,mBCmBDiD,GAvBG,CACdJ,MAAO,CACHK,YAAa,QACbC,QAAS,CACL,CACIC,MAAO,CAAC,UACRC,OAAQ,UAGhBC,gBAAiB,CAAC,UAAW,UAAW,YACxCC,kBAAmB,GACnBC,gBAAiB,CACb,YAAa,QACb,aAAc,CAACC,SAAS,EAAOhD,QAAS,KAE5C7L,KAAM,SACN8O,SAtDiB,SAAC,GAAD,YACIC,EADJ,EACIA,WACA3I,EAFJ,EAEIA,SAFJ,OAIrB,gCACI,sBAAKvF,MAAO,CAACvD,QAAS,OAAQC,eAAgB,SAAUlC,WAAY,WAAYmC,QAAS,UAAzF,UACI,oBAAIqD,MAAO,CAACrD,QAAS,SAArB,4BACA,uBACIsP,QAAO,UAAEiC,EAAW,qBAAb,aAAE,EAA0BF,QACnC7O,KAAK,WACLoG,SAAU,SAAC4I,GAAD,OACN5I,EAAS,2BAAI2I,GAAL,IAAiB,aAAa,2BAAKA,EAAW,eAA7B,IAA4CF,QAASG,EAAG9M,OAAO4K,cAE5F1B,UAAU,cAEd,oBAAIvK,MAAO,CAACrD,QAAS,SAArB,uBACA,uBACIsP,QAAO,UAAEiC,EAAW,qBAAb,aAAE,EAA0BpE,SACnC3K,KAAK,WACLoG,SAAU,SAAC4I,GAAD,OACN5I,EAAS,2BAAI2I,GAAL,IAAiB,aAAa,2BAAKA,EAAW,eAA7B,IAA4CpE,SAAUqE,EAAG9M,OAAO4K,cAE7F1B,UAAU,iBAGlB,sDACA,cAAC,KAAD,CACI5Z,MAAK,oBAAEud,EAAW,qBAAb,aAAE,EAA0BlD,eAA5B,QAAuC,GAC5Cd,YAAY,UACZ/K,KAAK,OACLoG,SAAU,SAAC4I,GAAD,OACN5I,EAAS,2BAAI2I,GAAL,IAAiB,aAAa,2BAAKA,EAAW,eAA7B,IAA4ClD,QAASmD,EAAG9M,OAAO1Q,YAE5F4Z,UAAU,oBC6CP6D,GAvBgB,CAC3BpB,aAAc,CACVS,YAAa,eACbC,QAAS,CACL,CACIC,MAAO,CAAC,UACRC,OAAQ,iBAGhBC,gBAAiB,CAAC,UAAW,SAAU,cAAe,iBACtDC,kBAAmB,GACnBC,gBAAiB,CACb,YAAa,eACb,aAAc,CAACM,QAAS,GAAIrH,OAAQ,GAAIsH,YAAa,GAAIC,cAAe,KAE5EpP,KAAM,SACN8O,SAtEwB,SAAC,GAAD,YAAEC,EAAF,EAAEA,WAAY3I,EAAd,EAAcA,SAAd,OAC5B,eAAC,IAAMiJ,SAAP,WACI,yCACA,cAAC,KAAD,CACI7d,MAAK,UAAEud,EAAW,qBAAb,aAAE,EAA0BG,QACjCnE,YAAY,UACZ/K,KAAM,OACNoG,SAAU,SAAC4I,GAAD,OACN5I,EAAS,2BAAI2I,GAAL,IAAiB,aAAa,2BAAKA,EAAW,eAA7B,IAA4CG,QAASF,EAAG9M,OAAO1Q,YAE5F4Z,UAAU,cAEd,uBACA,wCACA,cAAC,KAAD,CACI5Z,MAAK,UAAEud,EAAW,qBAAb,aAAE,EAA0BlH,OACjCkD,YAAY,SACZ/K,KAAM,OACNoG,SAAU,SAAC4I,GAAD,OACN5I,EAAS,2BAAI2I,GAAL,IAAiB,aAAa,2BAAKA,EAAW,eAA7B,IAA4ClH,OAAQmH,EAAG9M,OAAO1Q,YAE3F4Z,UAAU,cAEd,uBACA,sBAAKvK,MAAO,CAACvD,QAAS,OAAQC,eAAgB,SAAUlC,WAAY,UAApE,UACI,sBAAKwF,MAAO,CAACjE,MAAO,OAAQ0S,aAAc,GAA1C,UACI,8CACA,cAAC,KAAD,CACI9d,MAAK,UAAEud,EAAW,qBAAb,aAAE,EAA0BI,YACjCpE,YAAY,eACZ/K,KAAM,OACNoG,SAAU,SAAC4I,GAAD,OACN5I,EAAS,2BAAI2I,GAAL,IAAiB,aAAa,2BAAKA,EAAW,eAA7B,IAA4CI,YAAaH,EAAG9M,OAAO1Q,YAEhG4Z,UAAU,iBAGlB,sBAAKvK,MAAO,CAACjE,MAAO,OAAQ2S,YAAa,GAAzC,UACI,gDACA,cAAC,KAAD,CACI/d,MAAK,UAAEud,EAAW,qBAAb,aAAE,EAA0BK,cACjCrE,YAAY,iBACZ/K,KAAM,OACNoG,SAAU,SAAC4I,GAAD,OACN5I,EAAS,2BAAI2I,GAAL,IAAiB,aAAa,2BAAKA,EAAW,eAA7B,IAA4CK,cAAeJ,EAAG9M,OAAO1Q,YAElG4Z,UAAU,0BCGfoE,GAvBQ,CACnBC,KAAM,CACFnB,YAAa,OACbC,QAAS,CACL,CACIC,MAAO,CAAC,UACRC,OAAQ,eAGhBC,gBAAiB,CAAC,UAAW,YAC7BC,kBAAmB,GACnBC,gBAAiB,CACb,YAAa,aACb,aAAc,CAACC,SAAS,EAAOa,UAAU,IAE7C1P,KAAM,SACN8O,SA9CgB,SAAC,GAAD,QACKC,EADL,EACKA,WACA3I,EAFL,EAEKA,SAFL,OAIpB,sBAAKvF,MAAO,CAACvD,QAAS,OAAQC,eAAgB,SAAUlC,WAAY,UAApE,UACI,sBAAKwF,MAAO,CAACvD,QAAS,OAAQjC,WAAY,WAAYmC,QAAS,UAA/D,UACI,oBAAIqD,MAAO,CAACrD,QAAS,SAArB,4BACA,uBACIsP,QAAO,UAAEiC,EAAW,qBAAb,aAAE,EAA0BF,QACnC7O,KAAK,WACLoG,SAAU,SAAC4I,GAAD,OACN5I,EAAS,2BAAI2I,GAAL,IAAiB,aAAa,2BAAKA,EAAW,eAA7B,IAA4CF,QAASG,EAAG9M,OAAO4K,cAE5F1B,UAAU,iBAGlB,sBAAKvK,MAAO,CAACvD,QAAS,OAAQjC,WAAY,WAAYmC,QAAS,UAA/D,UACI,oBAAIqD,MAAO,CAACrD,QAAS,SAArB,4BACA,uBACIsP,QAAO,UAAEiC,EAAW,qBAAb,aAAE,EAA0BW,SACnC1P,KAAK,WACLoG,SAAU,SAAC4I,GAAD,OACN5I,EAAS,2BAAI2I,GAAL,IAAiB,aAAa,2BAAKA,EAAW,eAA7B,IAA4CW,SAAUV,EAAG9M,OAAO4K,cAE7F1B,UAAU,uBCcXuE,GAlBQ,CACnBvZ,KAAM,CACFkY,YAAa,OACbC,QAAS,CACL,CACIC,MAAO,CAAC,UACRC,OAAQ,eAGhBE,kBAAmB,GACnBC,gBAAiB,CACb,YAAa,cAEjB5O,KAAM,SACN8O,SA9BgB,SAAC,GAAD,MAAEC,EAAF,EAAEA,WAAY3I,EAAd,EAAcA,SAAd,OACpB,eAAC,IAAMiJ,SAAP,WACI,+CACA,cAAC,KAAD,CACI7d,MAAK,UAAEud,EAAWlD,eAAb,QAAwB,GAC7Bd,YAAY,UACZ/K,KAAK,OACLoG,SAAU,SAAC4I,GAAD,OACN5I,EAAS,2BAAI2I,GAAL,IAAiBlD,QAASmD,EAAG9M,OAAO1Q,UAEhD4Z,UAAU,oBCHPwE,GAtBK,CAChBzB,QAAS,CACLG,YAAa,UACbC,QAAS,CACL,CACIC,MAAO,CAAC,SACRqB,MAAO,YAGflB,kBAAmB,CACfmB,MAAO,CACH9P,KAAM,SACN+P,OAAQ,cAGhBnB,gBAAiB,CACb,WAAY,WAEhB5O,KAAM,UCmHd,IAoBegQ,GApBS,CACpBC,WAAY,CACR3B,YAAa,cACbC,QAAS,CACL,CACIC,MAAO,CAAC,UACRC,OAAQ,aAGhBC,gBAAiB,CAAC,QAClBC,kBAAmB,GACnBC,gBAAiB,CACb,YAAa,YAEjB5O,KAAM,SACN8O,SAtCR,YAMI,IALAC,EAKD,EALCA,WACA3I,EAID,EAJCA,SAKA,OACI,eAAC,IAAMiJ,SAAP,WACI,+CACA,cAAC,KAAD,CACI7d,MAAOud,EAAWlD,QAClBd,YAAY,UACZ/K,KAAK,WACLoG,SAAU,SAAC4I,GAAD,OACN5I,EAAS,2BAAK2I,GAAN,IAAkBlD,QAASmD,EAAG9M,OAAO1Q,UAEjD4Z,UAAU,sBAsBlB8E,UAlIR,YAMI,IAAD,IALCnB,EAKD,EALCA,WACA3I,EAID,EAJCA,SAKA,OACI,gCACI,gDACA,cAAC,KAAD,CACI5U,MAAOud,EAAWoB,UAAYpB,EAAWoB,UAAY,GACrDpF,YAAY,iBAEZ/K,KAAK,SACLoG,SAAU,SAAC4I,GACP5I,EAAS,2BACF2I,GADC,IAEJoB,UAAWrQ,SAASkP,EAAG9M,OAAO1Q,MAAO,QAG7C4Z,UAAU,qBARN,aAUR,gDACA,cAAC,KAAD,CACI5Z,MAAOud,EAAWqB,UAAYrB,EAAWqB,UAAY,GACrDrF,YAAY,iBAEZ/K,KAAK,SACLoG,SAAU,SAAC4I,GACP5I,EAAS,2BACF2I,GADC,IAEJqB,UAAWtQ,SAASkP,EAAG9M,OAAO1Q,MAAO,QAG7C4Z,UAAU,qBARN,aAUR,sCACA,cAAC,KAAD,CACI5Z,MAAK,oBAAEud,EAAW,qBAAb,aAAE,EAA0BsB,YAA5B,QAAoC,EACzCtF,YAAY,OAEZ/K,KAAK,SACLoG,SAAU,SAAC4I,GACP5I,EAAS,2BACF2I,GADC,IAEJ,aAAc,CAACsB,KAAMvQ,SAASkP,EAAG9M,OAAO1Q,MAAO,SAGvD4Z,UAAU,qBARN,QAUR,4DAC+B,IAC3B,mBAAG7U,KAAK,yFAEZ,cAAC,KAAD,CACI/E,MAAOud,EAAWuB,QAAUvB,EAAWuB,QAAU,GACjDvF,YAAY,6BAEZ/K,KAAK,OACLoG,SAAU,SAAC4I,GACP5I,EAAS,2BACF2I,GADC,IAEJuB,QAAStB,EAAG9M,OAAO1Q,UAG3B4Z,UAAU,mBARN,WAUR,sBAAKA,UAAU,qBAAf,UACI,2CACA,uBACIpL,KAAM,WACNoG,SAAU,WACNA,EAAS,2BACF2I,GADC,IAEJ,gBAAgBA,EAAW,kBACU,IAA/BA,EAAW,oBAIzBjC,UACIiC,EAAW,kBAC0B,IAA/BA,EAAW,2BCpF1BwB,GAjBE,CACbC,KAAM,CACFlC,YAAa,OACbC,QAAS,CACL,CACIC,MAAO,CAAC,UACRC,OAAQ,SAGhBE,kBAAmB,CACf8B,QAAS,QAEb7B,gBAAiB,GACjB5O,KAAM,WCmBC0Q,GAhCI,CACfC,OAAQ,CACJrC,YAAa,SACbC,QAAS,CACL,CACIC,MAAO,CAAC,SACRC,OAAQ,WAGhBE,kBAAmB,CACf,MAAS,CACL,KAAQ,SACR,WAAc,CACV,KAAQ,CAAE,QAAW,YAAa,KAAQ,SAAU,UAAY,GAChE,YAAe,CAAE,QAAW,6EAAkB,KAAQ,SAAU,UAAY,GAC5E,MAAS,CACL,MAAS,6EACT,QAAW,EACX,KAAQ,UACR,UAAY,GAEhB,OAAU,CAAE,MAAS,6CAAW,KAAQ,cAIpDC,gBAAiB,CACb,YAAa,UAEjB5O,KAAM,U,UCYC4Q,I,OA/BI,SAAC5Z,GAChB,IAAO1C,EAAkB0C,EAAlB1C,KAAM8R,EAAYpP,EAAZoP,SAMb,OACI,cAAC,KAAD,CACIpR,GAAI,gBACJ6b,eAAgB,SAAC3D,EAAU4D,GAN/B1K,EAMuD8G,IACnD1b,MAAO8C,EACPyc,iBAAkBC,8CAClBC,KAAM,CACFC,QAAS,gUACTC,QAAS,gDACTzT,QAAS,6UACT0T,gBAAgB,EAChBC,cAAc,EACdC,kBAAkB,EAClBC,eAAe,EACfC,8BAA+B,iBAC/BC,aAAc,UACdC,YAAa,8BACbC,gBAAiB,kCACjBC,cAAe,uECQ/B,IAmBeC,GAnBE,CACbf,OAAQ,CACJxC,YAAa,SACbC,QAAS,CACL,CACIC,MAAO,CAAC,UACRC,OAAQ,WAGhBC,gBAAiB,CAAC,YAClBC,kBAAmB,GACnBC,gBAAiB,CACb,YAAa,UAEjB5O,KAAM,SACN8O,SAvCR,YAMI,IAAD,IALCC,EAKD,EALCA,WACA3I,EAID,EAJCA,SAKA,OACI,eAAC,IAAMiJ,SAAP,WACI,2CACA,cAAC,KAAD,CAAOrP,KAAK,WAAW8M,QAAO,oBAAEiC,EAAW,qBAAb,aAAE,EAA0BpE,gBAA5B,SAA+CvE,SAAU,SAAC4I,GAChF5I,EAAS,2BACF2I,GADC,IAEJ,aAAc,CAACpE,SAAUqE,EAAG9M,OAAO4K,eAG/C,+CACA,cAAC,GAAD,CAAYxY,KAAMya,EAAWlD,QAASzF,SAAU,SAAC9R,GAAD,OAC5C8R,EAAS,2BAAK2I,GAAN,IAAkBlD,QAASvX,cCdpC,kHACR+Z,IACAyD,IACAtC,IACAG,IACAC,IACAmC,IACAxB,IACAG,IACAmB,I,UCAQG,GAnBK,SAAChb,GACjB,IAAOkM,EAA8BlM,EAA9BkM,OAAQsK,EAAsBxW,EAAtBwW,SAAUpH,EAAYpP,EAAZoP,SAEnB6L,EAAmBC,GAMzB,OACI,cAAC,KAAD,CACIhP,OAAQA,EACRiP,SAAU3E,EACVpH,SARa,SAAClD,EAAgBkP,GAClChM,EAASlD,EAAQkP,IAQbC,KAAM,CAACJ,uBChBJK,GANOla,YAAO4D,IAAP5D,EAAsB,iBAAO,CAC/CwE,MAAO,MACP2V,SAAU,QACVnN,OAAQ,aCmDGoN,GA3CC,SAACxb,GACb,IACIkM,EAKAlM,EALAkM,OACAsK,EAIAxW,EAJAwW,SACArK,EAGAnM,EAHAmM,SACAsP,EAEAzb,EAFAyb,eACAC,EACA1b,EADA0b,iBAGEC,EAAkB,eAAOC,IAU/B,OACI,eAAC5W,EAAA,EAAD,CAAKsO,EAAG,EAAR,UACQ,cAAC,GAAD,CACIpH,OAAQA,EACRsK,SAAUA,EACVpH,SAAUqM,IAElB,cAAC,GAAD,UACI,cAAC,GAAD,CACIvP,OAAQyP,EACRnF,SAAU,CACNqF,sBAAuB,CACnB,YAAa,eAGrB1P,SAAUA,EACViD,SAAUsM,EACVjF,YAAY,UCvBjBqF,GArBI,SAAC9b,GAChB,IAAO1C,EAAQ0C,EAAR1C,KAEP,OACI,cAAC,KAAD,CACIU,GAAI,gBACJxD,MAAO8C,EACPoJ,SAAS,EACT4O,QAAQ,EACR5B,UAAU,EACVqG,iBAAkBC,8CAClBC,KAAM,CACFC,QAAS,aACTC,SAAS,EACTE,cAAc,EACdC,kBAAkB,MCEnByB,GAZC,SAAC/b,GACb,IAAOkM,EAA0BlM,EAA1BkM,OAAQsK,EAAkBxW,EAAlBwW,SAAUwF,EAAQhc,EAARgc,KACzB,OACI,eAAC,GAAD,WACKA,GAAQ,cAAC,GAAD,CAAY1e,KAAM0e,IAC3B,cAAChX,EAAA,EAAD,CAAKxB,GAAI,EAAT,SACI,cAAC,GAAD,CAAM0I,OAAQA,EAAQsK,SAAUA,U,8BCuFjCyF,GA3FM,SAACjc,GAClB,IAAOkc,EAA0Flc,EAA1Fkc,WAAYhQ,EAA8ElM,EAA9EkM,OAAQkP,EAAsEpb,EAAtEob,GAAIK,EAAkEzb,EAAlEyb,eAAgBU,EAAkDnc,EAAlDmc,WAAYC,EAAsCpc,EAAtCoc,mBAAoBC,EAAkBrc,EAAlBqc,OAAQC,EAAUtc,EAAVsc,OAEnFC,EAAerQ,EAAQsQ,EAAWpB,EACtC,IACI,IAAMqB,EAAe5N,KAAK+C,MAAM1F,GAChCqQ,EAAe1N,KAAKC,UAAU2N,EAAc,KAAM,GAElD,IAAMC,EAAW7N,KAAK+C,MAAMwJ,GAC5BoB,EAAW3N,KAAKC,UAAU4N,EAAU,KAAM,GAC5C,MAAOrN,GACLrU,QAAQC,IAAIoU,GAuBhB,OACI,eAACrK,EAAA,EAAD,WACI,eAAC1B,EAAA,EAAD,CAAMC,WAAS,EAACc,WAAY,SAA5B,UACI,cAACsY,GAAA,EAAD,CAAWtc,GAAI,CAACuc,GAAI,GAApB,SACI,cAACC,GAAA,EAAD,CACIC,QAAS,cAACC,GAAA,EAAD,CACLjH,QAASoG,EACT9M,SA3BO,WAC3BgN,KA2BoBlc,KAAK,OACL8c,WAAY,CAAC,aAAc,UAE/BC,eAAe,QACfhZ,MAAM,qFAEbiY,GACG,cAACjb,EAAA,EAAD,CAAQZ,GAAI,CAAC6c,EAAG,GAAIvc,MAAO,UAAWH,QAAS,YAAaP,QAvBzD,WACfoc,KAsBY,2HAGHH,GACG,cAACjb,EAAA,EAAD,CAAQZ,GAAI,CAAC6c,EAAG,GAAIvc,MAAO,UAAWH,QAAS,YAAaP,QAvBzD,WACfqc,KAsBY,wHAIR,eAAChZ,EAAA,EAAD,CAAMC,WAAS,EAAf,UACI,cAACD,EAAA,EAAD,CAAMQ,MAAI,EAACL,GAAI,GAAIC,GAAI,EAAG4P,EAAG,EAA7B,SACI,cAACnE,GAAA,EAAD,CACIlL,MAAM,SACNkZ,WAAS,EACT7G,WAAS,EACT9V,QAAQ,WACR4c,WAAY,CACR5I,UAAW0H,GAEf1hB,MAAO+hB,EACPnN,SAlDO,SAACV,GACxB+M,EAAe/M,EAAMxD,OAAO1Q,QAkDZqP,MAAO,CAACwT,UAAW,GAAIC,aAAc,QAG7C,cAACha,EAAA,EAAD,CAAMQ,MAAI,EAACL,GAAI,GAAIC,GAAI,EAAG4P,EAAG,EAA7B,SACI,cAACnE,GAAA,EAAD,CACIlL,MAAM,KACNkZ,WAAS,EACT7G,WAAS,EACT9V,QAAQ,WACR4c,WAAY,CACR5I,UAAW0H,GAEf1hB,MAAOgiB,EACPpN,SA5DG,SAACV,GACpByN,EAAWzN,EAAMxD,OAAO1Q,QA4DRqP,MAAO,CAACwT,UAAW,GAAIC,aAAc,e,UChB9CC,GAzEA,SAACvd,GACZ,IAAOhC,EAAMgC,EAANhC,GACAG,EAAuB9B,IAAvB8B,oBAEP,EAA4BnE,mBAAS,IAArC,mBAAOkS,EAAP,KAAesR,EAAf,KAEMC,EAAU,uCAAG,4BAAAljB,EAAA,sEACO4D,IADP,YACTC,EADS,iDAGJA,EAAQ+D,QAAQub,MAHZ,qCAKJ9S,GALI,2CAAH,qDASV+S,EAAyB,SAACvf,GAC5B,IAAMwf,EAAqB,CAAC,SAAU,SAAU,UAAW,UAAW,QAGhE9Q,EAAO1O,EAAUyO,OAAOC,KAAK1O,GAAW,GACxCyf,EAAkB,GAClBpK,EAAkB,GAExB3G,EAAKC,SAAQ,SAAAC,GACT,MAAgD5O,EAAQ4O,GAAjDhE,EAAP,EAAOA,KAAM/E,EAAb,EAAaA,MAAO6Z,EAApB,EAAoBA,UAAqBC,EAAzC,EAA+BtK,SAC3BmK,EAAmB7P,SAAS/E,IAC5B6U,EAAW7Q,GAAO,CACdhE,KAAMA,EACNxN,MAAOyI,EACP9D,YAAa2d,GAEbC,GACAtK,EAASrR,KAAK4K,IAEF,YAAThE,IACP6U,EAAW7Q,GAAO,CACdhE,KAAM,SACNxN,MAAOyI,EACP9D,YAAa2d,GAEbC,GACAtK,EAASrR,KAAK4K,OAK1B,IAAMgR,EAAW,CACbhV,KAAM,SACN6U,WAAYA,EACZpK,SAAUA,GAGd,OADAzY,QAAQC,IAAI+iB,GACLA,GAcX,OAXA3jB,qBAAU,WAMF2D,GALS,uCAAG,8BAAAzD,EAAA,sEACUkjB,IADV,OACNrf,EADM,OAEN8N,EAASyR,EAAuBvf,GACtCof,EAAUtR,GAHE,2CAAH,oDAMTmF,KAEL,CAACrT,IAGA,8BACI,cAAC,GAAD,CAAMkO,OAAQA,OChDX+R,GAnBC,SAACje,GACb,aAAWA,GAGX,OACI,cAAC,GAAD,UACI,cAACsD,EAAA,EAAD,CAAMC,WAAS,EAACC,GAAI,EAAGb,QAAS,EAAhC,SAJY,CAAC,EAAG,GAKCkB,KAAI,SAACyP,EAAGvP,GAAJ,OACb,cAACT,EAAA,EAAD,CAAMQ,MAAI,EAACL,GAAI,GAAf,SACI,cAAC,EAAD,CAAgBnG,KAAM,CAAC4C,KAAMoT,GAAIrR,gBAAgB,EAAjD,SACI,cAAC,GAAD,CAAQjE,GAAIsV,OAFIvP,WCC7Bma,GATF,SAACle,GACV,IAAO1C,EAAkB0C,EAAlB1C,KAAM8R,EAAYpP,EAAZoP,SACb,OACI,cAAC,GAAD,UACI,cAAC,GAAD,CAAY9R,KAAMA,EAAM8R,SAAUA,O,oBCFjC+O,GAAevkB,IAAMC,cAAgC,MAE5DukB,GAAQxkB,IAAMykB,YAAuC,SACvDre,EACAqS,GAEA,OAAO,cAAC,KAAD,aAAUiM,UAAW,EAAGjM,IAAKA,EAAK7R,QAAQ,UAAaR,OAoDnDue,GAjDO,SAAC,GAA+C,IAA9CxkB,EAA6C,EAA7CA,SACpB,EAAwBC,oBAAS,GAAjC,mBAAO+M,EAAP,KAAaW,EAAb,KACA,EAA0B1N,mBAAc,IAAxC,mBAAOwB,EAAP,KAAcgjB,EAAd,KACA,EAA8BxkB,mBAAwB,SAAtD,mBAAOwG,EAAP,KAAgBie,EAAhB,KAqBMC,EAAa,SAAChQ,EAAsCiQ,GACvC,cAAXA,GAIJjX,GAAQ,IAGNlN,EAAQ,CAACuM,OAAM6X,UAhBH,SAACpjB,EAAegF,GAC1BA,GACAie,EAAWje,GAEfge,EAfc,SAAChkB,GACf,cAAeA,GACX,IAAK,SACD,OAAOA,EACX,IAAK,SACD,OAAOqU,KAAKC,UAAUtU,GAC1B,QACI,OAAOqkB,OAAOrkB,IAQbsU,CAAUtT,IACnBkM,GAAQ,IAWoBgX,cAEhC,OAAO,eAACP,GAAa/iB,SAAd,CAAuBZ,MAAOA,EAA9B,UACH,cAACskB,GAAA,EAAD,CAAU/X,KAAMA,EAAMgY,iBAAkB,IAAMC,QAASN,EAC7CO,aAAc,CACVC,SAAU,MACVC,WAAY,UAH1B,SAMI,cAAC,GAAD,CAAOH,QAASN,EAAYU,SAAU5e,EAASH,GAAI,CAACuF,MAAO,QAA3D,SACKpK,MAGRzB,MC9DIslB,GAAW,kBAAMzlB,IAAM0B,WAAW6iB,K,yGCUxC,SAASmB,GAAWC,GAAgC,IAAdC,IAAa,yDACtD,EAAoBlkB,qBAAWmkB,KAAxBC,EAAP,EAAOA,UAEPrlB,qBAAU,WACN,GAAKmlB,EAAL,CAIA,IAAMG,EAAUD,EAAUE,OAAM,SAACC,GAC7B,IAAMC,EAAgB,2BACfD,GADe,IAElBE,MAFkB,WAGdJ,IACAK,YAAW,kBAAMH,EAAGE,UAAS,QAIrCR,EAAQO,MAGZ,OAAOH,KACR,CAACD,EAAWH,EAASC,ICpB5B,IAsBeS,GAtBS,SAACjgB,GACrB,IACIkM,EAIAlM,EAJAkM,OACAsK,EAGAxW,EAHAwW,SACAiF,EAEAzb,EAFAyb,eACAyE,EACAlgB,EADAkgB,gBAGJ,OACI,eAAClb,EAAA,EAAD,CAAKsO,EAAG,EAAR,UACI,cAACtO,EAAA,EAAD,CAAKsB,QAAS,OAAQC,eAAgB,SAAtC,SACI,cAACtF,EAAA,EAAD,CAAQT,QAAS,YAAaP,QAASigB,EAAvC,kKAEJ,cAAC,GAAD,CACIhU,OAAQA,EACRsK,SAAUA,EACVpH,SAAUqM,Q,0KCoNX0E,GA1NM,WACjB,IAAQC,EAAY3Y,cAAZ2Y,QACFjb,EAAWC,cACjB,EAAwC/I,IAAhC0B,EAAR,EAAQA,aAAcE,EAAtB,EAAsBA,cAEhB4K,GAAW0E,EADGtD,KAAZsD,SACiB6S,GACjBxB,EAAcS,KAAdT,UAIR,EAA4B5kB,mBAAS,IAArC,mBAAOkS,EAAP,KAAesR,EAAf,KACA,EAAgCxjB,mBAAS,IAAzC,mBAAOwc,EAAP,KAAiB6J,EAAjB,KACA,EAAgCrmB,mBAAc,IAA9C,mBAAOmS,EAAP,KAAiBmU,EAAjB,KACA,EAAgCtmB,mBAAwB,WAAxD,mBAAOumB,EAAP,KAAiBC,EAAjB,KACA,EAA4CxmB,mBAAS,IAArD,mBAAOymB,EAAP,KAAuBC,EAAvB,KACA,EAAkC1mB,oBAAS,GAA3C,mBAAOkiB,EAAP,KAAmByE,EAAnB,KACA,EAAkC3mB,mBAAS,IAA3C,mBAAO4mB,EAAP,KAAkBC,EAAlB,KACA,EAA0B7mB,mBAAS,IAAnC,mBAAO8mB,EAAP,KAAcC,EAAd,KACA,EAA4C/mB,mBAAS,IAArD,mBAAOgnB,EAAP,KAAuBC,EAAvB,KACA,GAAoCjnB,mBAAS,IAA7C,qBAAOknB,GAAP,MAAmBC,GAAnB,MACA,GAAoCnnB,oBAAS,GAA7C,qBAAOonB,GAAP,MAAmBC,GAAnB,MACA,GAAoCrnB,mBAAS,IAA7C,qBAAOsnB,GAAP,MAAmBC,GAAnB,MACA,GAA4BvnB,mBAAS,IAArC,qBAAOwnB,GAAP,MAAeC,GAAf,OFNG,SAAmBC,GAGE,IAAdlC,IAAa,yDAehBF,GAdSqC,uBAAY,SAAC9B,GACzB,IAAI/gB,EACmB,oBAAZ4iB,EAEiB,kBADxB5iB,EAAW4iB,EAAQ7B,EAAGlkB,SAAUkkB,EAAGrd,WAE/B1D,EAAWE,OAAO4iB,QAAQ9iB,IAG9BA,EAAWE,OAAO4iB,QAAQF,GAE1B5iB,GACA+gB,EAAGE,UAER,CAAC2B,IACuBlC,GEV3BqC,CAAU,yOAAiDT,IAE3D,IAAMU,GAAa5V,EAAS2C,KAAK+C,MAAM1F,GAAU,GAC3C6V,GAASvL,EAAW3H,KAAK+C,MAAM4E,GAAY,GAE3CwL,GAAkB,CACpBC,QAAS,CAAEzmB,MAAO,qEAAeqM,KAAM,cAAC,KAAD,CAAWoB,SAAU,WAC5DuQ,KAAM,CAAEhe,MAAO,YAAaqM,KAAM,cAAC,KAAD,CAAmBoB,SAAU,WAE/D+S,KAAM,CAAExgB,MAAO,iCAASqM,KAAM,cAAC,KAAD,CAAUoB,SAAU,WAClDiZ,QAAS,CAAE1mB,MAAO,uCAAUqM,KAAM,cAAC,KAAD,CAAgBoB,SAAU,WAC5D6Q,OAAQ,CAAEte,MAAO,iCAASqM,KAAM,cAAC,KAAD,CAAmBoB,SAAU,YAGjE5O,qBAAU,WA8BFwO,GA7BU,uCAAG,WAAOA,GAAP,+BAAAtO,EAAA,sEACOwD,EAAa8K,GADpB,OACPlK,EADO,OAYTA,EATAX,GACAmkB,EAQAxjB,EARAwjB,YACAC,EAOAzjB,EAPAyjB,UACAC,EAMA1jB,EANA0jB,UACAC,EAKA3jB,EALA2jB,gBACAC,EAIA5jB,EAJA4jB,eACAC,EAGA7jB,EAHA6jB,iBACAC,EAEA9jB,EAFA8jB,gBACGrkB,EAXM,YAYTO,EAZS,KAcN,gBAAsB2jB,QAAoC1X,EACjExM,EAAO,eAAqBmkB,EAAiB1T,KAAKC,UAAUyT,QAAkB3X,EAE9E4S,EAAU2E,GACV9B,EAAY+B,GACZvB,EAAasB,GACbpB,EAASqB,GACTnB,EAAkBkB,GAClBhB,GAAciB,GACd9B,EAAYliB,GACZsiB,EAAkB2B,GAClBd,GAAciB,GACdf,GAAUgB,GA1BG,4CAAH,qDA8BVC,CAAS7Z,KAEd,CAACA,IAEJ,IAAM8Z,GAAchB,uBAAY,WACoBxV,EAAxCN,MAAR,IACI+W,EADWL,EAAiCpW,EAAjCoW,eAAmBM,EAAlC,YAAgD1W,EAAhD,IAEA,IACIyW,EAAwB/T,KAAK+C,MAAM2Q,GACrC,MAAOlT,GACLuT,EAAwB,KAG5B,OAAO,2BACAC,GADP,IAEIV,YAAajW,EACbkW,UAAW5L,EACX6L,UAAW5B,EACX+B,iBAAkBlB,GAClBmB,eAAgBjB,GAChBe,eAAgBK,MAErB,CAACzW,EAAUD,EAAQuU,EAAgBjK,EAAU8K,GAAYE,KAEtDsB,GAAW,SAACxlB,GACd,OAAOW,EAAc4K,EAAUvL,IAG7BylB,GAAgBpB,sBAAYqB,MAAS,SAAC1lB,GACxCwlB,GAASxlB,GACJxC,MAAK,kBAAME,QAAQC,IAAI,YACvB6Q,OAAM,SAAAC,GAAG,OAAI6S,EAAU7S,EAAI2V,QAAS,cA5Fd,KA6FH,IAE5BrnB,qBAAU,WAENgnB,IAAc,KAEf,CAAClV,EAAUD,EAAQsK,EAAUiK,EAAgBsC,GAAeJ,KAE/D,IAQMM,GAAqB,SAAC/W,EAAgBkP,GACxCoC,EAAUtR,GACVmU,EAAYjF,GACZ6F,EAAkB/U,GAClBiV,GAAc/F,GACdyF,EAAa3U,GACb6U,EAAS3F,IAGP8H,GAAuB,SAAChX,EAAgBkP,GAC1CmG,GAAcrV,GACduV,GAAUrG,IAGR+H,GAAuB,SAAChX,GAC1BmU,EAAYnU,IAGViX,GAAmB,SAACC,GACtB3C,EAAkB2C,IAOhBC,GAAyB,WAC3B3C,GAAazE,IAGXqH,GAAwB,SAACrX,GAC3B2U,EAAa3U,IAGXsX,GAAoB,SAACpI,GACvB2F,EAAS3F,IAGPqI,GAAgB,WAClBjG,EAAUoD,GACVP,EAAYS,IAGV4C,GAAgB,WAClBlG,EAAUwD,GACVX,EAAYa,IACZL,EAAaG,GACbD,EAASG,KAGPyC,GAA0B,WAC5BpC,GAAcrV,GACduV,GAAUjL,IAsCd,OACI,eAACxR,EAAA,EAAD,WACI,cAAC,GAAD,CAAUoO,SAAU4O,GAAY7O,KAAMoN,EAAUnR,SAtE3B,SAAC+D,GAC1BqN,EAAYrN,IAqEwEE,OANzE,WACXlO,GAAU,MAhCQ,SAACgO,GACnB,OAAQA,GACJ,IAAK,UACD,OAAO,cAAC,GAAD,CACHjH,OAAQA,EACRsK,SAAUA,EACVrK,SAAUA,EACVsP,eAAgBwH,GAChBvH,iBAAkByH,KAE1B,IAAK,UACD,OAAO,cAAC,GAAD,IACX,IAAK,OACD,OAAO,cAAC,GAAD,CAAM7lB,KAAMmjB,EAAgBrR,SAAUgU,KACjD,IAAK,UACD,OAAO,cAAC,GAAD,CAASlX,OAAQ4V,GAAYtL,SAAUuL,GAAQ/F,KAAMyE,IAChE,IAAK,SACD,OAAO,cAAC,GAAD,CAAcvE,WAAYA,EAAYhQ,OAAQ0U,EAAWxF,GAAI0F,EAChErF,eAAgB8H,GAAuBpH,WAAYqH,GACnDpH,mBAAoBkH,GAAwBjH,OAAQoH,GACpDnH,OAAQoH,KAChB,IAAK,OACD,OAAO,cAAC,GAAD,CACHxX,OAAQoV,GACR9K,SAAUgL,GACV/F,eAAgByH,GAChBhD,gBAAiByD,MAYxBC,CAAcrD,GACf,cAAC,GAAD,CAAejgB,GAAI,EAAnB,SACI,cAACW,EAAA,EAAD,CAAQT,QAAS,YAAaG,MAAO,UAAW2V,WAAS,EAACrW,QAvGjD,WACjB,IAAM3C,EAAOqlB,KACbG,GAASxlB,GACJxC,MAAK,kBAAM8jB,EAAU,8FAAoB,cACzC9S,OAAM,SAAAC,GAAG,OAAI6S,EAAU7S,EAAI2V,QAAS,YACzCL,IAAc,IAkGN,0E,UCnCDwC,GAhMM,WACjB,MAAoExnB,IAA5DgC,EAAR,EAAQA,oBAAqBC,EAA7B,EAA6BA,qBAAsBP,EAAnD,EAAmDA,aAC3CqiB,EAAY3Y,cAAZ2Y,QACR,EAAmCnW,KAA3BsD,EAAR,EAAQA,QAAStB,EAAjB,EAAiBA,cACXpD,EAAW0E,EAAQ6S,GACjBxB,EAAcS,KAAdT,UAER,EAA4B5kB,mBAAS,IAArC,mBAAOkS,EAAP,KAAesR,EAAf,KACA,EAAgCxjB,mBAAS,IAAzC,mBAAOmS,EAAP,KAAiBmU,EAAjB,KACA,EAAkCtmB,oBAAS,GAA3C,mBAAO8pB,EAAP,KAAmBC,EAAnB,KACA,EAA8C/pB,qBAA9C,mBAAOgqB,EAAP,KAAwBC,EAAxB,KACA,EAA0BjqB,oBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA4BJ,mBAAmB,IAA/C,mBAAOkd,EAAP,KAAegN,EAAf,KAGA7pB,qBAAU,WACNgE,EAAoBwK,GAAU/N,MAAK,SAAA6D,GAC/B2hB,EAAY3hB,EAAMwlB,YAClBJ,EAAYplB,EAAMylB,eAEvB,CAACvb,IAEJxO,qBAAU,WACN,IAAMqoB,EAAW,SAACtC,GACd,GAAIA,EAAS,CACT,IAAMiE,EAAYtmB,EAAaqiB,GAC/B,OAAIiE,GAGOhmB,EAAoB+hB,GAGnC,OAAO/hB,EAAoBwK,IA4B3BA,GAlBS,uCAAG,gCAAAtO,EAAA,sEACemoB,IADf,UACN4B,EADM,SAKRC,EADAT,EACeQ,EAAaxZ,WAEbwZ,EAAazZ,WAPpB,gCAUiB5N,QAAQiT,IAAuBqU,EAhBjD1gB,IAAJ,uCAAQ,WAAM2gB,GAAN,eAAAjqB,EAAA,sEACOmoB,EAAS8B,GADhB,cACP7lB,EADO,yCAED6lB,EAAS7lB,IAFR,2CAAR,wDAMK,OAUF8lB,EAVE,OAWJ5X,OAAOC,KAAK2X,GAAYjU,OAAS,IACjCyT,EAAmBQ,GACnBrqB,GAAS,IAbL,2CAAH,oDAmBTiX,KAGL,CAACxI,EAAUib,IAEdzpB,qBAAU,WAmBN,GAAI2pB,GAAmBA,EAAgBxT,OAAS,EAAG,CAC/C,IAAMkU,EAAYV,EAAgBngB,KAAI,SAAA8gB,GAClC,IAAIhmB,EAAQkO,OAAO+X,OAAOD,GAAa,GACnCE,EAAclmB,EAAMwjB,YAActT,KAAK+C,MAAMjT,EAAMwjB,aAAe,GAGlE2C,EAAe,GACfD,GAAeA,EAAYC,cAAgBjY,OAAOC,KAAK+X,EAAYC,cAActU,OAAS,IAC1FsU,EAAeD,EAAYC,cAI/B,IAAMC,EAAqBlY,OAAO+X,OAAOE,GACnCE,EAAa/Y,EAAc4Y,GAC7BI,EAAY,GAIhB,OAHIF,EAAmBvU,OAAS,IAC5ByU,EAAYF,EAAmBlhB,KAAI,SAACqhB,GAAD,OAlCpB,SAACA,GACxB,IAAI5nB,EAAO,KAOX,OANI4nB,EAAIC,eAAe,WACnB7nB,EAAO4nB,EAAIE,OAEXF,EAAIC,eAAe,WACnB7nB,EAAO4nB,EAAIG,OAEX/nB,EACOA,EAAKuG,KAAI,SAACyhB,GAEb,IAAMC,EAAe,aAAKvc,KAAM,UAAasc,GAC7C,OAAOrZ,EAAcsZ,MACtBC,OAEA,GAmBkDC,CAAmBP,MAAMM,QAEvE7P,MAAM5Z,KAAK,IAAI2pB,IAAJ,uBAAYV,GAAZ,aAA2BC,SAC9CO,OAEHtB,EAAUQ,MAEf,CAACV,IAEJ3pB,qBAAU,WACNW,QAAQC,IAAI,SAAUic,GACtBsG,EAAU,CACN1E,MAAO,CACH9P,KAAM,SACNxN,MAAO,QACPqiB,WAAY,CACRhF,MAAO,CACH8M,KAAMzO,EACN1b,MAAO,QACPwN,KAAM,UAEV4c,UAAW,CACPD,KAAM,CACF,KACA,KACA,IACA,IACA,KACA,KACA,iBACA,sBAEJnqB,MAAO,YACPwN,KAAM,UAEVxO,MAAO,CACHgB,MAAO,QACPwN,KAAM,UAEVA,KAAM,CACFxN,MAAO,OACPmqB,KAAM,CACF,UACA,SACA,UACA,UAEJ3c,KAAM,WAGd8b,aAAc,GACdrR,SAAU,IAEdjY,MAAO,cACPwN,KAAM,QACN8b,aAAc,GACdrR,SAAU,OAEf,CAACyD,IAaJ,OAAK/c,EAKD,eAAC,GAAD,CAAemG,GAAI,EAAnB,UACI,cAACuc,GAAA,EAAD,CACIC,QAAS,cAAC+I,GAAA,EAAD,CAAU/P,QAASgO,EAAY1U,SAXvB,SAACV,GAC1BqV,EAAYrV,EAAMxD,OAAO4K,UAUuD5V,KAAK,WACzES,MAAM,YACVsD,MAAM,cAEV,cAAC,GAAD,CACIiI,OAAQA,EACRC,SAAUA,EACViD,SAAU,SAACjD,GAAD,OAAcmU,EAAYnU,IACpCuK,SA1BS,WAGjBpY,EAAqBuK,EAFV,CAAEsb,WAAYhY,EAAUiY,SAAUN,IAGxChpB,MAAK,SAACuC,GAAD,OAAcuhB,EAAU,8FAAoB,oBAQ/C,oH,oBC9IAkH,GA9BK,WAAO,IAAD,IACfpoB,EAAerB,IAAfqB,YACDyH,EAAWC,cACXzJ,EAAgBC,cACf6B,EAAcgK,cAAdhK,WAIDoL,GAAW0E,EAHCtD,KAAXsD,SAGkB9P,GACnB1B,GAAe,OAARJ,QAAQ,IAARA,GAAA,UAAAA,EAAUG,aAAV,mBAAiBC,YAAjB,eAAuByJ,WAAY,IAchD,OACI,cAAC,GAAD,CAAehC,GAAI,EAAnB,SACI,cAAC,GAAD,CAAM0I,OAAQA,GAAQsK,SAAU4E,GAAI1E,SAdvB,SAACvK,GAClBnR,QAAQC,IAAIkR,GACR1O,EACAC,EAAY,aAACc,SAAUqK,GAAasD,IAC/BrR,MAAK,WACFqK,EAASpJ,MAGjBgqB,MAAM,+B,kBCgEHC,GApFW,WACtB,MAAsD3pB,IAA/CoC,EAAP,EAAOA,qBAAsBmB,EAA7B,EAA6BA,sBACtBgf,EAAaS,KAAbT,UACA5gB,EAAMyJ,cAANzJ,GACAuP,EAAWtD,KAAXsD,QAEP,EAAwBvT,qBAAxB,mBAAOsD,EAAP,KAAa+H,EAAb,KAEMwD,EAAW0E,EAAQvP,GAEzB3D,qBAAU,WACNoE,EAAqBoK,GAAU/N,MAAK,SAAAuC,GAChCrC,QAAQC,IAAIoC,GACZ,IAAO4oB,EAAuB5oB,EAAvB4oB,WAAeC,EAAtB,YAA8B7oB,EAA9B,IACMsU,EAAU,aAAIsU,WAAYA,EAAWjoB,IAAOkoB,GAClD7gB,EAAQsM,QAEb,CAAC9I,IA4DJ,OACI,cAAC7D,EAAA,EAAD,CAAKsO,EAAG,EAAR,SACI,cAAC,GAAD,CAAMpH,OA5DC,CACX,MAAS,qBACT,KAAQ,SACR,SAAY,CACR,cAEJ,WAAc,CACV,WAAc,CACV,KAAQ,UACR,MAAS,cAEb,iBAAoB,CAChB,KAAQ,UACR,MAAS,oBAEb,YAAe,CACX,KAAQ,UACR,MAAS,eAEb,mBAAsB,CAClB,KAAQ,UACR,MAAS,sBAEb,aAAgB,CACZ,KAAQ,QACR,MAAS,eACT,MAAS,CACL,KAAQ,WAGhB,QAAW,CACP,KAAQ,QACR,MAAS,UACT,MAAS,CACL,KAAQ,aA0BMsK,SApBnB,CACP,aAAgB,CACZ,YAAa,YAEjB,QAAW,CACP,YAAa,aAeuBrK,SAAU7O,EAAM8R,SAXvC,SAACjD,GAClBnR,QAAQC,IAAIkR,GACZ9G,EAAQ8G,IASwEuK,SAN/D,WACjB9W,EAAsBiJ,EAAUvL,GAAMxC,MAAK,kBAAM8jB,EAAU,QAAS,oB,qBCtC7DuH,GA/Be,SAACnmB,GAC3B,IAAOhC,EAA+CgC,EAA/ChC,GAAIW,EAA2CqB,EAA3CrB,MAAOynB,EAAoCpmB,EAApComB,gBAAiBC,EAAmBrmB,EAAnBqmB,gBAYnC,OAFArrB,QAAQC,IAAI+C,EAAIW,GAGZ,cAAC,IAAD,CAAM0B,GAAI,CAACuF,MAAO,QAAlB,SACI,cAACrD,EAAA,EAAD,CACIC,OACI,eAACC,EAAA,EAAD,CAAOC,UAAU,MAAMC,QAAS,EAAhC,UACI,cAACpB,EAAA,EAAD,CAAYtB,QAXJ,WACxBomB,EAAgBroB,IAUA,SAA0C,cAAC,KAAD,MAC1C,cAACiD,EAAA,EAAD,CAA4BT,QAAS,YAAaP,QAhB1C,WACxBmmB,EAAgBznB,EAAMX,GAAIA,IAeV,uDAAa,kBAGrBxC,MAAK,iBAAYmD,EAAMuB,MACvB0C,UAAS,cAAS5E,GAClB6E,qBAAsB,CAACrC,QAAS,MAChCsC,yBAA0B,CAACtC,QAAS,gBCiBrC8lB,GA/CO,WAClB,MAA+DjqB,IAAxDkC,EAAP,EAAOA,yBAA0BG,EAAjC,EAAiCA,2BAC3ByG,EAAWC,cACVwZ,EAAaS,KAAbT,UACAnhB,EAAcgK,cAAdhK,WAGDoS,GAAmBtC,EADPtD,KAAXsD,SAC0B9P,GAEjC,EAAwBzD,mBAAS,IAAjC,mBAAOsD,EAAP,KAAa+H,EAAb,KAEAhL,qBAAU,WACNkE,EAAyBsR,GAAkB/U,MAAK,SAAAuC,GAC5CgI,EAAQhI,QAEb,CAACwS,IAEJ,IAAM0W,EAAiB,SAAC5nB,EAAeC,GACnCF,EAA2BC,EAAOC,GAC7BkN,OAAM,SAAA9O,GAAK,OAAI4hB,EAAU5hB,EAAM0kB,aAGlC8E,EAAa,SAACxoB,GAChBmH,EAAS,GAAD,OAAInH,KAOhB,OACI,eAACgH,EAAA,EAAD,CAAKM,GAAI,EAAG9B,GAAI,EAAGoC,MAAO,OAA1B,UACI,cAAC3E,EAAA,EAAD,CAAQT,QAAS,YAAaP,QANjB,WACjBkF,EAAS,QAKL,wDAGA,cAAC7B,EAAA,EAAD,CAAMC,WAAS,EAACC,GAAI,EAAGb,QAAS,EAAhC,SACKrF,EAAKuG,KAAI,SAACC,EAA0CC,GAA3C,OACN,cAACT,EAAA,EAAD,CAAMQ,MAAI,EAACL,GAAI,GAAf,SACI,cAAC,GAAD,CAAuBzF,GAAI8F,EAAK9F,GAAIW,MAAOmF,EAAKmiB,WAAYG,gBAAiBG,EACtDF,gBAAiBG,KAFpBziB,YC6B7B0iB,GAnES,WACpB,IAAO3mB,EAA2BzD,IAA3ByD,wBACA8e,EAAaS,KAAbT,UACDzZ,EAAWC,cAEjB,EAAwBpL,mBAAS,IAAjC,mBAAOsD,EAAP,KAAa+H,EAAb,KAuDA,OACI,cAACL,EAAA,EAAD,CAAKsO,EAAG,EAAR,SACI,cAAC,GAAD,CAAMpH,OAvDC,CACX,MAAS,qBACT,KAAQ,SACR,SAAY,CACR,cAEJ,WAAc,CACV,WAAc,CACV,KAAQ,UACR,MAAS,cAEb,iBAAoB,CAChB,KAAQ,UACR,MAAS,oBAEb,YAAe,CACX,KAAQ,UACR,MAAS,eAEb,mBAAsB,CAClB,KAAQ,UACR,MAAS,sBAEb,aAAgB,CACZ,KAAQ,SACR,MAAS,gBAEb,QAAW,CACP,KAAQ,SACR,MAAS,aA0BSsK,SArBnB,CACP,aAAgB,CACZ,YAAa,YAEjB,QAAW,CACP,YAAa,aAgBuBrK,SAAU7O,EAAM8R,SAZvC,SAACjD,GAClB9G,EAAQ8G,IAWwEuK,SAR/D,WACjB5W,EAAwBxC,GACnBxC,MAAK,kBAAM8jB,EAAU,QAAS,cAC9B9jB,MAAK,kBAAMqK,GAAU,YCZnBuhB,GAlCH,kBACR,cAAC,EAAD,UACI,cAAC,GAAD,UACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,eAAC,IAAD,CAAOjrB,KAAK,IAAIqS,QAAS,cAAC,EAAD,UAAa,cAAC,GAAD,MAAtC,UACI,eAAC,IAAD,CAAOrS,KAAM,WAAb,UACI,eAAC,IAAD,CAAOA,KAAK,cAAZ,UACI,eAAC,IAAD,CAAOA,KAAK,YAAZ,UACI,cAAC,IAAD,CAAOA,KAAK,MAAMqS,QAAS,cAAC,GAAD,MAC3B,cAAC,IAAD,CAAOrS,KAAK,MAAMqS,QAAS,cAAC,GAAD,MAC3B,cAAC,IAAD,CAAO/J,OAAK,EAAC+J,QAAS,cAAC,GAAD,SAE1B,eAAC,IAAD,CAAOrS,KAAK,QAAZ,UACI,eAAC,IAAD,CAAOA,KAAK,WAAZ,UACI,cAAC,IAAD,CAAOA,KAAM,uBAAwBqS,QAAS,cAAC,GAAD,MAC9C,cAAC,IAAD,CAAOrS,KAAM,uBAAwBqS,QAAS,cAAC,GAAD,MAC9C,cAAC,IAAD,CAAO/J,OAAK,EAAC+J,QAAS,cAAC,GAAD,SAE1B,cAAC,IAAD,CAAOrS,KAAK,MAAMqS,QAAS,cAAC,GAAD,MAC3B,cAAC,IAAD,CAAO/J,OAAK,EAAC+J,QAAS,cAAC,GAAD,YAG9B,cAAC,IAAD,CAAO/J,OAAK,EAAC+J,QAAS,cAAC,GAAD,SAE1B,cAAC,IAAD,CAAO/J,OAAK,EAAC+J,QAAS,cAAC,GAAD,SAE1B,cAAC,IAAD,CAAOrS,KAAMF,EAAaE,KAAMqS,QAAS,cAAC,GAAD,gBChC9C6Y,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqB/rB,MAAK,YAAkD,IAA/CgsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFhoB,SAASioB,eAAe,SAM1BX,O","file":"static/js/main.e8a6e480.chunk.js","sourcesContent":["import {initializeApp} from 'firebase/app';\nimport {getAuth, GoogleAuthProvider} from \"firebase/auth\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCXiwOUNsbzKH7sbSAZrqA9f7VOeCMdUOQ\",\n    authDomain: \"gigaturnip-b6b5b.firebaseapp.com\",\n    projectId: \"gigaturnip-b6b5b\",\n    storageBucket: \"gigaturnip-b6b5b.appspot.com\",\n    messagingSenderId: \"414429242328\",\n    appId: \"1:414429242328:web:a4685f5ac6895ea767c8ad\",\n    measurementId: \"G-Y8JTEJMTET\"\n};\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth();\n\nconst provider = new GoogleAuthProvider();\nprovider.setCustomParameters({\n    prompt: 'select_account'\n});\n\nexport {app, auth, provider};","import React, {useEffect, useState} from \"react\";\nimport {auth, provider} from \"../../services/firebase/Firebase\";\nimport {signInWithPopup, getIdToken, signOut, onIdTokenChanged} from \"firebase/auth\";\n\ninterface AuthContextType {\n    user: any;\n    ready: boolean;\n    getToken: () => Promise<string>;\n    login: (callback: VoidFunction) => void;\n    logout: (callback: VoidFunction) => void;\n}\n\nexport const AuthContext = React.createContext<AuthContextType>(null!);\n\nconst AuthProvider = ({children}: { children: React.ReactNode }) => {\n    const [user, setUser] = useState<any>(null);\n    const [ready, setReady] = useState(false);\n\n    useEffect(() => {\n        onIdTokenChanged(auth, async (user) => {\n            if (user) {\n                setUser(user)\n            } else {\n                setUser(null)\n            }\n            setReady(true)\n        });\n    }, [])\n\n    const getToken = async () => {\n        return await getIdToken(user);\n    }\n\n    const login = (callback: VoidFunction) => {\n        return signInWithPopup(auth, provider).then((result) => {\n            const user = result.user;\n            console.log(user)\n            setUser(user);\n            callback();\n        });\n    };\n\n    const logout = (callback: VoidFunction) => {\n        return signOut(auth).then(() => {\n            setUser(null);\n            callback();\n        });\n    };\n\n    const value = {user, ready, getToken, login, logout};\n\n    return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n\nexport default AuthProvider","import React from \"react\";\nimport {AuthContext} from \"../AuthProvider\";\n\nexport const useAuth = () => React.useContext(AuthContext);","\nexport const ROUTES = {\n    login: {title: \"Login\", path: \"/login\"},\n    campaigns: {title: \"Campaign\", path: \"/campaigns\"}\n}","import {useAuth} from \"../../context/authentication/hooks/useAuth\";\nimport {useLocation, Navigate} from \"react-router-dom\";\nimport {ROUTES} from \"../../utils/constants/Paths\";\nimport {CircularProgress} from \"@mui/material\";\n\nconst RequireAuth = ({ children }: { children: JSX.Element }) => {\n  const auth = useAuth();\n  const location = useLocation();\n\n  console.log(auth)\n\n  if (auth.ready && !auth.user) {\n    return <Navigate to={ROUTES.login.path} state={{ from: location }} />;\n  }\n\n  return auth.ready ? children : <CircularProgress/>;\n};\n\nexport default RequireAuth","const baseUrl = \"https://journal-bb5e3.uc.r.appspot.com/\"\n// const baseUrl = \"http://127.0.0.1:8000/\"\nconst campaignsUrl = \"api/v1/campaigns/\"\nconst chainsUrl = \"api/v1/chains/\"\nconst taskstagesUrl = \"api/v1/taskstages/\"\nconst ranksUrl = \"api/v1/ranks/\"\nconst rankslimitsUrl = \"api/v1/ranklimits/\"\nconst webhookstagesUrl = \"api/v1/webhookstages/\"\nconst conditionalstagesUrl = \"api/v1/conditionalstages/\"\nconst manualstagesUrl = \"api/v1/manualstages/\" // TBD\nconst casesUrl = \"api/v1/cases/\"\nconst tasksUrl = \"api/v1/tasks/\"\nconst responseflattener = \"api/v1/responseflatteners/\"\n\nexport {\n    baseUrl,\n    campaignsUrl,\n    chainsUrl,\n    taskstagesUrl,\n    ranksUrl,\n    rankslimitsUrl,\n    webhookstagesUrl,\n    conditionalstagesUrl,\n    casesUrl,\n    tasksUrl,\n    manualstagesUrl,\n    responseflattener\n}","import {\n    baseUrl,\n    campaignsUrl,\n    chainsUrl,\n    conditionalstagesUrl,\n    responseflattener,\n    taskstagesUrl,\n    tasksUrl\n} from \"./Urls\";\nimport defaultAxios from \"axios\";\nimport {useAuth} from \"../../context/authentication/hooks/useAuth\";\n\n\nconst useAxios = () => {\n    const {getToken} = useAuth();\n    const axios = defaultAxios.create({\n        baseURL: baseUrl\n    });\n\n    axios.interceptors.request.use(\n        config => {\n            return getToken().then(token => {\n                if (token && config && config.headers) {\n                    config.headers[\"Authorization\"] = 'JWT ' + token;\n                }\n                return config;\n            });\n        },\n        error => Promise.reject(error)\n    );\n\n\n    const getCampaigns = () => {\n        return axios.get(`${campaignsUrl}?limit=1000`)\n            .then(res => res.data)\n            .then(res => res.results);\n    }\n\n    const getChains = (campaignId: number) => {\n        return axios.get(`${chainsUrl}?campaign=${campaignId}&limit=1000`)\n            .then(res => res.data)\n            .then(res => res.results);\n    }\n\n    const createChain = (data: { name: string, campaign: number, description?: string }) => {\n        return axios.post(`${chainsUrl}`, data);\n    }\n\n    const getStageNodes = (campaignId: number, chainId: number) => {\n        return axios.get(`${taskstagesUrl}?chain__campaign=${campaignId}&chain=${chainId}&limit=1000`)\n            .then(res => res.data)\n            .then(res => res.results);\n    };\n\n    const getLogicNodes = (campaignId: number, chainId: number) => {\n        return axios.get(`${conditionalstagesUrl}?chain__campaign=${campaignId}&chain=${chainId}&limit=1000`)\n            .then(res => res.data)\n            .then(res => res.results);\n    };\n\n    const getTaskStage = (id: number) => {\n        return axios.get(`${taskstagesUrl + id}/`)\n            .then(res => res.data);\n    }\n\n    const saveTaskStage = (id: number, data: any) => {\n        return axios.patch(`${taskstagesUrl + id}/`, data);\n    }\n\n    const getTaskStageOptions = () => {\n        return axios.options(`${taskstagesUrl}`)\n            .then(res => res.data);\n    }\n\n    const getConditionalStage = (id: number) => {\n        return axios.get(`${conditionalstagesUrl + id}/`)\n            .then(res => res.data);\n    }\n\n    const saveConditionalStage = (id: number, data: any) => {\n        return axios.patch(`${conditionalstagesUrl + id}/`, data);\n    }\n\n    const getResponseFlattenerList = (campaign: number) => {\n        return axios.get(`${responseflattener}?task_stage__chain__campaign=${campaign}`)\n            .then(res => res.data)\n            .then(res => res.results);\n    }\n\n    const getResponseFlattener = (id: number) => {\n        return axios.get(`${responseflattener + id}/`)\n            .then(res => res.data)\n    }\n    const saveResponseFlattener = (id: number, data: any) => {\n        return axios.put(`${responseflattener + id}/`, data);\n    }\n\n    const createResponseFlattener = (data: any) => {\n        return axios.post(`${responseflattener}`, data)\n    }\n\n    const downloadFlattenedResponses = (stage: number, flattener: number) => {\n        return axios.get(`${responseflattener + flattener}/csv/`, {\n            responseType: \"blob\"\n        }).then((response) => {\n            const url = window.URL.createObjectURL(new Blob([response.data]));\n            const link = document.createElement('a');\n            link.href = url;\n            link.setAttribute('download', 'results.csv'); //or any other extension\n            document.body.appendChild(link);\n            link.click();\n        });\n    }\n\n    return {\n        axios,\n        getCampaigns,\n        getChains,\n        createChain,\n        getStageNodes,\n        getLogicNodes,\n        getTaskStage,\n        saveTaskStage,\n        getTaskStageOptions,\n        getConditionalStage,\n        saveConditionalStage,\n        getResponseFlattenerList,\n        getResponseFlattener,\n        downloadFlattenedResponses,\n        saveResponseFlattener,\n        createResponseFlattener\n    }\n}\n\nexport default useAxios;","import React from 'react';\nimport {Button, CardActions, CardContent, Typography} from '@mui/material'\nimport MuiCard from '@mui/material/Card';\n\ntype Props = {\n    data: any;\n    onClick: (id: number) => void;\n};\n\nconst Card = (props: Props) => {\n    const {data, onClick} = props;\n    const {name, description, id} = data;\n\n    const handleClick = () => {\n        onClick(id)\n    }\n\n    return (\n        <MuiCard>\n            <CardContent sx={{pb: 1}}>\n                <Typography variant=\"h5\" component=\"div\">\n                    {name}\n                </Typography>\n                <Typography gutterBottom variant={\"caption\"} color=\"text.secondary\">ID: {id}</Typography>\n                <Typography overflow={\"hidden\"} textOverflow={\"ellipsis\"} variant=\"body2\" sx={{height: 60, maxWidth: 500}}>\n                    {description}\n                </Typography>\n            </CardContent>\n            <CardActions>\n                <Button size=\"small\" onClick={handleClick}>Открыть</Button>\n            </CardActions>\n        </MuiCard>\n    );\n};\n\nexport default Card","import React, {useState} from 'react';\nimport CardHeader from \"@mui/material/CardHeader\";\nimport {Button, Stack} from \"@mui/material\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport Collapse from \"@mui/material/Collapse\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Card from \"@mui/material/Card\";\nimport {styled} from \"@mui/material/styles\";\nimport IconButton, {IconButtonProps} from \"@mui/material/IconButton\";\n\ntype Props = {\n    data: any,\n    hideExpandButton?: boolean,\n    hideOpenButton?: boolean,\n    onClick?: (id: number) => void\n};\n\ninterface ExpandMoreProps extends IconButtonProps {\n    expand: boolean;\n}\n\nconst ExpandMore = styled((props: ExpandMoreProps) => {\n    const {expand, ...other} = props;\n    return <IconButton {...other} />;\n})(({theme, expand}) => ({\n    transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest,\n    }),\n}));\n\nconst ExpandableCard: React.FC<Props> = (props) => {\n    const {data, children, hideExpandButton, hideOpenButton, onClick} = props;\n    const {name, description, id} = data;\n    const [expand, setExpand] = useState(false);\n\n    const handleToggle = () => {\n        setExpand(!expand)\n    }\n\n    const handleClick = () => {\n        if (onClick) {\n            onClick(id)\n        }\n    }\n\n    const actions = [];\n    if (!hideOpenButton) {\n        actions.push(\n            <Button key={\"open_button\"} variant={\"contained\"} onClick={handleClick}>Открыть</Button>\n        )\n    }\n    if (!hideExpandButton) {\n        actions.push(\n            <ExpandMore\n                key={\"expand_button\"}\n                expand={expand}\n                onClick={handleToggle}\n                aria-expanded={expand}\n                aria-label=\"show more\"\n            >\n                <ExpandMoreIcon/>\n            </ExpandMore>\n        )\n    }\n\n    return (\n        <Card>\n            <CardHeader\n                action={\n                    <Stack direction=\"row\" spacing={1}>\n                        {actions}\n                    </Stack>\n                }\n\n                title={name}\n                subheader={`ID: ${id}`}\n                titleTypographyProps={{variant: \"h6\"}}\n                subheaderTypographyProps={{variant: \"caption\"}}\n            />\n            <Collapse in={expand} timeout=\"auto\" unmountOnExit>\n                <CardContent>\n                    {children}\n                </CardContent>\n            </Collapse>\n        </Card>\n    );\n};\n\nexport default ExpandableCard","import React from 'react';\nimport {Grid, Typography} from \"@mui/material\";\nimport Card from \"../card/Card\";\nimport ExpandableCard from \"../card/ExpandableCard\";\nimport {ViewProps} from \"./List.types\";\n\ntype Props = {\n    data: any[],\n    view: ViewProps,\n    onSelect: (id: number) => void\n};\n\nconst ListContent = (props: Props) => {\n    const {data, view, onSelect} = props;\n    if (!data) {\n        return <Typography>Error</Typography>;\n    }\n    if (view === \"grid\") {\n        return (\n            <Grid container py={2} spacing={{xs: 2, md: 3}} columns={{xs: 4, sm: 8, md: 12}}>\n                {data.map((item, index) =>\n                    <Grid item xs={2} sm={4} md={4} key={index}>\n                        <Card data={item} onClick={onSelect}/>\n                    </Grid>\n                )}\n            </Grid>\n        );\n    }\n    if (view === \"list\") {\n        return (\n            <Grid container py={2} spacing={2}>\n                {data.map((item, index) =>\n                    <Grid item xs={12} key={index}>\n                        <ExpandableCard data={item} hideExpandButton={true} onClick={onSelect}/>\n                    </Grid>\n                )}\n            </Grid>\n        );\n    }\n    return null;\n};\n\nexport default ListContent","import React from 'react';\nimport {Button, Grid, IconButton, Tooltip, Typography} from \"@mui/material\";\nimport {Link} from \"react-router-dom\";\nimport GridViewIcon from \"@mui/icons-material/GridView\";\nimport ViewListIcon from \"@mui/icons-material/ViewList\";\nimport {ViewProps} from \"./List.types\";\n\ntype Props = {\n    label?: string,\n    location: any,\n    view: ViewProps,\n    hideCreateButton?: boolean,\n    hideViewButton?: boolean,\n    onViewChange: (view: ViewProps) => void\n};\n\nconst ListHeader = (props: Props) => {\n    const {label, view, location, hideCreateButton, hideViewButton, onViewChange} = props;\n    return (\n        <Grid container alignItems={\"center\"} spacing={1}>\n            <Grid item flex={1}>\n                <Typography hidden={!label} variant={\"h4\"}>{label}</Typography>\n            </Grid>\n            <Grid item hidden={hideCreateButton}>\n                <Button component={Link} to={\"new\"} state={{from: location}} variant={\"contained\"} sx={{\n                    '&:hover': {\n                        color: 'white',\n                        boxShadow: 'none',\n                    }\n                }}>Создать</Button>\n            </Grid>\n            <Grid item hidden={hideViewButton}>\n                <Tooltip title={\"Сетка\"}>\n                    <IconButton\n                        color={view === \"grid\" ? \"primary\" : \"default\"}\n                        onClick={() => onViewChange(\"grid\")}\n                    >\n                        <GridViewIcon/>\n                    </IconButton>\n                </Tooltip>\n                <Tooltip title={\"Список\"}>\n                    <IconButton\n                        color={view === \"list\" ? \"primary\" : \"default\"}\n                        onClick={() => onViewChange(\"list\")}\n                    >\n                        <ViewListIcon/>\n                    </IconButton>\n                </Tooltip>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default ListHeader","import React, {useEffect, useState} from 'react';\nimport {Box} from \"@mui/material\";\nimport {useLocation} from \"react-router-dom\";\nimport ListContent from \"./ListContent\";\nimport ListHeader from \"./ListHeader\";\nimport {ViewProps} from \"./List.types\";\n\n\ntype Props = {\n    data: any[],\n    id: string,\n    label?: string,\n    defaultView?: ViewProps;\n    hideCreateButton?: boolean,\n    hideViewButton?: boolean,\n    onSelect: (id: number) => void,\n};\n\nconst List = (props: Props) => {\n    const {id, data, label, defaultView, hideCreateButton, hideViewButton, onSelect} = props;\n    const location = useLocation();\n\n    const [view, setView] = useState<ViewProps>(defaultView ?? \"grid\");\n\n    useEffect(() => {\n        if (!defaultView) {\n            const view = localStorage.getItem(`${id}_view`) as ViewProps || \"grid\";\n            if (view) {\n                setView(view)\n            }\n        }\n    }, [])\n\n    const handleViewChange = (view: ViewProps) => {\n        setView(view)\n        localStorage.setItem(`${id}_view`, view);\n    }\n\n    return (\n        <Box>\n            <ListHeader label={label} view={view} onViewChange={handleViewChange} location={location}\n                        hideCreateButton={hideCreateButton} hideViewButton={hideViewButton}/>\n            <ListContent data={data} view={view} onSelect={onSelect}/>\n        </Box>\n    );\n};\n\nexport default List","import React, {useEffect, useState} from \"react\";\nimport useAxios from \"../../services/api/useAxios\";\nimport {Box} from \"@mui/material\";\nimport {useNavigate} from \"react-router-dom\";\nimport List from \"../../components/list/List\";\n\nconst Campaigns = () => {\n    const {getCampaigns} = useAxios()\n    const navigate = useNavigate();\n\n    const [data, setData] = useState([])\n\n    useEffect(() => {\n        getCampaigns().then(res => setData(res))\n    }, [])\n\n    const handleSelect = (id: number) => {\n        navigate(`/campaign/${id}/chain`)\n    }\n\n    return (\n        <Box px={3} py={1}>\n            <List id={\"campaigns\"} data={data} hideCreateButton={true} label={\"Кампании\"} onSelect={handleSelect}/>\n        </Box>\n    )\n}\n\nexport default Campaigns","import React, {useContext} from \"react\";\nimport {Button} from \"@mui/material\";\nimport {useAuth} from \"../../context/authentication/hooks/useAuth\";\nimport {useLocation, useNavigate} from \"react-router-dom\";\n\n\nconst Login = () => {\n    const {login} = useAuth();\n    const navigate = useNavigate();\n    const location = useLocation();\n\n    // @ts-ignore\n    const from = location?.state?.from?.pathname || \"/\";\n\n    const handleLogin = () => {\n        login(() => navigate(from, { replace: true }))\n    }\n\n    return <Button onClick={handleLogin}>Login</Button>\n}\n\nexport default Login","import React from 'react';\nimport {CSSObject, styled, Theme, useTheme} from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport MuiDrawer from '@mui/material/Drawer';\nimport MuiLink from '@mui/material/Link';\nimport MuiAppBar, {AppBarProps as MuiAppBarProps} from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport List from '@mui/material/List';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport InboxIcon from '@mui/icons-material/MoveToInbox';\nimport {Link, useNavigate, useParams} from \"react-router-dom\";\nimport {Button} from \"@mui/material\";\nimport {useAuth} from \"../../../context/authentication/hooks/useAuth\";\nimport FilePresentIcon from '@mui/icons-material/FilePresent';\n\nconst drawerWidth = 240;\n\nconst openedMixin = (theme: Theme): CSSObject => ({\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n    }),\n    overflowX: 'hidden',\n});\n\nconst closedMixin = (theme: Theme): CSSObject => ({\n    transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: `calc(${theme.spacing(7)} + 1px)`,\n    [theme.breakpoints.down('sm')]: {\n        width: 0,\n    }\n});\n\nconst DrawerHeader = styled('div')(({theme}) => ({\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n}));\n\ninterface AppBarProps extends MuiAppBarProps {\n    open?: boolean;\n}\n\nconst StyledAppBar = styled(MuiAppBar, {\n    shouldForwardProp: (prop) => prop !== 'open',\n})<AppBarProps>(({theme, open}) => ({\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n    }),\n    ...(open && {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    }),\n}));\n\nconst Drawer = styled(MuiDrawer, {shouldForwardProp: (prop) => prop !== 'open'})(\n    ({theme, open}) => ({\n        width: drawerWidth,\n        flexShrink: 0,\n        whiteSpace: 'nowrap',\n        boxSizing: 'border-box',\n        ...(open && {\n            ...openedMixin(theme),\n            '& .MuiDrawer-paper': openedMixin(theme),\n        }),\n        ...(!open && {\n            ...closedMixin(theme),\n            '& .MuiDrawer-paper': closedMixin(theme),\n        }),\n    }),\n);\n\nexport default function Appbar(props: { children?: any }) {\n    const theme = useTheme();\n    const {campaignId} = useParams();\n    const navigate = useNavigate();\n    const {logout} = useAuth();\n    const [open, setOpen] = React.useState(false);\n    const {children} = props;\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    const DrawerItems = [\n        {page: \"chain\", title: \"Цепочки\", icon: <InboxIcon/>},\n        {page: \"flattener\", title: \"Flattener\", icon: <FilePresentIcon/>}\n    ]\n\n    const renderDrawerItems = () => {\n        return DrawerItems.map((item, index) => (\n            <ListItem key={index} component={Link} to={`campaign/${campaignId}/${item.page}`}>\n                <ListItemIcon>\n                    {item.icon}\n                </ListItemIcon>\n                <ListItemText primary={item.title}/>\n            </ListItem>\n        ));\n    };\n\n    return (\n        <Box sx={{display: 'flex'}}>\n            <CssBaseline/>\n            <StyledAppBar position=\"fixed\" open={open}>\n                <Toolbar>\n                    {campaignId && <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        sx={{\n                            marginRight: '36px',\n                            ...(open && {display: 'none'}),\n                        }}\n                    >\n                        <MenuIcon/>\n                    </IconButton>}\n                    <Box sx={{flexGrow: 1}}>\n                        <MuiLink component={Link} color={\"inherit\"} underline=\"none\" variant=\"h6\" noWrap to={\"/\"} sx={{\n                            '&:hover': {\n                                color: 'white',\n                                boxShadow: 'none',\n                            }\n                        }}>\n                            GigaTurnip Admin Interface\n                        </MuiLink>\n                    </Box>\n                    <Button color={\"inherit\"} onClick={() => logout(() => navigate('/'))}>Выход</Button>\n                </Toolbar>\n            </StyledAppBar>\n            {campaignId && <Drawer variant=\"permanent\" open={open}>\n                <DrawerHeader>\n                    <IconButton onClick={handleDrawerClose}>\n                        {theme.direction === 'rtl' ? <ChevronRightIcon/> : <ChevronLeftIcon/>}\n                    </IconButton>\n                </DrawerHeader>\n                <Divider/>\n                <List>\n                    {renderDrawerItems()}\n                </List>\n            </Drawer>}\n            <Box component=\"main\" sx={{flexGrow: 1, width: \"100%\"}}>\n                <DrawerHeader/>\n                {children}\n            </Box>\n        </Box>\n    );\n}\n","import React from 'react';\nimport Appbar from \"./appbar/Appbar\";\nimport { Outlet } from \"react-router-dom\";\n\nconst Layout = () => {\n    return (\n        <div>\n            <Appbar>\n                <Outlet />\n            </Appbar>\n        </div>\n    );\n};\n\nexport default Layout","import React, {useEffect, useState} from 'react';\nimport {Box} from \"@mui/material\";\nimport useAxios from \"../../services/api/useAxios\";\nimport {useNavigate, useParams} from \"react-router-dom\";\nimport List from \"../../components/list/List\";\n\n\nconst Chains = () => {\n    const {getChains} = useAxios();\n    const navigate = useNavigate();\n    const {campaignId} = useParams()\n\n    const [data, setData] = useState([])\n\n    useEffect(() => {\n        if (campaignId) {\n            const parsedId = parseInt(campaignId)\n            getChains(parsedId).then(res => setData(res))\n        }\n    }, [])\n\n    const handleSelect = (id: number) => {\n        navigate(`${id}`)\n    }\n\n    return (\n        <Box px={3} py={1}>\n            <List\n                id={\"chains\"}\n                data={data}\n                label={\"Цепочки\"}\n                onSelect={handleSelect}\n            />\n        </Box>\n\n    );\n};\n\nexport default Chains","import React from 'react';\nimport {Handle, Position} from 'react-flow-renderer';\nimport {styled} from \"@mui/material/styles\";\nimport {NodeType} from \"./Node.types\";\nimport {Box, BoxProps as MuiBoxProps, Typography} from \"@mui/material\";\n\n\ninterface NodeProps extends MuiBoxProps {\n    type: \"logic\" | \"stage\";\n}\n\nconst Node = styled(Box)<NodeProps>(({theme, type}) => ({\n    fontSize: '12px',\n    width: '150px',\n    textAlign: 'center',\n    color: type === \"stage\" ? theme.palette.success.contrastText : theme.palette.primary.contrastText,\n    backgroundColor: type === \"stage\" ? theme.palette.success.main : theme.palette.primary.main,\n    padding: theme.spacing(1),\n    borderRadius: theme.shape.borderRadius,\n}));\n\n\nconst BaseNode = (props: NodeType) => {\n    const {data, type} = props;\n\n    return (\n        <Node type={type}>\n            <Typography>{data.label}</Typography>\n            <Handle\n                type=\"target\"\n                position={Position.Top}\n                style={{borderRadius: '100%', width: 10, height: 10}}\n            />\n            <Handle\n                type=\"source\"\n                position={Position.Bottom}\n                style={{borderRadius: '100%', width: 10, height: 10}}\n            />\n        </Node>\n    );\n};\n\nexport default BaseNode","import React from 'react';\nimport BaseNode from \"./BaseNode\";\nimport {NodeType} from \"./Node.types\";\nimport {styled} from \"@mui/material/styles\";\n\nconst Node = styled(BaseNode)(({theme}) => ({\n    // borderColor: '#0041d0'\n    color: theme.palette.primary.contrastText,\n    backgroundColor: theme.palette.primary.main,\n}));\n\nconst CustomLogicNode = ({data}: NodeType) => <Node data={data} type={\"logic\"}/>;\n\nexport default CustomLogicNode","import React from 'react';\nimport BaseNode from \"./BaseNode\";\nimport {NodeType} from \"./Node.types\";\nimport {styled} from \"@mui/material/styles\";\n\n\nconst Node = styled(BaseNode)(({theme}) => ({\n    // borderColor: '#32CD32'\n    color: theme.palette.success.contrastText,\n    backgroundColor: theme.palette.success.main,\n}));\n\nconst CustomStageNode = ({ data }: NodeType) => <Node data={data} type={\"stage\"} />;\n\nexport default CustomStageNode","import {FlowElement} from \"react-flow-renderer\";\nimport {conditionalstagesUrl, taskstagesUrl} from \"../../services/api/Urls\";\nimport {ConnectionsParams} from \"./Helpers.types\";\nimport {isEdge} from \"react-flow-renderer\";\nimport useAxios from \"../../services/api/useAxios\";\n// @ts-ignore\nimport {retrieveSchema, toPathSchema} from \"@rjsf/core/lib/utils\";\n// @ts-ignore\nimport _get from \"lodash/get\";\n// @ts-ignore\nimport _isEmpty from \"lodash/isEmpty\";\n\nconst useHelpers = () => {\n    const {axios} = useAxios();\n\n    /**\n     * Get flatten fields from schema\n     * @param schema\n     * @param formData\n     * @returns {*[]}\n     */\n    const getFormFields = (schema: any, formData = {}) => {\n        const retrievedSchema = retrieveSchema(\n            schema\n        );\n\n        const pathSchema = toPathSchema(\n            retrievedSchema,\n            \"\",\n            schema,\n            formData\n        );\n\n        const getFieldNames = (pathSchema: any, formData: any) => {\n            const getAllPaths = (_obj: any, acc: any[] = [], paths = [\"\"]) => {\n                Object.keys(_obj).forEach(key => {\n                    if (typeof _obj[key] === \"object\") {\n                        let newPaths = paths.map(path => `${path}.${key}`);\n                        // If an object is marked with additionalProperties, all its keys are valid\n                        if (_obj[key].__rjsf_additionalProperties && _obj[key].$name !== \"\") {\n                            acc.push(_obj[key].$name);\n                        } else {\n                            getAllPaths(_obj[key], acc, newPaths);\n                        }\n                    } else if (key === \"$name\" && _obj[key] !== \"\") {\n                        paths.forEach(path => {\n                            path = path.replace(/^\\./, \"\");\n                            const formValue = _get(formData, path);\n                            // adds path to fieldNames if it points to a value\n                            // or an empty object/array\n                            if (typeof formValue !== \"object\" || _isEmpty(formValue)) {\n                                acc.push(path);\n                            }\n                        });\n                    }\n                });\n                return acc;\n            };\n            return getAllPaths(pathSchema);\n        };\n\n        return getFieldNames(pathSchema, formData);\n    };\n\n    const parseId = (id: string | undefined) => {\n        if (id) {\n            return parseInt(id)\n        } else {\n            throw new Error(\"No id\");\n        }\n    }\n\n    /**\n     * Search node in elements (state) and return it.\n     * @param id\n     * @param elements\n     * @return {FlowElement | undefined}\n     */\n    const getNode = (id: number, elements: FlowElement[]) => {\n        return elements.filter((node: any) => parseInt(node.id) === id).pop()\n    }\n\n    /**\n     *\n     * @param node\n     * @returns {string | undefined}\n     */\n    const getUrl = (node: FlowElement) => {\n        if (node.type === \"STAGE\") {\n            return taskstagesUrl\n        }\n        if (node.type === \"LOGIC\") {\n            return conditionalstagesUrl\n        }\n        return undefined\n    }\n\n    /**\n     * Add or remove connections (in_stages && out_stages) in database via API\n     * @param node - Source or Target of the current node\n     * @param currentNodeId\n     * @param type - 'in' (Incoming) or 'out' (Outgoing) connection\n     * @param method - 'create' or 'delete'\n     * @returns {Promise<void>}\n     */\n    const updateConnections = async ({node, currentNodeId, type, method}: ConnectionsParams) => {\n        // Returns url of given node type (logic or stage or undefined)\n        const url = getUrl(node)\n        if (url) {\n            // Get connections of a given node\n            let connections = undefined;\n            const {data} = await axios.get(`${url + node.id}/`);\n\n            if (type === 'in') {\n                connections = data.in_stages\n            }\n            if (type === 'out') {\n                connections = data.out_stages\n            }\n\n            if (connections) {\n                let ids = []\n                // Add current node id to given node connections\n                if (method === 'create') {\n                    ids = [currentNodeId, ...connections]\n                }\n                if (method === 'delete') {\n                    ids = connections.filter((connection: number) => connection !== currentNodeId)\n                }\n\n                let data = undefined\n                if (type === 'in') {\n                    data = {in_stages: ids}\n                }\n                if (type === 'out') {\n                    data = {out_stages: ids}\n                }\n                if (data) {\n                    console.log(data)\n                    await axios.patch(`${url + node.id}/`, data)\n                }\n            }\n        }\n    }\n\n    const addConnections = (target: number, source: number, elements: FlowElement[]) => {\n        const targetNode = getNode(target, elements)\n        const sourceNode = getNode(source, elements)\n\n        if (targetNode) {\n            updateConnections({node: targetNode, currentNodeId: source, type: 'in', method: 'create'})\n        }\n\n        if (sourceNode) {\n            updateConnections({node: sourceNode, currentNodeId: target, type: 'out', method: 'create'})\n        }\n    }\n\n\n    const removeConnections = (target: number, source: number, elements: FlowElement[]) => {\n        const targetNode = getNode(target, elements)\n        const sourceNode = getNode(source, elements)\n\n        if (targetNode) {\n            updateConnections({node: targetNode, currentNodeId: source, type: 'in', method: 'delete'})\n        }\n\n        if (sourceNode) {\n            updateConnections({node: sourceNode, currentNodeId: target, type: 'out', method: 'delete'})\n        }\n    }\n\n    const removeElements = (elementsToRemove: FlowElement[], elements: FlowElement[]) => {\n        const nodeIdsToRemove = elementsToRemove.map((n: any) => {\n            return n.id;\n        });\n\n        return elements.filter((element: any) => {\n            if (nodeIdsToRemove.includes(element.id)) {\n                if (isEdge(element)) {\n                    let target = parseInt(element.target)\n                    let source = parseInt(element.source)\n\n                    removeConnections(target, source, elements)\n                } else {\n                    const url = getUrl(element)\n                    if (url) {\n                        axios.delete(url + element.id + '/')\n                    }\n                }\n                return false\n            } else {\n                return true\n            }\n        });\n    };\n\n    /**\n     * Update node (stage) coordinates in database via API\n     * @param node\n     */\n    const updateNode = (node: any) => {\n        const x_pos = Math.round(node.position.x);\n        const y_pos = Math.round(node.position.y);\n        const data = {x_pos, y_pos};\n        const url = getUrl(node)\n        console.log(data)\n        if (url) {\n            axios.patch(url + node.id + '/', data).then(res => console.log(res.data))\n        }\n    }\n\n    /**\n     * Create node (stage) in database via API\n     * @param node\n     * @param chainId\n     * @returns {Promise<string | undefined>}\n     */\n    const createNode = async (node: { type: string, position: { x: number, y: number }, label: string }, chainId: number) => {\n        const data = {\n            name: node.label,\n            x_pos: Math.round(node.position.x),\n            y_pos: Math.round(node.position.y),\n            chain: chainId,\n            out_stages: []\n        };\n\n        const url = getUrl(node as any)\n        if (url) {\n            const stage = await axios.post(url, data).then(res => res.data).catch(err => console.log(err));\n            return stage.id.toString()\n        }\n        return undefined;\n    }\n    return {\n        getFormFields,\n        parseId,\n        getNode,\n        getUrl,\n        updateConnections,\n        addConnections,\n        removeConnections,\n        removeElements,\n        updateNode,\n        createNode\n    };\n};\n\nexport default useHelpers\n","import React, {useEffect, useState} from 'react';\nimport {Box, Grid, TextField, Typography} from \"@mui/material\";\nimport {styled} from \"@mui/material/styles\";\n\n\nconst Node = styled(Box)<{ type: \"stage\" | \"logic\" }>(({theme, type}) => ({\n    fontSize: '12px',\n    width: '150px',\n    textAlign: 'center',\n    color: type === \"stage\" ? theme.palette.success.contrastText : theme.palette.primary.contrastText,\n    backgroundColor: type === \"stage\" ? theme.palette.success.main : theme.palette.primary.main,\n    padding: theme.spacing(1),\n    borderRadius: theme.shape.borderRadius,\n    cursor: \"grab\",\n    margin: 8,\n}));\n\nconst Sidebar = () => {\n    const [draggable, setDraggable] = useState(false)\n    const [label, setLabel] = useState(\"\")\n\n    useEffect(() => {\n        if (label && label !== \"\") {\n            setDraggable(true)\n        } else {\n            setDraggable(false)\n        }\n    }, [label])\n\n    const onDragStart = (event: { dataTransfer: DataTransfer }, nodeLabel: string, nodeType: string) => {\n        let data = JSON.stringify({label, type: nodeType})\n        event.dataTransfer.setData('application/reactflow', data);\n        event.dataTransfer.effectAllowed = 'move';\n    };\n\n    const onDragEnd = () => {\n        setLabel(\"\")\n    }\n\n    return (\n        <Grid item container justifyContent={\"center\"} px={1}>\n            <Grid container item mt={2} justifyContent={\"center\"}>\n                <TextField label={\"Label\"} size=\"small\" value={label} onChange={(e) => setLabel(e.target.value)}/>\n                <Typography py={1} variant={\"caption\"} color={\"red\"} align={\"center\"}>\n                    {!draggable && 'Enter label to drag the node'}\n                </Typography>\n            </Grid>\n            <Grid item>\n                <Node type={\"stage\"} onDragEnd={onDragEnd}\n                      onDragStart={(event) => onDragStart(event, label ? label : '', 'STAGE')}\n                      draggable={draggable}>\n                    Taskstage Node\n                </Node>\n                <Node type={\"logic\"} onDragEnd={onDragEnd}\n                      onDragStart={(event) => onDragStart(event, label ? label : '', 'LOGIC')}\n                      draggable={draggable}>\n                    Conditional Node\n                </Node>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default Sidebar","// noinspection ES6MissingAwait,JSIgnoredPromiseFromCall\n\nimport React, {useEffect, useRef, useState} from 'react';\nimport ReactFlow, {addEdge, Controls, Edge, FlowElement} from 'react-flow-renderer';\nimport LogicNode from './nodes/LogicNode'\nimport StageNode from './nodes/StageNode'\n\nimport './css/dnd.css';\nimport {useNavigate, useParams} from \"react-router-dom\";\nimport useHelpers from \"../../utils/hooks/UseHelpers\";\nimport useAxios from \"../../services/api/useAxios\";\nimport {Grid} from \"@mui/material\";\nimport Sidebar from \"./sidebar/Sidebar\";\n\n\nconst Graph = () => {\n    const reactFlowWrapper = useRef(null);\n    const {getStageNodes, getLogicNodes} = useAxios();\n    const {parseId, addConnections, createNode, removeElements, updateNode} = useHelpers();\n    const {campaignId, chainId} = useParams();\n    const [reactFlowInstance, setReactFlowInstance] = useState(null);\n    const [elements, setElements] = useState<FlowElement[]>([]);\n    const navigate = useNavigate();\n\n    const parsedCampaignId: number = parseId(campaignId);\n    const parsedChainId: number = parseId(chainId);\n    const extraEdgeOptions = {style: {strokeWidth: 3}, arrowHeadType: \"arrow\"}\n\n    // <------ UseEffect Part ------>\n    useEffect(() => {\n        Promise.all([getStageNodes(parsedCampaignId, parsedChainId), getLogicNodes(parsedCampaignId, parsedChainId)])\n            .then((results) => {\n                const stageNodes = results[0];\n                const logicNodes = results[1];\n\n                // Add types to nodes\n                stageNodes.forEach((node: any) => node.type = \"STAGE\")\n                logicNodes.forEach((node: any) => node.type = \"LOGIC\")\n\n                // Construct nodes and save to state\n                const allNodes = [...stageNodes, ...logicNodes]\n                const nodes: FlowElement[] = allNodes.map((node: any) => (\n                        {\n                            id: node.id.toString(),\n                            position: {x: parseFloat(node.x_pos), y: parseFloat(node.y_pos)},\n                            data: {label: node.name},\n                            type: node.type\n                        }\n                    )\n                )\n                setElements(nodes)\n                return allNodes\n            })\n            .then(allNodes => {\n                // Construct edges and save to state\n                allNodes.forEach(stage => {\n                    if (stage.in_stages.length > 0) {\n                        stage.in_stages.forEach((sourceId: string | number) => {\n                            const edge = {\n                                source: sourceId.toString(),\n                                target: stage.id.toString(),\n                                id: `${sourceId}-${stage.id}`,\n                                ...extraEdgeOptions\n                            } as Edge\n                            setElements((els) => addEdge(edge, els))\n                        })\n                    }\n                })\n            })\n    }, [parsedChainId])\n\n\n    // <------ Frameworks Functions Part ------>\n\n    const onConnect = async (params: object) => {\n        const newParams: any = {...params, ...extraEdgeOptions}\n        const target = parseInt(newParams.target)\n        const source = parseInt(newParams.source)\n\n        setElements((els: FlowElement[]) => addEdge(newParams, els))\n        addConnections(target, source, elements)\n    }\n\n    const onElementsRemove = (elementsToRemove: FlowElement[]) => {\n        setElements((els) => removeElements(elementsToRemove, els));\n    }\n\n    const onLoad = (_reactFlowInstance: any) =>\n        setReactFlowInstance(_reactFlowInstance);\n\n    const onDragOver = (event: any) => {\n        event.preventDefault();\n        event.dataTransfer.dropEffect = 'move';\n    };\n\n    const onDrop = async (event: any) => {\n        event.preventDefault();\n\n        // @ts-ignore\n        const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\n        // Get new node data from sidebar\n        const transfer = event.dataTransfer.getData('application/reactflow');\n        // @ts-ignore\n        const position = reactFlowInstance.project({\n            x: event.clientX - reactFlowBounds.left,\n            y: event.clientY - reactFlowBounds.top,\n        });\n\n        const parsedData = JSON.parse(transfer)\n        const label = parsedData.label\n        const type = parsedData.type\n\n        if (label === \"\") {\n            return 0;\n        }\n\n        const id = await createNode({type, position, label}, parsedChainId)\n\n        let newNode = {\n            id,\n            type,\n            position,\n            data: {label},\n        };\n\n        setElements((es) => [...es, newNode]);\n    };\n\n    const onNodeDragStop = (event: any, node: any) => {\n        updateNode(node)\n    }\n\n    const onElementDoubleClick = (event: any, element: any) => {\n        console.log(element)\n        if (element.id) {\n            if (element.type === 'LOGIC') {\n                navigate(`createlogic/${element.id}`)\n            }\n            if (element.type === 'STAGE') {\n                navigate(`createstage/${element.id}`)\n            }\n        }\n    }\n\n    // Init custom node types\n    const nodeTypes = {\n        LOGIC: LogicNode,\n        STAGE: StageNode\n    };\n\n\n    return (\n        <Grid container>\n            <Grid item md={10} zIndex={1}>\n                <ReactFlow\n                    ref={reactFlowWrapper}\n                    nodeTypes={nodeTypes}\n                    elements={elements}\n                    onConnect={onConnect}\n                    onElementsRemove={onElementsRemove}\n                    onNodeDoubleClick={onElementDoubleClick}\n                    onEdgeDoubleClick={onElementDoubleClick}\n                    onLoad={onLoad}\n                    onDrop={onDrop}\n                    onDragOver={onDragOver}\n                    onNodeDragStop={onNodeDragStop}\n                    preventScrolling={true}\n                    style={{\n                        width: '94vw',\n                        height: '90vh'\n                    }}\n                >\n                    <Controls/>\n                </ReactFlow>\n            </Grid>\n            <Grid item md={2} zIndex={2} height={200} sx={{background: \"white\"}}>\n                <Sidebar/>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default Graph;","import React, {Component} from 'react';\nimport {Box, IconButton, Stack, Tooltip} from \"@mui/material\";\nimport {ViewModeProps} from \"../StageBuilder.types\";\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport {styled} from \"@mui/material/styles\";\n\ntype Props = {\n    mode: ViewModeProps,\n    allModes: { [mode: string]: { title: string, icon: Component } },\n    onChange: (mode: ViewModeProps) => void,\n    onBack: () => void\n};\n\nconst GoBackButton = styled(IconButton)(({theme}) => ({\n    color: theme.palette.primary.contrastText,\n    backgroundColor: theme.palette.primary.main,\n    '&:hover': {\n        backgroundColor: theme.palette.primary.dark,\n    },\n}));\n\nconst Controls = (props: Props) => {\n    const {mode, allModes, onChange, onBack} = props;\n\n    const renderButtons = () => {\n        const types = Object.keys(allModes);\n        return types.map((type: any) => {\n            const fill = mode === type ? \"primary\" : \"default\";\n            const title = allModes[type].title;\n            const icon = allModes[type].icon;\n            return (\n                <Box key={type}>\n                    <Tooltip title={title}>\n                        <IconButton color={fill} onClick={() => onChange(type as ViewModeProps)}>\n                            {icon}\n                        </IconButton>\n                    </Tooltip>\n                </Box>\n            );\n        });\n    };\n\n    return (\n        <Box display={\"flex\"} justifyContent={\"flex-end\"} sx={{position: \"sticky\", top: 60}} p={1} zIndex={1}>\n            <Box flex={1}>\n                <Tooltip title={\"Назад\"}>\n                    <GoBackButton onClick={onBack}>\n                        {<ArrowBackIcon fontSize={\"large\"}/>}\n                    </GoBackButton>\n                </Tooltip>\n            </Box>\n            <Stack direction=\"row\" spacing={1}>\n                {renderButtons()}\n            </Stack>\n        </Box>\n    );\n};\n\nexport default Controls","import React from \"react\";\n\nimport {WidgetProps} from \"@rjsf/core\";\n\nconst AudioWidget = ({\n                         id,\n                         schema,\n                         options,\n                         value,\n                         required,\n                         disabled,\n                         readonly,\n                         label,\n                         onChange,\n                         onBlur,\n                         onFocus,\n                     }: WidgetProps) => {\n\n    const _onChange = ({\n                           target: {value},\n                       }: React.ChangeEvent<HTMLInputElement>) =>\n        onChange(schema.type == \"boolean\" ? value !== \"false\" : value);\n    const _onBlur = ({target: {value}}: React.FocusEvent<HTMLInputElement>) =>\n        onBlur(id, value);\n    const _onFocus = ({\n                          target: {value},\n                      }: React.FocusEvent<HTMLInputElement>) => onFocus(id, value);\n\n\n    return (\n        <p>Здесь будет аудио</p>\n    );\n};\n\nexport default AudioWidget;","import React from \"react\";\n\nimport Form from \"react-bootstrap/Form\";\n\nimport { WidgetProps } from \"@rjsf/core\";\n\nconst TextWidget = ({\n  id,\n  placeholder,\n  required,\n  readonly,\n  disabled,\n  label,\n  value,\n  onChange,\n  onBlur,\n  onFocus,\n  autofocus,\n  options,\n  schema,\n  rawErrors = [],\n\n}: WidgetProps) => {\n  const _onChange = ({\n    target: { value },\n  }: React.ChangeEvent<HTMLInputElement>) =>\n    onChange(value === \"\" ? options.emptyValue : value);\n  const _onBlur = ({ target: { value } }: React.FocusEvent<HTMLInputElement>) =>\n    onBlur(id, value);\n  const _onFocus = ({\n    target: { value },\n  }: React.FocusEvent<HTMLInputElement>) => onFocus(id, value);\n  const inputType = (schema.type) === 'string' ?  'text' : `${schema.type}`\n    \n  return (\n    <Form.Group className=\"mb-0\">\n      <Form.Label className={rawErrors.length > 0 ? \"text-danger\" : \"\"}>\n        {label || schema.title}\n        {(label || schema.title) && required ? \"*\" : null}\n      </Form.Label>\n      <Form.Control\n        id={id}\n        placeholder={placeholder}\n        autoFocus={autofocus}\n        required={required}\n        disabled={disabled}\n        readOnly={readonly}\n        className={rawErrors.length > 0 ? \"is-invalid\" : \"\"}\n        list={schema.examples ? `examples_${id}` : undefined}\n        type={inputType}\n        value={value || value === 0 ? value : \"\"}\n        onChange={_onChange}\n        onBlur={_onBlur}\n        onFocus={_onFocus}\n\n      />\n      {schema.examples ? (\n        <datalist id={`examples_${id}`}>\n          {(schema.examples as string[])\n            .concat(schema.default ? ([schema.default] as string[]) : [])\n            .map((example: any) => {\n              return <option key={example} value={example} />;\n            })}\n        </datalist>\n      ) : null}\n    </Form.Group>\n  );\n};\n\nexport default TextWidget;","import React from \"react\";\n\nimport Form from \"react-bootstrap/Form\";\n\nimport {WidgetProps} from \"@rjsf/core\";\n\nconst CustomLinkWidget = ({required, label, value, schema, rawErrors = []}: WidgetProps) => {\n    return (\n        value ? <Form.Group className=\"mb-0\">\n                <Form.Label className={rawErrors.length > 0 ? \"text-danger\" : \"\"}>\n                    {label || schema.title}\n                    {(label || schema.title) && required ? \"*\" : null}\n                </Form.Label>\n                <br/>\n                <a href={value}>{value}</a>\n            </Form.Group>\n            : null\n    );\n};\n\nexport default CustomLinkWidget;","import React from \"react\";\n\nimport Form from \"react-bootstrap/Form\";\n\nimport { WidgetProps } from \"@rjsf/core\";\n\nconst RadioWidget = ({\n  id,\n  schema,\n  options,\n  value,\n  required,\n  disabled,\n  readonly,\n  label,\n  onChange,\n  onBlur,\n  onFocus,\n}: WidgetProps) => {\n  const { enumOptions, enumDisabled } = options;\n\n  const _onChange = ({\n    target: { value },\n  }: React.ChangeEvent<HTMLInputElement>) =>\n    onChange(schema.type == \"boolean\" ? value !== \"false\" : value);\n  const _onBlur = ({ target: { value } }: React.FocusEvent<HTMLInputElement>) =>\n    onBlur(id, value);\n  const _onFocus = ({\n    target: { value },\n  }: React.FocusEvent<HTMLInputElement>) => onFocus(id, value);\n\n  const inline = Boolean(options && options.inline);\n\n  return (\n    <Form.Group className=\"mb-0\">\n      <Form.Label className=\"d-block\">\n        {label || schema.title}\n        {(label || schema.title) && required ? \"*\" : null}\n      </Form.Label>\n      {(enumOptions as any).map((option: any, i: number) => {\n        const itemDisabled =\n          Array.isArray(enumDisabled) &&\n          enumDisabled.indexOf(option.value) !== -1;\n        const checked = option.value == value;\n\n        const radio = (\n          <Form.Check\n            inline={inline}\n            label={option.label}\n            id={`${id}_${option.label}`}\n            key={i}\n            name={id}\n            type=\"radio\"\n            disabled={disabled || itemDisabled || readonly}\n            checked={checked}\n            required={required}\n            value={option.value}\n            onChange={_onChange}\n            onBlur={_onBlur}\n            onFocus={_onFocus}\n          />\n        );\n        return radio;\n      })}\n    </Form.Group>\n  );\n};\n\nexport default RadioWidget;","import React from \"react\";\n\nimport Form from \"react-bootstrap/Form\";\n\nimport {FieldProps} from \"@rjsf/core\";\nimport {Box, Button, Typography} from \"@mui/material\";\n\nconst Counter = ({required, label, formData, schema, onChange, rawErrors = []}: FieldProps) => {\n\n    const _onChange = (action: \"add\" | \"remove\") => {\n        const _value = Array.isArray(formData) ? formData : [];\n        if (action === \"add\") {\n            const newValue = [..._value, new Date().toISOString()];\n            onChange(newValue);\n        } else if (action === \"remove\") {\n            const newValue = [..._value];\n            newValue.pop();\n            onChange(newValue);\n        }\n    }\n\n    return (\n        <Form.Group className=\"mb-0\">\n            <Form.Label className={rawErrors.length > 0 ? \"text-danger\" : \"\"}>\n                {label || schema.title}\n                {(label || schema.title) && required ? \"*\" : null}\n            </Form.Label>\n            <br/>\n            <Box display={\"flex\"} height={80} >\n                <Typography variant={\"h2\"} pr={1}>{Array.isArray(formData) ? formData.length : 0}</Typography>\n                <Button fullWidth variant={\"contained\"} onClick={() => _onChange(\"add\")}>+</Button>\n                <Button variant={\"contained\"} color={\"warning\"} onClick={() => _onChange(\"remove\")}>-</Button>\n            </Box>\n        </Form.Group>\n    );\n};\n\nexport default Counter;","import React from 'react';\nimport {AudioWidget, AutoCompleteWidget, LinkWidget, RadioWidget, CounterWidget} from \"./custom-widgets\";\nimport JsonForm from \"@rjsf/bootstrap-4\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\ntype Props = {\n    schema: object,\n    uiSchema?: object,\n    formData?: any,\n    onChange?: (formData: object) => void,\n    onSubmit?: (formData: object) => void,\n    hideButton?: boolean\n};\n\nconst Form = (props: Props) => {\n    const {schema, uiSchema, formData, hideButton, onChange, onSubmit} = props;\n\n    const widgets = {\n        customfile: AudioWidget,\n        autocomplete: AutoCompleteWidget,\n        RadioWidget: RadioWidget,\n        customlink: LinkWidget,\n        audio: AudioWidget\n    };\n\n    const fields = {\n        counter: CounterWidget\n    }\n\n    const handleChange = (e: { formData: object }) => {\n        if (onChange) {\n            onChange(e.formData)\n        } else {\n            return 0\n        }\n    }\n\n    const handleSubmit = (e: {formData: object}) => {\n        if (onSubmit) {\n            onSubmit(e.formData)\n        } else {\n            return 0\n        }\n    }\n\n    return (\n        <JsonForm\n            schema={schema}\n            uiSchema={uiSchema}\n            formData={formData}\n            widgets={widgets}\n            fields={fields}\n            onChange={handleChange}\n            onSubmit={handleSubmit}\n        >\n            {hideButton ? \" \" :\n                <button type=\"submit\" className=\"btn btn-primary\">Отправить</button>}\n        </JsonForm>\n    );\n};\n\nexport default Form","import React from 'react'\n// @ts-ignore\nimport {Input} from 'reactstrap';\n\ntype Parameters = {\n    name: string,\n    path: string,\n    definitionData: any,\n    definitionUi: any,\n    category: string,\n    'ui:options': { private: boolean, default: string, readonly: boolean }\n    \"ui:readonly\": boolean,\n};\n\nconst CustomAudioField = ({\n                             parameters,\n                             onChange,\n                         }: { parameters: Parameters, onChange: (newParams: Parameters) => void, }) => (\n    <div>\n        <div style={{display: \"flex\", justifyContent: \"center\", alignItems: \"baseline\", padding: \"0 10px\"}}>\n            <h5 style={{padding: \"0 5px\"}}>Private Upload</h5>\n            <input\n                checked={parameters['ui:options']?.private}\n                type=\"checkbox\"\n                onChange={(ev: React.ChangeEvent<any>) =>\n                    onChange({...parameters, \"ui:options\": {...parameters['ui:options'], private: ev.target.checked}})\n                }\n                className='card-text'\n            />\n            <h5 style={{padding: \"0 5px\"}}>Read only</h5>\n            <input\n                checked={parameters['ui:options']?.readonly}\n                type=\"checkbox\"\n                onChange={(ev: React.ChangeEvent<any>) =>\n                    onChange({...parameters, \"ui:options\": {...parameters['ui:options'], readonly: ev.target.checked}})\n                }\n                className='card-text'\n            />\n        </div>\n        <h5>Default Audio (Link)</h5>\n        <Input\n            value={parameters['ui:options']?.default ?? \"\"}\n            placeholder='Default'\n            type='text'\n            onChange={(ev: React.ChangeEvent<any>) =>\n                onChange({...parameters, \"ui:options\": {...parameters['ui:options'], default: ev.target.value}})\n            }\n            className='card-text'\n        />\n    </div>\n);\n\nconst AudioType = {\n    audio: {\n        displayName: \"Audio\",\n        matchIf: [\n            {\n                types: [\"string\"],\n                widget: \"audio\"\n            },\n        ],\n        possibleOptions: ['private', 'default', 'readonly'],\n        defaultDataSchema: {},\n        defaultUiSchema: {\n            \"ui:widget\": \"audio\",\n            \"ui:options\": {private: false, default: \"\"}\n        },\n        type: \"string\",\n        cardBody: CustomAudioField,\n        // modalBody: (parameters: any, onChange: any) => <div>\n        //     Extra editing options in modal appear hear\n        // </div>,\n    }\n};\n\nexport default AudioType","import React from 'react'\n// @ts-ignore\nimport {Input} from 'reactstrap';\n\ntype Parameters = {\n    name: string,\n    path: string,\n    definitionData: any,\n    definitionUi: any,\n    category: string,\n    'ui:options': { webhook: string, params: string, searchField: string, responseField: string }\n};\n\ntype CustomFieldProps = { parameters: Parameters, onChange: (newParams: Parameters) => void }\n\nconst CustomAutoCompleteField = ({parameters, onChange}: CustomFieldProps) => (\n    <React.Fragment>\n        <h5>Webhook</h5>\n        <Input\n            value={parameters['ui:options']?.webhook}\n            placeholder='Webhook'\n            type={'text'}\n            onChange={(ev: React.ChangeEvent<any>) =>\n                onChange({...parameters, \"ui:options\": {...parameters['ui:options'], webhook: ev.target.value}})\n            }\n            className='card-text'\n        />\n        <br/>\n        <h5>Params</h5>\n        <Input\n            value={parameters['ui:options']?.params}\n            placeholder='Params'\n            type={'text'}\n            onChange={(ev: React.ChangeEvent<any>) =>\n                onChange({...parameters, \"ui:options\": {...parameters['ui:options'], params: ev.target.value}})\n            }\n            className='card-text'\n        />\n        <br/>\n        <div style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}}>\n            <div style={{width: '100%', paddingRight: 7}}>\n                <h5>Search Field</h5>\n                <Input\n                    value={parameters['ui:options']?.searchField}\n                    placeholder='Search Field'\n                    type={'text'}\n                    onChange={(ev: React.ChangeEvent<any>) =>\n                        onChange({...parameters, \"ui:options\": {...parameters['ui:options'], searchField: ev.target.value}})\n                    }\n                    className='card-text'\n                />\n            </div>\n            <div style={{width: '100%', paddingLeft: 7}}>\n                <h5>Response Field</h5>\n                <Input\n                    value={parameters['ui:options']?.responseField}\n                    placeholder='Response Field'\n                    type={'text'}\n                    onChange={(ev: React.ChangeEvent<any>) =>\n                        onChange({...parameters, \"ui:options\": {...parameters['ui:options'], responseField: ev.target.value}})\n                    }\n                    className='card-text'\n                />\n            </div>\n        </div>\n    </React.Fragment>\n);\n\n\nconst CustomAutoCompleteType = {\n    autocomplete: {\n        displayName: \"AutoComplete\",\n        matchIf: [\n            {\n                types: [\"string\"],\n                widget: \"autocomplete\"\n            },\n        ],\n        possibleOptions: ['webhook', 'params', 'searchField', 'responseField'],\n        defaultDataSchema: {},\n        defaultUiSchema: {\n            \"ui:widget\": \"autocomplete\",\n            \"ui:options\": {webhook: '', params: '', searchField: '', responseField: ''}\n        },\n        type: \"string\",\n        cardBody: CustomAutoCompleteField,\n        // modalBody: (parameters: any, onChange: any) => <div>\n        //     Extra editing options in modal appear hear\n        // </div>,\n    }\n};\n\nexport default CustomAutoCompleteType","import React from 'react'\n\ntype Parameters = {\n    name: string,\n    path: string,\n    definitionData: any,\n    definitionUi: any,\n    category: string,\n    'ui:options': { private: boolean, multiple: boolean }\n};\n\nconst CustomFileField = ({\n                             parameters,\n                             onChange,\n                         }: { parameters: Parameters, onChange: (newParams: Parameters) => void, }) => (\n    <div style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}}>\n        <div style={{display: \"flex\", alignItems: \"baseline\", padding: \"0 10px\"}}>\n            <h5 style={{padding: \"0 5px\"}}>Private Upload</h5>\n            <input\n                checked={parameters['ui:options']?.private}\n                type=\"checkbox\"\n                onChange={(ev: React.ChangeEvent<any>) =>\n                    onChange({...parameters, \"ui:options\": {...parameters['ui:options'], private: ev.target.checked}})\n                }\n                className='card-text'\n            />\n        </div>\n        <div style={{display: \"flex\", alignItems: \"baseline\", padding: \"0 10px\"}}>\n            <h5 style={{padding: \"0 5px\"}}>Multiple Files</h5>\n            <input\n                checked={parameters['ui:options']?.multiple}\n                type=\"checkbox\"\n                onChange={(ev: React.ChangeEvent<any>) =>\n                    onChange({...parameters, \"ui:options\": {...parameters['ui:options'], multiple: ev.target.checked}})\n                }\n                className='card-text'\n            />\n        </div>\n    </div>\n);\n\nconst CustomFileType = {\n    file: {\n        displayName: \"File\",\n        matchIf: [\n            {\n                types: [\"string\"],\n                widget: \"customfile\"\n            },\n        ],\n        possibleOptions: ['private', 'multiple'],\n        defaultDataSchema: {},\n        defaultUiSchema: {\n            \"ui:widget\": \"customfile\",\n            \"ui:options\": {private: false, multiple: false}\n        },\n        type: \"string\",\n        cardBody: CustomFileField,\n        // modalBody: (parameters: any, onChange: any) => <div>\n        //     Extra editing options in modal appear hear\n        // </div>,\n    }\n};\n\nexport default CustomFileType","import React from 'react'\n// @ts-ignore\nimport {Input} from 'reactstrap';\n\ntype Parameters = {\n    name: string,\n    path: string,\n    definitionData: any,\n    definitionUi: any,\n    category: string,\n    default: string\n};\n\ntype CustomFieldProps = { parameters: Parameters, onChange: (newParams: Parameters) => void }\n\nconst CustomLinkField = ({parameters, onChange}: CustomFieldProps) => (\n    <React.Fragment>\n        <h5>Default value</h5>\n        <Input\n            value={parameters.default ?? \"\"}\n            placeholder='Default'\n            type='text'\n            onChange={(ev: React.ChangeEvent<any>) =>\n                onChange({...parameters, default: ev.target.value})\n            }\n            className='card-text'\n        />\n    </React.Fragment>\n);\n\n\nconst CustomLinkType = {\n    link: {\n        displayName: \"Link\",\n        matchIf: [\n            {\n                types: [\"string\"],\n                widget: \"customlink\"\n            },\n        ],\n        defaultDataSchema: {},\n        defaultUiSchema: {\n            \"ui:widget\": \"customlink\"\n        },\n        type: \"string\",\n        cardBody: CustomLinkField\n    }\n};\n\nexport default CustomLinkType","const CounterType = {\n    counter: {\n        displayName: \"Counter\",\n        matchIf: [\n            {\n                types: [\"array\"],\n                field: \"counter\"\n            },\n        ],\n        defaultDataSchema: {\n            items: {\n                type: \"string\",\n                format: \"date-time\"\n            }\n        },\n        defaultUiSchema: {\n            \"ui:field\": \"counter\"\n        },\n        type: \"array\",\n    }\n};\n\nexport default CounterType","import React from 'react';\nimport { Input } from 'reactstrap';\n\n\ntype Parameters = {\n    name: string,\n    path: string,\n    definitionData: any,\n    definitionUi: any,\n    category: string,\n    minLength: number,\n    maxLength: number,\n    pattern: string,\n    default: string,\n    'ui:autofocus': boolean,\n    'ui:options': { rows: number }\n};\n\n// specify the inputs required for a string type object\nfunction CardLongAnswerParameterInputs({\n    parameters,\n    onChange,\n}: {\n    parameters: Parameters,\n    onChange: (newParams: Parameters) => void,\n}) {\n    return (\n        <div>\n            <h4>Minimum Length</h4>\n            <Input\n                value={parameters.minLength ? parameters.minLength : ''}\n                placeholder='Minimum Length'\n                key='minLength'\n                type='number'\n                onChange={(ev: React.ChangeEvent<HTMLInputElement>) => {\n                    onChange({\n                        ...parameters,\n                        minLength: parseInt(ev.target.value, 10),\n                    });\n                }}\n                className='card-modal-number'\n            />\n            <h4>Maximum Length</h4>\n            <Input\n                value={parameters.maxLength ? parameters.maxLength : ''}\n                placeholder='Maximum Length'\n                key='maxLength'\n                type='number'\n                onChange={(ev: React.ChangeEvent<HTMLInputElement>) => {\n                    onChange({\n                        ...parameters,\n                        maxLength: parseInt(ev.target.value, 10),\n                    });\n                }}\n                className='card-modal-number'\n            />\n            <h4>Rows</h4>\n            <Input\n                value={parameters[\"ui:options\"]?.rows ?? 0}\n                placeholder='Rows'\n                key='rows'\n                type='number'\n                onChange={(ev: React.ChangeEvent<HTMLInputElement>) => {\n                    onChange({\n                        ...parameters,\n                        \"ui:options\": {rows: parseInt(ev.target.value, 10)},\n                    });\n                }}\n                className='card-modal-number'\n            />\n            <h4>\n                Regular Expression Pattern{' '}\n                <a href='https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions' />\n            </h4>\n            <Input\n                value={parameters.pattern ? parameters.pattern : ''}\n                placeholder='Regular Expression Pattern'\n                key='pattern'\n                type='text'\n                onChange={(ev: React.ChangeEvent<HTMLInputElement>) => {\n                    onChange({\n                        ...parameters,\n                        pattern: ev.target.value,\n                    });\n                }}\n                className='card-modal-text'\n            />\n            <div className='card-modal-boolean'>\n                <p>Auto Focus</p>\n                <input\n                    type={\"checkbox\"}\n                    onChange={() => {\n                        onChange({\n                            ...parameters,\n                            'ui:autofocus': parameters['ui:autofocus']\n                                ? parameters['ui:autofocus'] !== true\n                                : true,\n                        });\n                    }}\n                    checked={\n                        parameters['ui:autofocus']\n                            ? parameters['ui:autofocus'] === true\n                            : false\n                    }\n                />\n            </div>\n        </div>\n    );\n}\n\nfunction LongAnswer({\n    parameters,\n    onChange,\n}: {\n    parameters: Parameters,\n    onChange: (newParams: Parameters) => void,\n}) {\n    return (\n        <React.Fragment>\n            <h5>Default value</h5>\n            <Input\n                value={parameters.default}\n                placeholder='Default'\n                type='textarea'\n                onChange={(ev: React.ChangeEvent<HTMLInputElement>) =>\n                    onChange({ ...parameters, default: ev.target.value })\n                }\n                className='card-textarea'\n            />\n        </React.Fragment>\n    );\n}\n\nconst longAnswerInput = {\n    longAnswer: {\n        displayName: 'Long Answer',\n        matchIf: [\n            {\n                types: ['string'],\n                widget: 'textarea',\n            },\n        ],\n        possibleOptions: ['rows'],\n        defaultDataSchema: {},\n        defaultUiSchema: {\n            'ui:widget': 'textarea',\n        },\n        type: 'string',\n        cardBody: LongAnswer,\n        modalBody: CardLongAnswerParameterInputs,\n    },\n};\n\nexport default longAnswerInput;","const CardType = {\n    card: {\n        displayName: \"Card\",\n        matchIf: [\n            {\n                types: [\"object\"],\n                widget: \"card\"\n            },\n        ],\n        defaultDataSchema: {\n            subtype: \"card\"\n        },\n        defaultUiSchema: {},\n        type: \"object\",\n    }\n};\n\nexport default CardType","const ReaderType = {\n    reader: {\n        displayName: \"Reader\",\n        matchIf: [\n            {\n                types: [\"array\"],\n                widget: \"reader\"\n            },\n        ],\n        defaultDataSchema: {\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"word\": { \"default\": \"Some word\", \"type\": \"string\", \"readOnly\": true },\n                    \"translation\": { \"default\": \"Какое-то слово\", \"type\": \"string\", \"readOnly\": true },\n                    \"count\": {\n                        \"title\": \"Кол-во нажатий\",\n                        \"default\": 0,\n                        \"type\": \"integer\",\n                        \"readOnly\": true\n                    },\n                    \"active\": { \"title\": \"Активен\", \"type\": \"boolean\" }\n                }\n            }\n        },\n        defaultUiSchema: {\n            \"ui:widget\": \"reader\"\n        },\n        type: \"array\",\n    }\n};\n\nexport default ReaderType","import React from 'react';\nimport {Editor} from \"@tinymce/tinymce-react\";\nimport \"./Editor.css\"\n\ntype Props = {\n    data: string,\n    onChange: (data: string) => void,\n};\n\nconst TextEditor = (props: Props) => {\n    const {data, onChange} = props;\n\n    const handleChange = (d: string) => {\n        onChange(d);\n    }\n\n    return (\n        <Editor\n            id={\"EditorTinyMCE\"}\n            onEditorChange={(newValue, editor) => handleChange(newValue)}\n            value={data}\n            tinymceScriptSrc={process.env.PUBLIC_URL + '/tinymce/tinymce.min.js'}\n            init={{\n                plugins: 'autosave save print preview paste importcss searchreplace autolink directionality code visualblocks visualchars fullscreen image link media template codesample table charmap hr pagebreak nonbreaking anchor toc insertdatetime advlist lists wordcount imagetools textpattern noneditable help charmap emoticons autoresize',\n                menubar: 'file edit view insert format tools table help',\n                toolbar: 'undo redo | bold italic underline strikethrough | fontselect fontsizeselect formatselect | alignleft aligncenter alignright alignjustify | outdent indent |  numlist bullist | forecolor backcolor removeformat | pagebreak | charmap emoticons | fullscreen  preview save print | insertfile image media link anchor codesample | ltr rtl',\n                toolbar_sticky: true,\n                image_advtab: true,\n                importcss_append: true,\n                image_caption: true,\n                noneditable_noneditable_class: 'mceNonEditable',\n                toolbar_mode: 'sliding',\n                contextmenu: 'link image imagetools table',\n                autosave_prefix: 'tinymce-autosave-{path}{query}-',\n                content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }'\n            }}\n        />\n    );\n};\n\nexport default TextEditor","import React from 'react';\nimport { Input } from 'reactstrap';\nimport TextEditor from '../../text-editor/TextEditor';\n\n\ntype Parameters = {\n    name: string,\n    path: string,\n    definitionData: any,\n    definitionUi: any,\n    category: string,\n    minLength: number,\n    maxLength: number,\n    pattern: string,\n    default: string,\n    'ui:options': { readonly: boolean }\n};\n\nfunction RichTextInput({\n    parameters,\n    onChange,\n}: {\n    parameters: Parameters,\n    onChange: (newParams: Parameters) => void,\n}) {\n    return (\n        <React.Fragment>\n            <h5>Read only</h5>\n            <Input type='checkbox' checked={parameters[\"ui:options\"]?.readonly ?? false} onChange={(ev: React.ChangeEvent<HTMLInputElement>) => {\n                    onChange({\n                        ...parameters,\n                        \"ui:options\": {readonly: ev.target.checked},\n                    });\n                }}/>\n            <h5>Default value</h5>\n            <TextEditor data={parameters.default} onChange={(data: string) =>\n                onChange({ ...parameters, default: data })\n            } />\n        </React.Fragment>\n    );\n}\n\nconst RichText = {\n    editor: {\n        displayName: 'Editor',\n        matchIf: [\n            {\n                types: ['string'],\n                widget: 'editor',\n            },\n        ],\n        possibleOptions: ['readonly'],\n        defaultDataSchema: {},\n        defaultUiSchema: {\n            'ui:widget': 'editor',\n        },\n        type: 'string',\n        cardBody: RichTextInput,\n    },\n};\n\nexport default RichText;","import AudioType from \"./AudioType\";\nimport AutoCompleteType from \"./AutoCompleteType\";\nimport CustomFileType from \"./CustomFileType\";\nimport CustomLinkType from \"./CustomLinkType\";\nimport CounterType from \"./CounterType\"\nimport CustomLongAnswerType from './CustomLongAnswerType'\nimport CardType from \"./CardType\";\nimport ReaderType from \"./ReaderType\";\nimport RichText from \"./RichTextType\";\n\nexport {\n    AudioType,\n    AutoCompleteType,\n    CustomFileType,\n    CustomLinkType,\n    CounterType,\n    CustomLongAnswerType,\n    CardType,\n    ReaderType,\n    RichText,\n}\n\nexport default {\n    ...AudioType,\n    ...AutoCompleteType,\n    ...CustomFileType,\n    ...CustomLinkType,\n    ...CounterType,\n    ...CustomLongAnswerType,\n    ...CardType,\n    ...ReaderType,\n    ...RichText,\n}","import React from 'react';\nimport Types from \"./custom-fields\";\n// @ts-ignore\nimport {FormBuilder as DefaultFormBuilder} from '@ginkgo-bioworks/react-json-schema-form-builder';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\ntype Props = {\n    schema: string,\n    uiSchema: string,\n    onChange: (schema: string, ui: string) => void\n};\n\nconst FormBuilder = (props: Props) => {\n    const {schema, uiSchema, onChange} = props;\n\n    const customFormInputs = Types;\n\n    const handleChange = (schema: string, ui: string) => {\n        onChange(schema, ui)\n    }\n\n    return (\n        <DefaultFormBuilder\n            schema={schema}\n            uischema={uiSchema}\n            onChange={handleChange}\n            mods={{customFormInputs}}\n        />\n    );\n};\n\nexport default FormBuilder","import React from 'react';\nimport Box, {BoxProps} from \"@mui/material/Box\";\nimport {styled} from \"@mui/material/styles\";\n\nconst BuilderLayout = styled(Box)<BoxProps>(() => ({\n    width: '70%',\n    minWidth: '400px',\n    margin: '0 auto'\n}));\n\nexport default BuilderLayout","import React from 'react';\nimport Form from \"../../../../components/form/Form\"\nimport StageOptionsSchema from '../StageOptionsSchema.json'\nimport {Box} from \"@mui/material\";\nimport FormBuilder from \"../../../../components/form-builder/FormBuilder\";\nimport BuilderLayout from \"../../../../components/layout/common-layouts/BuilderLayout\";\n\ntype Props = {\n    schema: string,\n    uiSchema: string,\n    formData: any,\n    onSchemaChange: (schema: string, ui: string) => void,\n    onFormDataChange: (formData: any) => void\n};\n\nconst Builder = (props: Props) => {\n    const {\n        schema,\n        uiSchema,\n        formData,\n        onSchemaChange,\n        onFormDataChange\n    } = props;\n\n    const optionsSchema: any = {...StageOptionsSchema};\n    // const inStages = formData[\"in_stages\"];\n    // if (inStages) {\n    //     optionsSchema[\"properties\"][\"displayed_prev_stages\"][\"items\"][\"enum\"] = inStages;\n    //     optionsSchema[\"properties\"][\"displayed_prev_stages\"][\"description\"] = \"\";\n    // } else {\n    //     optionsSchema[\"properties\"][\"displayed_prev_stages\"][\"description\"] = \"Нет доступных вариантов.\";\n    // }\n\n\n    return (\n        <Box p={1}>\n                <FormBuilder\n                    schema={schema}\n                    uiSchema={uiSchema}\n                    onChange={onSchemaChange}\n                />\n            <BuilderLayout>\n                <Form\n                    schema={optionsSchema}\n                    uiSchema={{\n                        displayed_prev_stages: {\n                            \"ui:widget\": \"checkboxes\"\n                        }\n                    }}\n                    formData={formData}\n                    onChange={onFormDataChange}\n                    hideButton={true}\n                />\n            </BuilderLayout>\n        </Box>\n    );\n};\n\nexport default Builder","import React from 'react';\nimport {Editor} from \"@tinymce/tinymce-react\";\n\ntype Props = {\n    data: string\n};\n\nconst TextViewer = (props: Props) => {\n    const {data} = props;\n\n    return (\n        <Editor\n            id={\"ViewerTinyMCE\"}\n            value={data}\n            toolbar={false}\n            inline={false}\n            disabled={true}\n            tinymceScriptSrc={process.env.PUBLIC_URL + '/tinymce/tinymce.min.js'}\n            init={{\n                plugins: 'autoresize',\n                menubar: false,\n                image_advtab: true,\n                importcss_append: true,\n            }}\n        />\n    );\n};\n\nexport default TextViewer","import React from 'react';\nimport {Box} from \"@mui/material\";\nimport TextViewer from \"../../../../components/text-editor/TextViewer\";\nimport Form from \"../../../../components/form/Form\";\nimport BuilderLayout from \"../../../../components/layout/common-layouts/BuilderLayout\";\n\ntype Props = {\n    schema: object,\n    uiSchema: object,\n    text?: string\n};\n\nconst Preview = (props: Props) => {\n    const {schema, uiSchema, text} = props;\n    return (\n        <BuilderLayout>\n            {text && <TextViewer data={text}/>}\n            <Box py={1}>\n                <Form schema={schema} uiSchema={uiSchema}/>\n            </Box>\n        </BuilderLayout>\n    );\n};\n\nexport default Preview","import React from 'react';\nimport {Box, Button, FormControlLabel, FormGroup, Grid, Switch, TextField} from \"@mui/material\";\n\ntype Props = {\n    isEditable: boolean,\n    schema: string,\n    ui: string,\n    onSchemaChange: (schema: string) => void,\n    onUiChange: (ui: string) => void,\n    onIsEditableChange: () => void,\n    onSave: () => void,\n    onUndo: () => void,\n};\n\nconst SchemaEditor = (props: Props) => {\n    const {isEditable, schema, ui, onSchemaChange, onUiChange, onIsEditableChange, onSave, onUndo} = props;\n\n    let prettySchema = schema, prettyUi = ui;\n    try {\n        const parsedSchema = JSON.parse(schema);\n        prettySchema = JSON.stringify(parsedSchema, null, 2);\n\n        const parsedUi = JSON.parse(ui);\n        prettyUi = JSON.stringify(parsedUi, null, 2);\n    } catch (e) {\n        console.log(e)\n    }\n\n    const handleIsEditableChange = () => {\n        onIsEditableChange();\n    }\n\n    const handleSchemaChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        onSchemaChange(event.target.value);\n    }\n\n    const handleUiChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        onUiChange(event.target.value);\n    }\n\n    const handleSave = () => {\n        onSave();\n    }\n\n    const handleUndo = () => {\n        onUndo();\n    }\n\n    return (\n        <Box>\n            <Grid container alignItems={\"center\"}>\n                <FormGroup sx={{my: 1}}>\n                    <FormControlLabel\n                        control={<Switch\n                            checked={isEditable}\n                            onChange={handleIsEditableChange}\n                            name=\"edit\"\n                            inputProps={{'aria-label': 'edit'}}\n                        />}\n                        labelPlacement=\"start\"\n                        label=\"Редактировать\"/>\n                </FormGroup>\n                {isEditable &&\n                    <Button sx={{m: 1}} color={\"primary\"} variant={\"contained\"} onClick={handleSave}>Сохранить\n                        изменения</Button>\n                }\n                {isEditable &&\n                    <Button sx={{m: 1}} color={\"primary\"} variant={\"contained\"} onClick={handleUndo}>Отменить\n                        изменения</Button>\n                }\n            </Grid>\n            <Grid container>\n                <Grid item xs={12} md={6} p={1}>\n                    <TextField\n                        label=\"Schema\"\n                        multiline\n                        fullWidth\n                        variant=\"outlined\"\n                        InputProps={{\n                            readOnly: !isEditable,\n                        }}\n                        value={prettySchema}\n                        onChange={handleSchemaChange}\n                        style={{marginTop: 15, marginBottom: 15}}\n                    />\n                </Grid>\n                <Grid item xs={12} md={6} p={1}>\n                    <TextField\n                        label=\"Ui\"\n                        multiline\n                        fullWidth\n                        variant=\"outlined\"\n                        InputProps={{\n                            readOnly: !isEditable,\n                        }}\n                        value={prettyUi}\n                        onChange={handleUiChange}\n                        style={{marginTop: 15, marginBottom: 30}}\n                    />\n                </Grid>\n            </Grid>\n        </Box>\n    );\n};\n\nexport default SchemaEditor","import React, {useEffect, useState} from 'react';\nimport useAxios from \"../../../../services/api/useAxios\";\nimport Form from \"../../../../components/form/Form\";\n\ntype Props = {\n    id: number,\n};\n\nconst Plugin = (props: Props) => {\n    const {id} = props;\n    const {getTaskStageOptions} = useAxios();\n\n    const [schema, setSchema] = useState({});\n\n    const getOptions = async () => {\n        const options = await getTaskStageOptions();\n        if (options) {\n            return options.actions.POST;\n        } else {\n            return undefined;\n        }\n    }\n\n    const transformOptionsToForm = (options: any) => {\n        const DEFAULT_FORM_TYPES = [\"string\", \"number\", \"integer\", \"boolean\", \"null\"];\n\n\n        const keys = options ? Object.keys(options) : []\n        const properties: any = {}\n        const required: any[] = []\n\n        keys.forEach(key => {\n            const {type, label, help_text, required: req} = options[key]\n            if (DEFAULT_FORM_TYPES.includes(type)) {\n                properties[key] = {\n                    type: type,\n                    title: label,\n                    description: help_text\n                }\n                if (req) {\n                    required.push(key)\n                }\n            } else if (type === \"decimal\") {\n                properties[key] = {\n                    type: \"number\",\n                    title: label,\n                    description: help_text\n                }\n                if (req) {\n                    required.push(key)\n                }\n            }\n        })\n\n        const template = {\n            type: \"object\",\n            properties: properties,\n            required: required\n        }\n        console.log(template)\n        return template\n    }\n\n    useEffect(() => {\n        const getData = async () => {\n            const options = await getOptions();\n            const schema = transformOptionsToForm(options);\n            setSchema(schema)\n        }\n        if (id) {\n            getData();\n        }\n    }, [id])\n\n    return (\n        <div>\n            <Form schema={schema}/>\n        </div>\n    );\n};\n\nexport default Plugin","import React from 'react';\nimport ExpandableCard from \"../../../../components/card/ExpandableCard\";\nimport Plugin from \"./Plugin\";\nimport {Grid} from \"@mui/material\";\nimport BuilderLayout from \"../../../../components/layout/common-layouts/BuilderLayout\";\n\n\ntype Props = {};\n\nconst Plugins = (props: Props) => {\n    const {} = props;\n    const pluginsList = [1, 2];\n\n    return (\n        <BuilderLayout>\n            <Grid container py={2} spacing={2}>\n                {pluginsList.map((p, index) =>\n                    <Grid item xs={12} key={index}>\n                        <ExpandableCard data={{name: p}} hideOpenButton={true}>\n                            <Plugin id={p}/>\n                        </ExpandableCard>\n                    </Grid>\n                )}\n            </Grid>\n        </BuilderLayout>\n    );\n};\n\nexport default Plugins","import React from 'react';\nimport TextEditor from \"../../../../components/text-editor/TextEditor\";\nimport BuilderLayout from \"../../../../components/layout/common-layouts/BuilderLayout\";\n\ntype Props = {\n    data: string,\n    onChange: (data: string) => void,\n};\n\nconst Text = (props: Props) => {\n    const {data, onChange} = props;\n    return (\n        <BuilderLayout>\n            <TextEditor data={data} onChange={onChange}/>\n        </BuilderLayout>\n    );\n};\n\nexport default Text","import React, {useEffect, useState} from \"react\";\nimport {Alert as MuiAlert, AlertProps, Snackbar} from \"@mui/material\";\n\ninterface ToastContextType {\n    open: boolean;\n    openToast: (title: string, variant?: ToastVariants) => void;\n    closeToast: (event?: React.SyntheticEvent | Event, reason?: string) => void;\n}\n\ntype ToastVariants = \"success\" | \"error\" | \"warning\" | \"info\";\n\nexport const ToastContext = React.createContext<ToastContextType>(null!);\n\nconst Alert = React.forwardRef<HTMLDivElement, AlertProps>(function Alert(\n    props,\n    ref,\n) {\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\nconst ToastProvider = ({children}: { children: React.ReactNode }) => {\n    const [open, setOpen] = useState(false);\n    const [title, setTitle] = useState<any>(\"\");\n    const [variant, setVariant] = useState<ToastVariants>(\"error\")\n\n    const stringify = (value: any) => {\n        switch (typeof value) {\n            case 'string':\n                return value;\n            case 'object':\n                return JSON.stringify(value);\n            default:\n                return String(value);\n        }\n    };\n\n    const openToast = (title: string, variant?: ToastVariants) => {\n        if (variant) {\n            setVariant(variant)\n        }\n        setTitle(stringify(title))\n        setOpen(true);\n    };\n\n    const closeToast = (event?: React.SyntheticEvent | Event, reason?: string) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        setOpen(false);\n    };\n\n    const value = {open, openToast, closeToast};\n\n    return <ToastContext.Provider value={value}>\n        <Snackbar open={open} autoHideDuration={5000} onClose={closeToast}\n                  anchorOrigin={{\n                      vertical: 'top',\n                      horizontal: 'center',\n                  }}\n        >\n            <Alert onClose={closeToast} severity={variant} sx={{width: '100%'}}>\n                {title}\n            </Alert>\n        </Snackbar>\n        {children}\n    </ToastContext.Provider>;\n};\n\nexport default ToastProvider","import React from \"react\";\nimport {ToastContext} from \"../ToastProvider\";\n\nexport const useToast = () => React.useContext(ToastContext);","import type {Blocker, History, Transition} from 'history';\nimport {ContextType, useCallback, useContext, useEffect} from 'react';\nimport {Navigator as BaseNavigator, UNSAFE_NavigationContext as NavigationContext} from 'react-router-dom';\n\ninterface Navigator extends BaseNavigator {\n    block: History['block'];\n}\n\ntype NavigationContextWithBlock = ContextType<typeof NavigationContext> & { navigator: Navigator };\n\n/**\n * @source https://github.com/remix-run/react-router/commit/256cad70d3fd4500b1abcfea66f3ee622fb90874\n */\nexport function useBlocker(blocker: Blocker, when = true) {\n    const {navigator} = useContext(NavigationContext) as NavigationContextWithBlock;\n\n    useEffect(() => {\n        if (!when) {\n            return;\n        }\n\n        const unblock = navigator.block((tx: Transition) => {\n            const autoUnblockingTx = {\n                ...tx,\n                retry() {\n                    unblock();\n                    setTimeout(() => tx.retry(), 100);\n                },\n            };\n\n            blocker(autoUnblockingTx);\n        });\n\n        return unblock;\n    }, [navigator, blocker, when]);\n}\n\n/**\n * @source https://github.com/remix-run/react-router/issues/8139#issuecomment-1021457943\n */\nexport function usePrompt(message: string | ((\n    location: Transition['location'],\n    action: Transition['action'],\n) => string), when = true) {\n    const blocker = useCallback((tx: Transition) => {\n        let response;\n        if (typeof message === 'function') {\n            response = message(tx.location, tx.action);\n            if (typeof response === 'string') {\n                response = window.confirm(response);\n            }\n        } else {\n            response = window.confirm(message);\n        }\n        if (response) {\n            tx.retry();\n        }\n    }, [message]);\n    return useBlocker(blocker, when);\n}","import React from 'react';\nimport Form from \"../../../../components/form/Form\"\nimport StageOptionsSchema from '../StageOptionsSchema.json'\nimport { Box, Button } from \"@mui/material\";\nimport FormBuilder from \"../../../../components/form-builder/FormBuilder\";\nimport BuilderLayout from \"../../../../components/layout/common-layouts/BuilderLayout\";\n\ntype Props = {\n    schema: string,\n    uiSchema: string,\n    onSchemaChange: (schema: string, ui: string) => void,\n    onUseMainSchema: () => void,\n};\n\nconst CardDataBuilder = (props: Props) => {\n    const {\n        schema,\n        uiSchema,\n        onSchemaChange,\n        onUseMainSchema,\n    } = props;\n\n    return (\n        <Box p={1}>\n            <Box display={\"flex\"} justifyContent={\"center\"}>\n                <Button variant={\"contained\"} onClick={onUseMainSchema}>Использовать главную схему</Button>\n            </Box>\n            <FormBuilder\n                schema={schema}\n                uiSchema={uiSchema}\n                onChange={onSchemaChange}\n            />\n        </Box>\n    );\n};\n\nexport default CardDataBuilder","import React, { useCallback, useEffect, useState } from 'react';\nimport useAxios from \"../../../services/api/useAxios\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport useHelpers from \"../../../utils/hooks/UseHelpers\";\nimport { ViewModeProps } from \"./StageBuilder.types\";\nimport Controls from \"./controls/Controls\";\nimport Builder from \"./builder/Builder\";\nimport { Box, Button } from \"@mui/material\";\nimport Preview from \"./preview/Preview\";\nimport SchemaEditor from \"./schema-editor/SchemaEditor\";\nimport Plugins from \"./plugins/Plugins\";\nimport BuilderLayout from \"../../../components/layout/common-layouts/BuilderLayout\";\nimport Text from \"./text/Text\";\nimport { useToast } from \"../../../context/toast/hooks/useToast\";\nimport BuildIcon from \"@mui/icons-material/Build\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\nimport CompareArrowsIcon from \"@mui/icons-material/CompareArrows\";\nimport debounce from 'lodash.debounce'\nimport { usePrompt } from '../../../components/prompt/Prompt';\nimport CardDataBuilder from './card-data/CardDataBuilder';\nimport ClosedCaptionIcon from '@mui/icons-material/ClosedCaption';\n\n\nconst StageBuilder = () => {\n    const { stageId } = useParams();\n    const navigate = useNavigate();\n    const { getTaskStage, saveTaskStage } = useAxios();\n    const { parseId } = useHelpers();\n    const parsedId = parseId(stageId);\n    const { openToast } = useToast();\n\n    const DEBOUNCE_SAVE_DELAY_MS = 2000;\n\n    const [schema, setSchema] = useState('');\n    const [uiSchema, setUiSchema] = useState('');\n    const [formData, setFormData] = useState<any>({});\n    const [viewMode, setViewMode] = useState<ViewModeProps>(\"builder\");\n    const [textEditorData, setTextEditorData] = useState(\"\");\n    const [isEditable, setEditable] = useState(false);\n    const [tmpSchema, setTmpSchema] = useState(\"\");\n    const [tmpUi, setTmpUi] = useState(\"\");\n    const [originalSchema, setOriginalSchema] = useState(\"\");\n    const [originalUi, setOriginalUi] = useState(\"\");\n    const [showPrompt, setShowPrompt] = useState(false);\n    const [cardSchema, setCardSchema] = useState('');\n    const [cardUi, setCardUi] = useState('');\n\n    usePrompt(\"Вы уверены, что хотите покинуть эту страницу?\", showPrompt);\n\n    const schemaJson = schema ? JSON.parse(schema) : {};\n    const uiJson = uiSchema ? JSON.parse(uiSchema) : {};\n\n    const VIEW_MODES: any = {\n        builder: { title: \"Конструктор\", icon: <BuildIcon fontSize={\"large\"} /> },\n        card: { title: \"Card Data\", icon: <ClosedCaptionIcon fontSize={\"large\"} /> },\n        // plugins: {title: \"Плагины\", icon: <ExtensionIcon fontSize={\"large\"}/>},\n        text: { title: \"Текст\", icon: <EditIcon fontSize={\"large\"} /> },\n        preview: { title: \"Превью\", icon: <VisibilityIcon fontSize={\"large\"} /> },\n        editor: { title: \"Схемы\", icon: <CompareArrowsIcon fontSize={\"large\"} /> },\n    }\n\n    useEffect(() => {\n        const getStage = async (parsedId: number) => {\n            const stage = await getTaskStage(parsedId);\n            const {\n                id,\n                json_schema,\n                ui_schema,\n                rich_text,\n                webhook_address,\n                webhook_params,\n                card_json_schema,\n                card_ui_schema,\n                ...options\n            } = stage;\n\n            options[\"webhook_address\"] = webhook_address ? webhook_address : undefined;\n            options[\"webhook_params\"] = webhook_params ? JSON.stringify(webhook_params) : undefined;\n\n            setSchema(json_schema);\n            setUiSchema(ui_schema);\n            setTmpSchema(json_schema);\n            setTmpUi(ui_schema);\n            setOriginalSchema(json_schema);\n            setOriginalUi(ui_schema);\n            setFormData(options);\n            setTextEditorData(rich_text);\n            setCardSchema(card_json_schema);\n            setCardUi(card_ui_schema)\n        }\n\n        if (parsedId) {\n            getStage(parsedId);\n        }\n    }, [parsedId])\n\n    const compileData = useCallback(() => {\n        const { chain, webhook_params, ...responses } = formData;\n        let parsed_webhook_params;\n        try {\n            parsed_webhook_params = JSON.parse(webhook_params);\n        } catch (e) {\n            parsed_webhook_params = null;\n        }\n\n        return {\n            ...responses,\n            json_schema: schema,\n            ui_schema: uiSchema,\n            rich_text: textEditorData,\n            card_json_schema: cardSchema,\n            card_ui_schema: cardUi,\n            webhook_params: parsed_webhook_params\n        };\n    }, [formData, schema, textEditorData, uiSchema, cardSchema, cardUi])\n\n    const saveData = (data: any) => {\n        return saveTaskStage(parsedId, data);\n    }\n\n    const debouncedSave = useCallback(debounce((data) => {\n        saveData(data)\n            .then(() => console.log(\"saved\"))\n            .catch(err => openToast(err.message, \"error\"));\n    }, DEBOUNCE_SAVE_DELAY_MS), [])\n\n    useEffect(() => {\n        // const data = compileData();\n        setShowPrompt(true);\n        // debouncedSave(data);\n    }, [formData, schema, uiSchema, textEditorData, debouncedSave, compileData])\n\n    const handleSubmit = () => {\n        const data = compileData();\n        saveData(data)\n            .then(() => openToast(\"Данные сохранены\", \"success\"))\n            .catch(err => openToast(err.message, \"error\"));\n        setShowPrompt(false);\n    }\n\n    const handleSchemaChange = (schema: string, ui: string) => {\n        setSchema(schema);\n        setUiSchema(ui);\n        setOriginalSchema(schema);\n        setOriginalUi(ui);\n        setTmpSchema(schema);\n        setTmpUi(ui);\n    }\n\n    const handleCardDataChange = (schema: string, ui: string) => {\n        setCardSchema(schema);\n        setCardUi(ui);\n    }\n\n    const handleFormDataChange = (formData: object) => {\n        setFormData(formData);\n    }\n\n    const handleTextChange = (d: string) => {\n        setTextEditorData(d);\n    }\n\n    const handleViewModeChange = (mode: ViewModeProps) => {\n        setViewMode(mode);\n    }\n\n    const handleIsEditableChange = () => {\n        setEditable(!isEditable);\n    }\n\n    const handleTmpSchemaChange = (schema: string) => {\n        setTmpSchema(schema);\n    }\n\n    const handleTmpUiChange = (ui: string) => {\n        setTmpUi(ui);\n    }\n\n    const handleTmpSave = () => {\n        setSchema(tmpSchema);\n        setUiSchema(tmpUi);\n    }\n\n    const handleTmpUndo = () => {\n        setSchema(originalSchema);\n        setUiSchema(originalUi);\n        setTmpSchema(originalSchema);\n        setTmpUi(originalUi);\n    }\n\n    const useMainSchemaInCardData = () => {\n        setCardSchema(schema);\n        setCardUi(uiSchema);\n    }\n\n    const renderContent = (mode: ViewModeProps) => {\n        switch (mode) {\n            case \"builder\":\n                return <Builder\n                    schema={schema}\n                    uiSchema={uiSchema}\n                    formData={formData}\n                    onSchemaChange={handleSchemaChange}\n                    onFormDataChange={handleFormDataChange}\n                />;\n            case \"plugins\":\n                return <Plugins />;\n            case \"text\":\n                return <Text data={textEditorData} onChange={handleTextChange} />;\n            case \"preview\":\n                return <Preview schema={schemaJson} uiSchema={uiJson} text={textEditorData} />;\n            case \"editor\":\n                return <SchemaEditor isEditable={isEditable} schema={tmpSchema} ui={tmpUi}\n                    onSchemaChange={handleTmpSchemaChange} onUiChange={handleTmpUiChange}\n                    onIsEditableChange={handleIsEditableChange} onSave={handleTmpSave}\n                    onUndo={handleTmpUndo} />\n            case \"card\":\n                return <CardDataBuilder\n                    schema={cardSchema}\n                    uiSchema={cardUi}\n                    onSchemaChange={handleCardDataChange}\n                    onUseMainSchema={useMainSchemaInCardData}\n                />\n        }\n    }\n\n    const goBack = () => {\n        navigate(-1);\n    }\n\n    return (\n        <Box>\n            <Controls allModes={VIEW_MODES} mode={viewMode} onChange={handleViewModeChange} onBack={goBack} />\n            {renderContent(viewMode)}\n            <BuilderLayout pb={3}>\n                <Button variant={\"contained\"} color={\"warning\"} fullWidth onClick={handleSubmit}>Сохранить</Button>\n            </BuilderLayout>\n        </Box>\n    );\n};\n\nexport default StageBuilder","import React, { useEffect, useState } from 'react';\nimport useAxios from \"../../../services/api/useAxios\";\nimport { useParams } from \"react-router-dom\";\nimport useHelpers from \"../../../utils/hooks/UseHelpers\";\nimport { Box, Checkbox, FormControlLabel } from \"@mui/material\";\nimport Form from \"../../../components/form/Form\";\nimport BuilderLayout from \"../../../components/layout/common-layouts/BuilderLayout\";\nimport { useToast } from \"../../../context/toast/hooks/useToast\";\n\nconst LogicBuilder = () => {\n    const { getConditionalStage, saveConditionalStage, getTaskStage } = useAxios();\n    const { stageId } = useParams();\n    const { parseId, getFormFields } = useHelpers();\n    const parsedId = parseId(stageId);\n    const { openToast } = useToast();\n\n    const [schema, setSchema] = useState({});\n    const [formData, setFormData] = useState({});\n    const [isPingPong, setPingPong] = useState(false);\n    const [connectedStages, setConnectedStages] = useState<any[]>();\n    const [ready, setReady] = useState(false)\n    const [fields, setFields] = useState<string[]>([]);\n\n\n    useEffect(() => {\n        getConditionalStage(parsedId).then(stage => {\n            setFormData(stage.conditions)\n            setPingPong(stage.pingpong)\n        })\n    }, [parsedId])\n\n    useEffect(() => {\n        const getStage = (stageId?: number) => {\n            if (stageId) {\n                const taskStage = getTaskStage(stageId);\n                if (taskStage) {\n                    return taskStage\n                } else {\n                    return getConditionalStage(stageId)\n                }\n            }\n            return getConditionalStage(parsedId)\n        }\n\n        const getConnectedStages = (ids: number[]) => {\n            return ids.map(async connId => {\n                let stage = await getStage(connId)\n                return { [connId]: stage }\n            })\n        }\n\n        const getData = async () => {\n            const currentStage = await getStage();\n\n            let connectedIds;\n            if (isPingPong) {\n                connectedIds = currentStage.out_stages;\n            } else {\n                connectedIds = currentStage.in_stages;\n            }\n            if (connectedIds) {\n                const connStages = await Promise.all(getConnectedStages(connectedIds));\n                if (Object.keys(connStages).length > 0) {\n                    setConnectedStages(connStages)\n                    setReady(true)\n                }\n            }\n        }\n\n        if (parsedId) {\n            getData()\n        }\n\n    }, [parsedId, isPingPong])\n\n    useEffect(() => {\n        const getDependentFields = (dep: any) => {\n            let data = null\n            if (dep.hasOwnProperty(\"oneOf\")) {\n                data = dep.oneOf\n            }\n            if (dep.hasOwnProperty(\"allOf\")) {\n                data = dep.allOf\n            }\n            if (data) {\n                return data.map((nested: any) => {\n                    // Create tmp schema for function to work\n                    const fictionalSchema = { type: \"object\", ...nested };\n                    return getFormFields(fictionalSchema)\n                }).flat()\n            }\n            return []\n        }\n\n        if (connectedStages && connectedStages.length > 0) {\n            const allFields = connectedStages.map(stageObject => {\n                let stage = Object.values(stageObject)[0] as any;\n                let stageSchema = stage.json_schema ? JSON.parse(stage.json_schema) : {};\n\n                // Get dependencies from stage's schema\n                let dependencies = {};\n                if (stageSchema && stageSchema.dependencies && Object.keys(stageSchema.dependencies).length > 0) {\n                    dependencies = stageSchema.dependencies\n                }\n\n                // Return fields from schema's properties and dependencies\n                const dependenciesValues = Object.values(dependencies);\n                const formFields = getFormFields(stageSchema);\n                let depFields = [];\n                if (dependenciesValues.length > 0) {\n                    depFields = dependenciesValues.map((dep: any) => getDependentFields(dep)).flat()\n                }\n                return Array.from(new Set([...formFields, ...depFields]))\n            }).flat()\n\n            setFields(allFields)\n        }\n    }, [connectedStages])\n\n    useEffect(() => {\n        console.log(\"fields\", fields)\n        setSchema({\n            items: {\n                type: 'object',\n                title: 'Logic',\n                properties: {\n                    field: {\n                        enum: fields,\n                        title: 'Field',\n                        type: 'string'\n                    },\n                    condition: {\n                        enum: [\n                            '==',\n                            '!=',\n                            '>',\n                            '<',\n                            '>=',\n                            '<=',\n                            'ARRAY-CONTAINS',\n                            'ARRAY-CONTAINS-NOT'\n                        ],\n                        title: 'Condition',\n                        type: 'string'\n                    },\n                    value: {\n                        title: 'Value',\n                        type: 'string'\n                    },\n                    type: {\n                        title: 'Type',\n                        enum: [\n                            \"boolean\",\n                            \"number\",\n                            \"integer\",\n                            \"string\",\n                        ],\n                        type: 'string'\n                    }\n                },\n                dependencies: {},\n                required: []\n            },\n            title: 'Logic Array',\n            type: 'array',\n            dependencies: {},\n            required: []\n        })\n    }, [fields])\n\n    const handleSubmit = () => {\n        let data = { conditions: formData, pingpong: isPingPong }\n\n        saveConditionalStage(parsedId, data)\n            .then((res: any) => openToast(\"Данные сохранены\", \"success\"));\n    }\n\n    const handleChangePingPong = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setPingPong(event.target.checked);\n    }\n\n    if (!ready) {\n        return <p>No node connection or end_ui detected. Connect to one or check if form has fields.</p>\n    }\n\n    return (\n        <BuilderLayout pb={3}>\n            <FormControlLabel\n                control={<Checkbox checked={isPingPong} onChange={handleChangePingPong} name=\"PingPong\"\n                    color=\"primary\" />}\n                label=\"Ping Pong\"\n            />\n            <Form\n                schema={schema}\n                formData={formData}\n                onChange={(formData) => setFormData(formData)}\n                onSubmit={handleSubmit} />\n        </BuilderLayout>\n    );\n};\n\nexport default LogicBuilder","import React from 'react';\nimport Form from \"../../../components/form/Form\";\nimport schema from './CreateChainSchema.json';\nimport ui from './CreateChainSchemaUi.json';\nimport BuilderLayout from \"../../../components/layout/common-layouts/BuilderLayout\";\nimport useAxios from \"../../../services/api/useAxios\";\nimport {useLocation, useNavigate, useParams} from \"react-router-dom\";\nimport useHelpers from \"../../../utils/hooks/UseHelpers\";\n\n\nconst CreateChain = () => {\n    const {createChain} = useAxios();\n    const navigate = useNavigate();\n    const location: any = useLocation();\n    const {campaignId} = useParams();\n    const {parseId} = useHelpers();\n\n\n    const parsedId = parseId(campaignId);\n    const from = location?.state?.from?.pathname || \"/\";\n\n    const handleSubmit = (formData: any) => {\n        console.log(formData)\n        if (campaignId) {\n            createChain({campaign: parsedId, ...formData})\n                .then(() => {\n                    navigate(from)\n                })\n        } else {\n            alert(\"Error: No campaign id\")\n        }\n    }\n\n    return (\n        <BuilderLayout py={2}>\n            <Form schema={schema} uiSchema={ui} onSubmit={handleSubmit}/>\n        </BuilderLayout>\n    );\n};\n\nexport default CreateChain","import React, {useEffect, useState} from 'react';\nimport useAxios from \"../../services/api/useAxios\";\nimport {useParams} from \"react-router-dom\";\nimport useHelpers from \"../../utils/hooks/UseHelpers\";\nimport Form from \"../../components/form/Form\";\nimport {Box} from \"@mui/material\";\nimport {useToast} from \"../../context/toast/hooks/useToast\";\n\n\nconst ResponseFlattener = () => {\n    const {getResponseFlattener, saveResponseFlattener} = useAxios();\n    const {openToast} = useToast()\n    const {id} = useParams();\n    const {parseId} = useHelpers();\n\n    const [data, setData] = useState();\n\n    const parsedId = parseId(id);\n\n    useEffect(() => {\n        getResponseFlattener(parsedId).then(res => {\n            console.log(res)\n            const {task_stage, ...rest} = res;\n            const parsedData = {task_stage: task_stage.id, ...rest};\n            setData(parsedData);\n        });\n    }, [parsedId])\n\n    const schema = {\n        \"title\": \"Response Flattener\",\n        \"type\": \"object\",\n        \"required\": [\n            \"task_stage\"\n        ],\n        \"properties\": {\n            \"task_stage\": {\n                \"type\": \"integer\",\n                \"title\": \"Task stage\"\n            },\n            \"copy_first_level\": {\n                \"type\": \"boolean\",\n                \"title\": \"Copy first level\"\n            },\n            \"flatten_all\": {\n                \"type\": \"boolean\",\n                \"title\": \"Flatten all\"\n            },\n            \"copy_system_fields\": {\n                \"type\": \"boolean\",\n                \"title\": \"Copy system fields\"\n            },\n            \"exclude_list\": {\n                \"type\": \"array\",\n                \"title\": \"Exclude list\",\n                \"items\": {\n                    \"type\": \"string\"\n                }\n            },\n            \"columns\": {\n                \"type\": \"array\",\n                \"title\": \"Columns\",\n                \"items\": {\n                    \"type\": \"string\"\n                }\n            }\n        }\n    }\n\n    const ui = {\n        \"exclude_list\": {\n            \"ui:widget\": \"textarea\"\n        },\n        \"columns\": {\n            \"ui:widget\": \"textarea\"\n        }\n    }\n\n    const handleChange = (formData: any) => {\n        console.log(formData)\n        setData(formData)\n    }\n\n    const handleSubmit = () => {\n        saveResponseFlattener(parsedId, data).then(() => openToast(\"Saved\", \"success\"));\n    }\n\n    return (\n        <Box p={2}>\n            <Form schema={schema} uiSchema={ui} formData={data} onChange={handleChange} onSubmit={handleSubmit}/>\n        </Box>\n    );\n};\n\nexport default ResponseFlattener","import React from 'react';\nimport {Button, IconButton, Stack} from \"@mui/material\";\nimport Card from \"@mui/material/Card\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport {baseUrl, tasksUrl} from \"../../services/api/Urls\";\n\ntype Props = {\n    id: number,\n    stage: any,\n    onDownloadClick: (id: number, stage: number) => void,\n    onSettingsClick: (id: number) => void\n};\n\nconst ResponseFlattenerCard = (props: Props) => {\n    const {id, stage, onDownloadClick, onSettingsClick} = props;\n\n    const handleDownloadClick = () => {\n        onDownloadClick(stage.id, id);\n    }\n\n    const handleSettingsClick = () => {\n        onSettingsClick(id);\n    }\n\n    console.log(id, stage)\n\n    return (\n        <Card sx={{width: '100%'}}>\n            <CardHeader\n                action={\n                    <Stack direction=\"row\" spacing={1}>\n                        <IconButton onClick={handleSettingsClick}><SettingsIcon/></IconButton>\n                        <Button key={\"open_button\"} variant={\"contained\"} onClick={handleDownloadClick}>Скачать</Button>\n                    </Stack>\n                }\n                title={`Stage: ${stage.name}`}\n                subheader={`ID: ${id}`}\n                titleTypographyProps={{variant: \"h6\"}}\n                subheaderTypographyProps={{variant: \"caption\"}}\n            />\n        </Card>\n    );\n};\n\nexport default ResponseFlattenerCard","import React, {useEffect, useState} from 'react';\nimport useAxios from \"../../services/api/useAxios\";\nimport {Box, Button, Grid} from \"@mui/material\";\nimport ResponseFlattenerCard from \"../../components/card/ResponseFlattenerCard\";\nimport {useNavigate, useParams} from \"react-router-dom\";\nimport {useToast} from \"../../context/toast/hooks/useToast\";\nimport useHelpers from \"../../utils/hooks/UseHelpers\";\n\n\nconst FlattenerList = () => {\n    const {getResponseFlattenerList, downloadFlattenedResponses} = useAxios();\n    const navigate = useNavigate();\n    const {openToast} = useToast();\n    const {campaignId} = useParams();\n\n    const {parseId} = useHelpers();\n    const parsedCampaignId = parseId(campaignId);\n\n    const [data, setData] = useState([]);\n\n    useEffect(() => {\n        getResponseFlattenerList(parsedCampaignId).then(res => {\n            setData(res);\n        });\n    }, [parsedCampaignId])\n\n    const handleDownload = (stage: number, flattener: number) => {\n        downloadFlattenedResponses(stage, flattener)\n            .catch(error => openToast(error.message));\n    }\n\n    const handleOpen = (id: number) => {\n        navigate(`${id}`);\n    }\n\n    const handleCreate = () => {\n        navigate('new')\n    }\n\n    return (\n        <Box px={3} py={1} width={\"100%\"}>\n            <Button variant={\"contained\"} onClick={handleCreate}>\n                Создать\n            </Button>\n            <Grid container py={2} spacing={2}>\n                {data.map((item: { task_stage: number, id: number }, index) =>\n                    <Grid item xs={12} key={index}>\n                        <ResponseFlattenerCard id={item.id} stage={item.task_stage} onDownloadClick={handleDownload}\n                                               onSettingsClick={handleOpen}/>\n                    </Grid>\n                )}\n            </Grid>\n        </Box>\n    );\n};\n\nexport default FlattenerList","import React, {useState} from 'react';\nimport useAxios from \"../../services/api/useAxios\";\nimport Form from \"../../components/form/Form\";\nimport {Box} from \"@mui/material\";\nimport {useToast} from \"../../context/toast/hooks/useToast\";\nimport {useNavigate} from \"react-router-dom\";\n\n\nconst CreateFlattener = () => {\n    const {createResponseFlattener} = useAxios();\n    const {openToast} = useToast();\n    const navigate = useNavigate();\n\n    const [data, setData] = useState({});\n\n    const schema = {\n        \"title\": \"Response Flattener\",\n        \"type\": \"object\",\n        \"required\": [\n            \"task_stage\"\n        ],\n        \"properties\": {\n            \"task_stage\": {\n                \"type\": \"integer\",\n                \"title\": \"Task stage\"\n            },\n            \"copy_first_level\": {\n                \"type\": \"boolean\",\n                \"title\": \"Copy first level\"\n            },\n            \"flatten_all\": {\n                \"type\": \"boolean\",\n                \"title\": \"Flatten all\"\n            },\n            \"copy_system_fields\": {\n                \"type\": \"boolean\",\n                \"title\": \"Copy system fields\"\n            },\n            \"exclude_list\": {\n                \"type\": \"string\",\n                \"title\": \"Exclude list\"\n            },\n            \"columns\": {\n                \"type\": \"string\",\n                \"title\": \"Columns\"\n            }\n        }\n    }\n\n    const ui = {\n        \"exclude_list\": {\n            \"ui:widget\": \"textarea\"\n        },\n        \"columns\": {\n            \"ui:widget\": \"textarea\"\n        }\n    }\n\n    const handleChange = (formData: any) => {\n        setData(formData)\n    }\n\n    const handleSubmit = () => {\n        createResponseFlattener(data)\n            .then(() => openToast(\"Saved\", \"success\"))\n            .then(() => navigate(-1));\n    }\n\n    return (\n        <Box p={2}>\n            <Form schema={schema} uiSchema={ui} formData={data} onChange={handleChange} onSubmit={handleSubmit}/>\n        </Box>\n    );\n};\n\nexport default CreateFlattener","import React from 'react';\nimport {HashRouter as Router, Route, Routes} from \"react-router-dom\";\nimport AuthProvider from \"./context/authentication/AuthProvider\";\nimport RequireAuth from \"./pages/login/RequireAuth\";\nimport {ROUTES} from \"./utils/constants/Paths\";\nimport Campaigns from \"./pages/campaigns/Campaigns\";\nimport Login from \"./pages/login/Login\";\nimport Layout from \"./components/layout/Layout\";\nimport Chains from \"./pages/chains/Chains\";\nimport Graph from \"./pages/graph/Graph\";\nimport StageBuilder from \"./pages/form-builders/stage-builder/StageBuilder\";\nimport LogicBuilder from \"./pages/form-builders/logic-builder/LogicBuilder\";\nimport CreateChain from \"./pages/chains/create-chain/CreateChain\";\nimport ToastProvider from \"./context/toast/ToastProvider\";\nimport ResponseFlattener from \"./pages/response-flattener/ResponseFlattener\";\nimport FlattenerList from \"./pages/response-flattener/FlattenerList\";\nimport CreateFlattener from \"./pages/response-flattener/CreateFlattener\";\n\n\nconst App = () => (\n    <AuthProvider>\n        <ToastProvider>\n            <Router>\n                <Routes>\n                    <Route path=\"/\" element={<RequireAuth><Layout/></RequireAuth>}>\n                        <Route path={\"campaign\"}>\n                            <Route path=\":campaignId\">\n                                <Route path=\"flattener\">\n                                    <Route path=\"new\" element={<CreateFlattener/>}/>\n                                    <Route path=\":id\" element={<ResponseFlattener/>}/>\n                                    <Route index element={<FlattenerList/>}/>\n                                </Route>\n                                <Route path=\"chain\">\n                                    <Route path=\":chainId\">\n                                        <Route path={\"createstage/:stageId\"} element={<StageBuilder/>}/>\n                                        <Route path={\"createlogic/:stageId\"} element={<LogicBuilder/>}/>\n                                        <Route index element={<Graph/>}/>\n                                    </Route>\n                                    <Route path=\"new\" element={<CreateChain/>}/>\n                                    <Route index element={<Chains/>}/>\n                                </Route>\n                            </Route>\n                            <Route index element={<Campaigns/>}/>\n                        </Route>\n                        <Route index element={<Campaigns/>}/>\n                    </Route>\n                    <Route path={ROUTES.login.path} element={<Login/>}/>\n                </Routes>\n            </Router>\n        </ToastProvider>\n    </AuthProvider>\n);\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
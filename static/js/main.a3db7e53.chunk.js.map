{"version":3,"sources":["util/Firebase.js","components/nodes/CustomNode.tsx","components/nodes/LogicNode.tsx","components/nodes/StageNode.tsx","components/sidebar/Sidebar.tsx","util/Axios.js","util/Urls.js","components/graph/Graph.tsx","components/custom-widgets/file-widget/CustomFileWidget.tsx","components/form-builders/PreviewStage.tsx","components/custom-widgets/file-widget/CustomFileType.tsx","components/form-builders/StageBuilder.tsx","components/form-builders/GetFormFields.js","components/form-builders/LogicBuilder.tsx","components/actions/Actions.tsx","components/task/Task.tsx","util/Auth.js","components/appbar/Appbar.tsx","components/chains/ChainCard.tsx","components/chains/Dialog.tsx","components/chains/Chains.tsx","components/campaigns/CampaignCard.tsx","components/campaigns/Dialog.tsx","components/campaigns/Campaigns.tsx","components/appbar/SimpleAppbar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","provider","auth","GoogleAuthProvider","firestore","settings","ignoreUndefinedProperties","signInWithGoogle","setCustomParameters","prompt","signInWithPopup","signOut","useStyles","makeStyles","theme","createStyles","root","background","borderColor","borderWidth","borderStyle","borderRadius","fontSize","width","textAlign","padding","CustomNode","data","style","classes","Grid","className","label","type","position","Position","Top","Bottom","customNodeStyles","CustomLogicNode","CustomStageNode","Sidebar","useState","draggable","setDraggable","formResponses","setFormResponses","useEffect","onDragStart","event","nodeLabel","nodeType","console","log","JSON","stringify","dataTransfer","setData","effectAllowed","onDragEnd","undefined","marginRight","schema","formData","onChange","e","color","display","justifyContent","alignItems","instance","axios","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","error","Promise","reject","campaignsUrl","chainsUrl","taskstagesUrl","conditionalstagesUrl","tasksUrl","DnDFlow","reactFlowWrapper","useRef","history","useHistory","useParams","chainId","campaignId","reactFlowInstance","setReactFlowInstance","elements","setElements","all","get","then","results","stageNodes","logicNodes","forEach","node","allNodes","filter","chain","nodes","map","id","toString","x","parseFloat","x_pos","y","y_pos","name","stage","in_stages","length","sourceId","edge","source","target","arrowHeadType","els","addEdge","getNode","pop","getTypeUrl","updateConnections","currentNodeId","method","a","url","res","out_stages","catch","err","connections","parsed","connection","ids","patch","onConnect","params","newParams","targetNode","sourceNode","removeConnections","onDrop","preventDefault","reactFlowBounds","current","getBoundingClientRect","transfer","getData","project","clientX","left","clientY","top","parsedData","parse","createNode","newNode","es","concat","updateNode","parseInt","post","onElementDoubleClick","element","location","pathname","push","nodeTypes","LOGIC","STAGE","ref","onElementsRemove","elementsToRemove","nodeIdsToRemove","n","edgeElement","includes","hasOwnProperty","delete","removeElements","onNodeDoubleClick","onEdgeDoubleClick","onLoad","_reactFlowInstance","onDragOver","dropEffect","onNodeDragStop","height","CustomFileWidget","props","files","setFiles","lFiles","multiple","allowMultipleFiles","file","i","filename","progress","Preview","jsonSchema","uiSchema","json_schema","ui_schema","stage_data","widgets","minWidth","margin","onSubmit","TextField","multiline","fullWidth","defaultValue","variant","InputProps","readOnly","value","marginTop","marginBottom","Button","onClick","navigator","clipboard","writeText","alert","CustomFileType","displayName","matchIf","types","widget","defaultDataSchema","defaultUiSchema","Builder","setSchema","setUiSchema","StageOptions","optionsSchema","preview","setPreview","options","parse_json_schema","parse_ui_schema","IconButton","float","p","PreviewStage","uischema","newSchema","newUiSchema","mods","customFormInputs","getFormFields","retrievedSchema","retrieveSchema","pathSchema","toPathSchema","getFieldNames","getAllPaths","_obj","acc","paths","Object","keys","key","newPaths","path","__rjsf_additionalProperties","$name","replace","formValue","_get","_isEmpty","fieldNames","ready","setReady","fields","setFields","logic_array","items","connectedStages","setConnectedStages","isPingPong","setIsPingPong","getStage","stageId","taskStage","getConnectedStages","connId","currentStage","conditions","connectedIds","connStages","stageObject","values","sc","GetFormFields","title","properties","field","enum","condition","dependencies","required","FormControlLabel","control","Checkbox","checked","is_ping_pong","formControl","spacing","selectEmpty","handleCreateTask","split","caseData","case","taskData","container","justify","component","item","task","responses","setFormData","AuthContext","React","createContext","AuthProvider","children","currentUser","setCurrentUser","onAuthStateChanged","user","getIdToken","idToken","setItem","onIdTokenChanged","Provider","drawerWidth","appBar","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","toolbar","mixins","content","flexGrow","select","selectIcon","fill","Appbar","useTheme","useContext","open","setOpen","campaign","setCampaign","allCampaigns","setAllCampaigns","CssBaseline","AppBar","clsx","Toolbar","aria-label","Typography","noWrap","FormControl","size","Select","autoWidth","labelId","disableUnderline","inputProps","icon","camp","MenuItem","Drawer","paper","direction","Divider","List","ListItem","button","page","ListItemIcon","ListItemText","primary","extra","ChainCard","description","Card","CardContent","gutterBottom","CardActions","avatar","backgroundColor","blue","AddChainDialog","onClose","onSave","setName","setDescription","handleClose","Dialog","aria-labelledby","DialogTitle","DialogContent","rows","DialogActions","parsedCampaign","chains","setChains","filtered","handleAddChain","window","reload","startIcon","AddCampaignDialog","campaigns","setCampaigns","handleCampaignAdd","App","exact","StageBuilder","LogicBuilder","Task","Actions","Chains","Graph","SimpleAppbar","Campaigns","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a3db7e53.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCXiwOUNsbzKH7sbSAZrqA9f7VOeCMdUOQ\",\r\n    authDomain: \"gigaturnip-b6b5b.firebaseapp.com\",\r\n    projectId: \"gigaturnip-b6b5b\",\r\n    storageBucket: \"gigaturnip-b6b5b.appspot.com\",\r\n    messagingSenderId: \"414429242328\",\r\n    appId: \"1:414429242328:web:a4685f5ac6895ea767c8ad\",\r\n    measurementId: \"G-Y8JTEJMTET\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n// const db = firebase.firestore();\r\n// if (window.location.hostname === \"localhost\") {\r\n//   db.useEmulator(\"localhost\", 8080);\r\n// }\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nfirebase.firestore().settings({\r\n    ignoreUndefinedProperties: true,\r\n})\r\nexport const signInWithGoogle = () => {\r\n    provider.setCustomParameters({\r\n        prompt: 'select_account'\r\n    });\r\n    firebase.auth().signInWithPopup(provider);\r\n};\r\n\r\nexport const signOut = () => {\r\n    firebase.auth().signOut()\r\n}\r\n\r\nexport default firebase;","import React from 'react';\r\nimport {Handle, Position} from 'react-flow-renderer';\r\nimport {createStyles, Grid, makeStyles, Theme} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            background: '#FFF',\r\n            borderColor: '#000',\r\n            borderWidth: '1px',\r\n            borderStyle: 'solid',\r\n            borderRadius: '3px',\r\n            fontSize: '12px',\r\n            width: '150px',\r\n            textAlign: 'center',\r\n            padding: 10\r\n        },\r\n    }));\r\n\r\ntype NodeProps = { data: {label: string}, style: object }\r\n\r\nconst CustomNode = ({data, style}: NodeProps) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid className={classes.root} style={style}>\r\n            <div>{data.label}</div>\r\n            <Handle\r\n                type=\"target\"\r\n                position={Position.Top}\r\n                style={{borderRadius: '100%'}}\r\n            />\r\n            <Handle\r\n                type=\"source\"\r\n                position={Position.Bottom}\r\n                style={{borderRadius: '100%'}}\r\n            />\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default CustomNode","import React from 'react';\r\nimport CustomNode from \"./CustomNode\";\r\n\r\nconst customNodeStyles = {\r\n  borderColor: '#0041d0'\r\n};\r\n\r\ntype NodeProps = { data: {label: string} }\r\n\r\nconst CustomLogicNode = ({ data }: NodeProps) => <CustomNode data={data} style={customNodeStyles} />;\r\n\r\nexport default CustomLogicNode","import React from 'react';\r\nimport CustomNode from \"./CustomNode\";\r\n\r\nconst customNodeStyles = {\r\n  borderColor: '#32CD32'\r\n};\r\n\r\ntype NodeProps = { data: {label: string} }\r\n\r\nconst CustomStageNode = ({ data }: NodeProps) => <CustomNode data={data} style={customNodeStyles} />;\r\n\r\nexport default CustomStageNode","import React, {useEffect, useState} from 'react';\r\nimport firebase from '../../util/Firebase'\r\nimport Form from \"@rjsf/bootstrap-4\";\r\nimport {JSONSchema7} from \"json-schema\";\r\n\r\nimport schema from '../../json-schema/SidebarSchema.json'\r\n\r\ntype FormResponsesProps = { label: string }\r\n\r\nconst Sidebar = () => {\r\n    const [draggable, setDraggable] = useState(false)\r\n    const [formResponses, setFormResponses] = useState<FormResponsesProps | undefined>()\r\n\r\n    useEffect(() => {\r\n\r\n        if (formResponses && formResponses.label && formResponses.label !== '') {\r\n            setDraggable(true)\r\n        } else {\r\n            setDraggable(false)\r\n        }\r\n    }, [formResponses])\r\n\r\n    const onDragStart = (event: { dataTransfer: DataTransfer }, nodeLabel: string, nodeType: string) => {\r\n        console.log(nodeLabel, nodeType)\r\n        let data = JSON.stringify({...formResponses, type: nodeType})\r\n        event.dataTransfer.setData('application/reactflow', data);\r\n        event.dataTransfer.effectAllowed = 'move';\r\n    };\r\n\r\n    const onDragEnd = () => {\r\n        setFormResponses(undefined)\r\n    }\r\n\r\n    return (\r\n        <aside>\r\n            <div className=\"description\">You can drag these nodes to the pane on the right.</div>\r\n            <div style={{marginRight: 5}}>\r\n                <Form schema={schema as JSONSchema7} formData={formResponses} onChange={(e) => setFormResponses(e.formData)}> </Form>\r\n            </div>\r\n            <div draggable={false} style={{\r\n                color: 'red',\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n                padding: 10\r\n            }}>{!draggable && 'Enter Label to drag the node'}</div>\r\n            <div className=\"dndnode stage\" onDragEnd={onDragEnd}\r\n                 onDragStart={(event) => onDragStart(event, formResponses ? formResponses.label : '', 'STAGE')} draggable={draggable}>\r\n                Stage Node\r\n            </div>\r\n            <div className=\"dndnode logic\" onDragEnd={onDragEnd}\r\n                 onDragStart={(event) => onDragStart(event, formResponses ? formResponses.label : '', 'LOGIC')} draggable={draggable}>\r\n                Logic Node\r\n            </div>\r\n        </aside>\r\n    );\r\n};\r\n\r\nexport default Sidebar","import axios from \"axios\";\r\nimport firebase from './Firebase'\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"http://127.0.0.1:8000\"\r\n});\r\n\r\ninstance.interceptors.request.use(\r\n    function (config) {\r\n        const token = localStorage.getItem(\"token\");\r\n        // const dbRequest = window.indexedDB.open(\"firebaseLocalStorageDb\");\r\n        // dbRequest.onsuccess = () => {\r\n        //     const db = dbRequest.result;\r\n        //     console.log(db)\r\n        //     const store = 'firebaseLocalStorage';\r\n        //     const tx = db.transaction(store);\r\n        //     console.log(tx)\r\n        //     const req = tx.objectStore(store).getAll();\r\n        //     req.onsuccess = () => {\r\n        //         console.log(req.result)\r\n        //         const currentSession = req.result.filter(se => se.value.authDomain === \"gigaturnip-b6b5b.firebaseapp.com\").pop()\r\n        //         console.log(currentSession)\r\n        //         const token = currentSession.value.stsTokenManager.accessToken\r\n        //         console.log(token)\r\n        //         if (token) {\r\n        //             config.headers[\"Authorization\"] = 'JWT ' + token;\r\n        //         }\r\n        //     };\r\n        // }\r\n\r\n        if (token) {\r\n            config.headers[\"Authorization\"] = 'JWT ' + token;\r\n        }\r\n        return config;\r\n    },\r\n    function (error) {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nexport default instance;","const baseUrl = \"http://127.0.0.1:8000/\"\r\nconst campaignsUrl = \"api/v1/campaigns/\"\r\nconst chainsUrl = \"api/v1/chains/\"\r\nconst taskstagesUrl = \"api/v1/taskstages/\"\r\nconst webhookstagesUrl = \"api/v1/webhookstages/\"\r\nconst conditionalstagesUrl = \"api/v1/conditionalstages/\"\r\nconst casesUrl = \"api/v1/cases/\"\r\nconst tasksUrl = \"api/v1/tasks/\"\r\n\r\nexport {\r\n    baseUrl,\r\n    campaignsUrl,\r\n    chainsUrl,\r\n    taskstagesUrl,\r\n    webhookstagesUrl,\r\n    conditionalstagesUrl,\r\n    casesUrl,\r\n    tasksUrl\r\n}","import React, {useEffect, useRef, useState} from 'react';\r\nimport ReactFlow, {addEdge, Controls, FlowElement, ReactFlowProvider, Edge} from 'react-flow-renderer';\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport firebase from '../../util/Firebase'\r\nimport CustomLogicNode from '../nodes/LogicNode'\r\nimport CustomStageNode from '../nodes/StageNode'\r\nimport Sidebar from '../sidebar/Sidebar';\r\n\r\nimport '../../dnd.css';\r\nimport axios from '../../util/Axios';\r\nimport {conditionalstagesUrl, taskstagesUrl} from '../../util/Urls'\r\n\r\ntype RouterParams = { chainId: string, campaignId: string }\r\n\r\nconst DnDFlow = () => {\r\n    const reactFlowWrapper = useRef(null);\r\n    const history = useHistory();\r\n    const {chainId, campaignId} = useParams<RouterParams>();\r\n\r\n    const [reactFlowInstance, setReactFlowInstance] = useState(null);\r\n    const [elements, setElements] = useState<FlowElement[]>([]);\r\n\r\n    useEffect(() => {\r\n        const getStageNodes = () => {\r\n            return axios.get(taskstagesUrl)\r\n        };\r\n\r\n        const getLogicNodes = () => {\r\n            return axios.get(conditionalstagesUrl)\r\n        };\r\n\r\n        Promise.all([getStageNodes(), getLogicNodes()])\r\n            .then((results) => {\r\n                const stageNodes = results[0].data;\r\n                const logicNodes = results[1].data;\r\n                stageNodes.forEach((node: any) => node.type = \"STAGE\")\r\n                logicNodes.forEach((node: any) => node.type = \"LOGIC\")\r\n                const allNodes = [...stageNodes, ...logicNodes].filter((node: any) => node.chain == chainId)\r\n                const nodes: FlowElement[] = allNodes.map((node: any) => (\r\n                        {\r\n                            id: node.id.toString(),\r\n                            position: {x: parseFloat(node.x_pos), y: parseFloat(node.y_pos)},\r\n                            data: {label: node.name},\r\n                            type: node.type\r\n                        }\r\n                    )\r\n                )\r\n                setElements(nodes)\r\n                return allNodes\r\n            })\r\n            .then(allNodes => {\r\n                allNodes.forEach(stage => {\r\n                    if (stage.in_stages.length > 0) {\r\n                        stage.in_stages.forEach((sourceId: string | number) => {\r\n                            const edge = {\r\n                                source: sourceId.toString(),\r\n                                target: stage.id.toString(),\r\n                                id: `${sourceId}-${stage.id}`,\r\n                                arrowHeadType: \"arrow\"\r\n                            } as Edge\r\n                            setElements((els) => addEdge(edge, els))\r\n                        })\r\n                    }\r\n                })\r\n            })\r\n    }, [])\r\n\r\n    const getNode = (id: string | number) => {\r\n        return elements.filter(node => node.id == id).pop()\r\n    }\r\n\r\n    const getTypeUrl = (node: FlowElement) => {\r\n        if (node.type == \"STAGE\") {\r\n            return taskstagesUrl\r\n        }\r\n        if (node.type == \"LOGIC\") {\r\n            return conditionalstagesUrl\r\n        }\r\n        return undefined\r\n    }\r\n\r\n    const updateConnections = async (node: FlowElement, currentNodeId: string | number, type: \"in\" | \"out\", method: \"create\" | \"delete\") => {\r\n        const url = getTypeUrl(node)\r\n        if (url) {\r\n            const connections = await axios.get(url + node.id + '/').then(res => {\r\n                if (type === 'in') {\r\n                    return res.data.in_stages\r\n                }\r\n                if (type === 'out') {\r\n                    return res.data.out_stages\r\n                }\r\n                return undefined;\r\n            }).catch(err => undefined);\r\n\r\n            if (connections) {\r\n                let parsed = connections.map((connection: string | number) => connection.toString())\r\n\r\n                let ids = []\r\n                if (method === 'create') {\r\n                    ids = [currentNodeId, ...parsed]\r\n                }\r\n                if (method === 'delete') {\r\n                    ids = parsed.filter((connection: string) => connection !== currentNodeId)\r\n                }\r\n\r\n                let data = undefined\r\n                if (type === 'in') {\r\n                    data = {in_stages: ids}\r\n                }\r\n                if (type === 'out') {\r\n                    data = {out_stages: ids}\r\n                }\r\n\r\n                if (data) {\r\n                    console.log(data)\r\n                    axios.patch(url + node.id + '/', data)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const onConnect = async (params: object) => {\r\n        const newParams: any = {...params, arrowHeadType: 'arrow'}\r\n        const targetNode = getNode(newParams.target)\r\n        const sourceNode = getNode(newParams.source)\r\n        const target = newParams.target\r\n        const source = newParams.source\r\n\r\n        setElements((els: FlowElement[]) => addEdge(newParams, els))\r\n\r\n        if (targetNode) {\r\n            updateConnections(targetNode, source, 'in', 'create')\r\n        }\r\n\r\n        if (sourceNode) {\r\n            updateConnections(sourceNode, target, 'out', 'create')\r\n        }\r\n    }\r\n\r\n    const removeConnections = async (target: string, source: string) => {\r\n        const targetNode = getNode(target)\r\n        const sourceNode = getNode(source)\r\n\r\n        if (targetNode) {\r\n            updateConnections(targetNode, source, 'in', 'delete')\r\n        }\r\n\r\n        if (sourceNode) {\r\n            updateConnections(sourceNode, target, 'out', 'delete')\r\n        }\r\n    }\r\n\r\n    const removeElements = (elementsToRemove: FlowElement[], elements: FlowElement[]) => {\r\n        let nodeIdsToRemove = elementsToRemove.map((n: any) => {\r\n            return n.id;\r\n        });\r\n\r\n        return elements.filter((element: any) => {\r\n            let edgeElement = element;\r\n            if (nodeIdsToRemove.includes(element.id) || nodeIdsToRemove.includes(edgeElement.target) || nodeIdsToRemove.includes(edgeElement.source)) {\r\n                if (element.hasOwnProperty('source') && element.hasOwnProperty('target')) {\r\n                    let target = element.target\r\n                    let source = element.source\r\n\r\n                    removeConnections(target, source)\r\n\r\n                } else {\r\n                    const url = getTypeUrl(element)\r\n                    if (url) {\r\n                        axios.delete(url + element.id + '/')\r\n                    }\r\n                }\r\n                return false\r\n            } else {\r\n                return true\r\n            }\r\n        });\r\n    };\r\n\r\n    const onElementsRemove = (elementsToRemove: FlowElement[]) => {\r\n        setElements((els) => removeElements(elementsToRemove, els));\r\n    }\r\n\r\n    const onLoad = (_reactFlowInstance: any) =>\r\n        setReactFlowInstance(_reactFlowInstance);\r\n\r\n    const onDragOver = (event: any) => {\r\n        event.preventDefault();\r\n        event.dataTransfer.dropEffect = 'move';\r\n    };\r\n\r\n    const onDrop = async (event: any) => {\r\n        event.preventDefault();\r\n\r\n        // @ts-ignore\r\n        const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\r\n        const transfer = event.dataTransfer.getData('application/reactflow');\r\n        // @ts-ignore\r\n        const position = reactFlowInstance.project({\r\n            x: event.clientX - reactFlowBounds.left,\r\n            y: event.clientY - reactFlowBounds.top,\r\n        });\r\n\r\n        const parsedData = JSON.parse(transfer)\r\n        const label = parsedData.label\r\n        const type = parsedData.type\r\n\r\n        const id = await createNode({type, position, label})\r\n\r\n        let newNode = {\r\n            id,\r\n            type,\r\n            position,\r\n            data: {label},\r\n        };\r\n\r\n        setElements((es) => es.concat(newNode));\r\n    };\r\n\r\n    const onNodeDragStop = (event: any, node: any) => {\r\n        updateNode(node)\r\n    }\r\n\r\n    const updateNodeInFirebase = (node: any) => {\r\n        firebase.firestore().collection('flow').doc(node.id).set(node, {merge: true})\r\n    }\r\n\r\n    const updateNode = (node: any) => {\r\n        let x_pos = node.position.x\r\n        let y_pos = node.position.y\r\n        let data = {x_pos, y_pos}\r\n        const url = getTypeUrl(node)\r\n        if (url) {\r\n            axios.patch(url + node.id + '/', data)\r\n        }\r\n    }\r\n\r\n    const createNode = async (node: any) => {\r\n        let data = {\r\n            name: node.label,\r\n            x_pos: node.position.x,\r\n            y_pos: node.position.y,\r\n            chain: parseInt(chainId),\r\n            out_stages: []\r\n        }\r\n\r\n        const url = getTypeUrl(node)\r\n        if (url) {\r\n            let res = await axios.post(url, data)\r\n            return res.data.id.toString()\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    const onElementDoubleClick = (event: any, element: any) => {\r\n        console.log(element)\r\n        let location = history.location.pathname\r\n        if (element.id) {\r\n            if (element.type === 'LOGIC') {\r\n                history.push(`${location}/createlogic/${element.id}`)\r\n            }\r\n            if (element.type === 'STAGE') {\r\n                // history.push('/createStage/' + element.id)\r\n                history.push(`${location}/actions/${element.id}`)\r\n            }\r\n            if (element.type === 'default' && (element.target || element.source)) {\r\n                console.log('edge')\r\n            }\r\n        }\r\n    }\r\n\r\n    const nodeTypes = {\r\n        LOGIC: CustomLogicNode,\r\n        STAGE: CustomStageNode\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"dndflow\">\r\n            <ReactFlowProvider>\r\n                <div className=\"reactflow-wrapper\" ref={reactFlowWrapper}>\r\n                    <ReactFlow\r\n                        nodeTypes={nodeTypes}\r\n                        elements={elements}\r\n                        onConnect={onConnect}\r\n                        onElementsRemove={onElementsRemove}\r\n                        onNodeDoubleClick={onElementDoubleClick}\r\n                        onEdgeDoubleClick={onElementDoubleClick}\r\n                        onLoad={onLoad}\r\n                        onDrop={onDrop}\r\n                        onDragOver={onDragOver}\r\n                        onNodeDragStop={onNodeDragStop}\r\n                        style={{\r\n                            width: '100%',\r\n                            height: 700,\r\n                        }}\r\n                    >\r\n                        <Controls/>\r\n                    </ReactFlow>\r\n                </div>\r\n                <Sidebar/>\r\n            </ReactFlowProvider>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DnDFlow;","import {Button} from '@material-ui/core'\r\nimport React, {useEffect, useState} from 'react'\r\nimport LinearProgressWithLabel from './LinearProgressWithLabel'\r\n\r\n\r\nconst CustomFileWidget = (props: any) => {\r\n    const [formData, setFormData] = useState({...props.formData})\r\n    const [files, setFiles] = useState<any>([])\r\n\r\n    useEffect(() => {\r\n        props.onChange(formData)\r\n    }, [formData])\r\n\r\n    const handleChange = (event: any) => {\r\n        const lFiles = [...event.target.files]\r\n        setFiles(lFiles)\r\n        // console.log(\"Files selected: \", file)\r\n        // var reader = new FileReader();\r\n        // reader.onload = function (event:any) {\r\n        //     // The file's text will be printed here\r\n        //     let blob = new Blob([new Uint8Array(event.target.result)], {type: file.type });\r\n        //     console.log(event.target.result)\r\n        //     console.log(blob)\r\n        // };\r\n        //\r\n        // reader.readAsDataURL(file);\r\n        // return (event: any) => {\r\n        //     setFormData(files)\r\n        // };\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                type=\"file\"\r\n                onChange={handleChange}\r\n                multiple={props.allowMultipleFiles}\r\n            />\r\n            {files.map((file: any, i: number) => {\r\n                <div key={`${file.filename}_${i}`}>\r\n                    <p>{file.filename}</p>\r\n                    <LinearProgressWithLabel value={file.progress}/>\r\n                </div>\r\n            })}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default CustomFileWidget","import React from 'react'\r\nimport Form from \"@rjsf/bootstrap-4\";\r\nimport {Button, TextField} from \"@material-ui/core\";\r\n\r\nimport CustomFileWidget from '../custom-widgets/file-widget/CustomFileWidget'\r\n\r\ntype FormProps = { jsonSchema: string, uiSchema: string, formResponses:any }\r\n\r\nconst Preview = ({jsonSchema, uiSchema, formResponses}: FormProps) => {\r\n    const json_schema = JSON.parse(jsonSchema)\r\n    const ui_schema = JSON.parse(uiSchema)\r\n    const stage_data = JSON.stringify({...formResponses, json_schema: json_schema, ui_schema: ui_schema})\r\n    const widgets = {file: CustomFileWidget};\r\n\r\n    const copyToClipboard = () => {\r\n        navigator.clipboard.writeText(stage_data).then(() => console.log(\"success\")).catch(err => alert(err))\r\n    }\r\n\r\n    return (\r\n        <div style={{width: '70%', minWidth: '400px', margin: '0 auto', display: 'block', padding: 10}}>\r\n            <Form\r\n                schema={json_schema}\r\n                uiSchema={ui_schema}\r\n                widgets={widgets}\r\n                onSubmit={(formData) => console.log(formData.formData)}\r\n            />\r\n            <br/>\r\n            <TextField\r\n                id=\"outlined-multiline-static\"\r\n                label=\"JSON\"\r\n                multiline\r\n                fullWidth\r\n                defaultValue=\"Default Value\"\r\n                variant=\"outlined\"\r\n                InputProps={{\r\n                    readOnly: true,\r\n                }}\r\n                value={jsonSchema}\r\n                style={{marginTop: 15, marginBottom: 15}}\r\n            />\r\n            <TextField\r\n                id=\"outlined-multiline-static\"\r\n                label=\"UI\"\r\n                multiline\r\n                fullWidth\r\n                defaultValue=\"Default Value\"\r\n                variant=\"outlined\"\r\n                InputProps={{\r\n                    readOnly: true,\r\n                }}\r\n                value={uiSchema}\r\n                style={{marginTop: 15, marginBottom: 30}}\r\n            />\r\n            <br/>\r\n            <Button onClick={copyToClipboard} variant={\"contained\"} color={\"primary\"} style={{marginBottom: 15}}>Copy FUL STAGE to Clipboard</Button>\r\n            <TextField\r\n                id=\"outlined-multiline-static\"\r\n                label=\"FULL STAGE\"\r\n                multiline\r\n                fullWidth\r\n                defaultValue=\"Default Value\"\r\n                variant=\"outlined\"\r\n                InputProps={{\r\n                    readOnly: true,\r\n                }}\r\n                value={stage_data}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preview","import React from 'react'\r\n\r\nconst CustomFileType = {\r\n        file: {\r\n            displayName: \"File\",\r\n            matchIf: [\r\n                {\r\n                    types: [\"string\"],\r\n                    widget: \"file\"\r\n                },\r\n            ],\r\n            defaultDataSchema: {},\r\n            defaultUiSchema: {\r\n                \"ui:widget\": \"file\"\r\n            },\r\n            type: \"string\",\r\n            // cardBody: (parameters: any, onChange: any) => <div>\r\n            //     {/*<h5>Multiple files</h5>*/}\r\n            //     {/*<input*/}\r\n            //     {/*    value={parameters.default}*/}\r\n            //     {/*    placeholder=\"File\"*/}\r\n            //     {/*    type=\"text\"*/}\r\n            //     {/*    onChange={(ev: any) =>*/}\r\n            //     {/*        onChange({...parameters, default: ev.target.value})*/}\r\n            //     {/*    }*/}\r\n            //     {/*/>*/}\r\n            //     {console.log(parameters)}\r\n            //     <input type=\"checkbox\" id=\"multiple\" name=\"horns\"\r\n            //            value={parameters.multiple}\r\n            //            onChange={(ev: any) =>\r\n            //                onChange({...parameters, multiple: ev.target.checked})\r\n            //            }\r\n            //     />\r\n            //     <label htmlFor=\"multiple\">Multiple files</label>\r\n            // </div>,\r\n            // modalBody: (parameters: any, onChange: any) => <div>\r\n            //     Extra editing options in modal appear hear\r\n            // </div>,\r\n        }\r\n};\r\n\r\nexport default CustomFileType","import React, {useEffect, useState} from \"react\";\r\n// @ts-ignore\r\nimport {FormBuilder} from '@ginkgo-bioworks/react-json-schema-form-builder';\r\nimport Form from \"@rjsf/bootstrap-4\";\r\nimport StageOptions from '../../json-schema/StageOptions_v2.json'\r\nimport {useParams} from \"react-router-dom\";\r\nimport {JSONSchema7} from \"json-schema\";\r\nimport PreviewStage from './PreviewStage'\r\nimport CustomFileType from '../custom-widgets/file-widget/CustomFileType'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from \"../../util/Axios\";\r\nimport {chainsUrl, taskstagesUrl} from \"../../util/Urls\";\r\nimport {IconButton} from \"@material-ui/core\";\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\n\r\ntype RouterParams = { id: string, chainId: string }\r\ntype ChainProps = { id: number, name: string, description: string, campaign: number }\r\n\r\nconst Builder = () => {\r\n    let {id, chainId} = useParams<RouterParams>();\r\n\r\n    const [schema, setSchema] = useState('')\r\n    const [uiSchema, setUiSchema] = useState('')\r\n    const [optionsSchema, setOptionsSchema] = useState(StageOptions)\r\n    const [formResponses, setFormResponses] = useState({})\r\n    const [preview, setPreview] = useState(false)\r\n\r\n    useEffect(() => {\r\n        const getStage = () => {\r\n            axios.get(taskstagesUrl + id + '/')\r\n                .then(res => res.data)\r\n                .then(res => {\r\n                    const {id, json_schema, ui_schema, ...options} = res\r\n                    let parse_json_schema = JSON.stringify(json_schema)\r\n                    let parse_ui_schema = JSON.stringify(ui_schema)\r\n                    setSchema(parse_json_schema)\r\n                    setUiSchema(parse_ui_schema)\r\n                    setFormResponses(options)\r\n                })\r\n        }\r\n        if (id) {\r\n            getStage()\r\n        }\r\n    }, [id])\r\n\r\n    const handleSubmit = () => {\r\n        let json_schema = null\r\n        let ui_schema = null\r\n        if (schema && uiSchema) {\r\n            json_schema = JSON.parse(schema)\r\n            ui_schema = JSON.parse(uiSchema)\r\n        }\r\n\r\n        let data = {...formResponses, json_schema: json_schema, ui_schema: ui_schema}\r\n        console.log(data)\r\n\r\n        axios\r\n            .patch(taskstagesUrl + id + '/', data)\r\n            .then((res: any) => alert(\"Saved\"))\r\n            .catch((err: any) => alert(err));\r\n    }\r\n\r\n    const changePreviewMode = () => {\r\n        setPreview(p => !p)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <IconButton style={{float: 'right'}} onClick={changePreviewMode}>\r\n                {!preview ?\r\n                    <VisibilityIcon fontSize={\"large\"}/>\r\n                    :\r\n                    <VisibilityOffIcon fontSize={\"large\"}/>\r\n                }\r\n\r\n            </IconButton>\r\n            {!preview ?\r\n                <div>\r\n                    <FormBuilder\r\n                        schema={schema}\r\n                        uischema={uiSchema}\r\n                        onChange={(newSchema: string, newUiSchema: string) => {\r\n                            setSchema(newSchema)\r\n                            setUiSchema(newUiSchema)\r\n                        }}\r\n                        mods={\r\n                            {\r\n                                customFormInputs: {...CustomFileType}\r\n                            }\r\n                        }\r\n                    />\r\n                    <div style={{width: '70%', minWidth: '400px', margin: '0 auto', display: 'block', padding: 10}}>\r\n                        <Form\r\n                            schema={optionsSchema as JSONSchema7}\r\n                            formData={formResponses}\r\n                            onChange={(e: { formData: object }) => setFormResponses(e.formData)}\r\n                            onSubmit={handleSubmit}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                :\r\n                <PreviewStage jsonSchema={schema} uiSchema={uiSchema} formResponses={formResponses}/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Builder\r\n\r\n\r\n","import {retrieveSchema, toPathSchema, toIdSchema} from \"@rjsf/core/lib/utils\";\r\nimport _get from \"lodash/get\";\r\nimport _isEmpty from \"lodash/isEmpty\";\r\n\r\nconst getFormFields = (schema, formData = {}, uiSchema) => {\r\n    const retrievedSchema = retrieveSchema(\r\n        schema\r\n    );\r\n\r\n    const pathSchema = toPathSchema(\r\n        retrievedSchema,\r\n        \"\",\r\n        schema,\r\n        formData\r\n    );\r\n\r\n    // const idSchema = toIdSchema(\r\n    //   retrievedSchema,\r\n    //   uiSchema[\"ui:rootFieldId\"],\r\n    //   schema,\r\n    //   formData,\r\n    //   'root_newInput1_newInput1_test2'\r\n    // );\r\n    //\r\n    // console.log(idSchema)\r\n\r\n    const getFieldNames = (pathSchema, formData) => {\r\n        const getAllPaths = (_obj, acc = [], paths = [\"\"]) => {\r\n            Object.keys(_obj).forEach(key => {\r\n                if (typeof _obj[key] === \"object\") {\r\n                    let newPaths = paths.map(path => `${path}.${key}`);\r\n                    // If an object is marked with additionalProperties, all its keys are valid\r\n                    if (_obj[key].__rjsf_additionalProperties && _obj[key].$name !== \"\") {\r\n                        acc.push(_obj[key].$name);\r\n                    } else {\r\n                        getAllPaths(_obj[key], acc, newPaths);\r\n                    }\r\n                } else if (key === \"$name\" && _obj[key] !== \"\") {\r\n                    paths.forEach(path => {\r\n                        path = path.replace(/^\\./, \"\");\r\n                        const formValue = _get(formData, path);\r\n                        // adds path to fieldNames if it points to a value\r\n                        // or an empty object/array\r\n                        if (typeof formValue !== \"object\" || _isEmpty(formValue)) {\r\n                            acc.push(path);\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n            return acc;\r\n        };\r\n\r\n        return getAllPaths(pathSchema);\r\n    };\r\n\r\n    const fieldNames = getFieldNames(pathSchema, formData);\r\n\r\n    return fieldNames\r\n}\r\n\r\nexport default getFormFields","import React, {useEffect, useState} from \"react\";\r\nimport firebase from '../../util/Firebase'\r\nimport Form from \"@rjsf/bootstrap-4\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {JSONSchema7} from \"json-schema\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Grid} from \"@material-ui/core\";\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport axios from '../../util/Axios'\r\nimport {conditionalstagesUrl, taskstagesUrl} from \"../../util/Urls\";\r\nimport GetFormFields from './GetFormFields'\r\n\r\ntype RouterParams = { id: string }\r\n\r\nconst Builder = () => {\r\n    const {id} = useParams<RouterParams>();\r\n\r\n    const [ready, setReady] = useState(false)\r\n    const [fields, setFields] = useState<string[]>([]);\r\n    const [schema, setSchema] = useState<{}>({})\r\n    const [uiSchema, setUiSchema] = useState({\r\n        logic_array: {\r\n            items: {\r\n                'ui:order': [\r\n                    'field',\r\n                    'condition',\r\n                    'value'\r\n                ]\r\n            }\r\n        },\r\n        'ui:order': [\r\n            'logic_array'\r\n        ]\r\n    })\r\n    const [formResponses, setFormResponses] = useState({})\r\n    const [connectedStages, setConnectedStages] = useState<any[]>()\r\n    const [isPingPong, setIsPingPong] = useState<boolean>(false)\r\n\r\n\r\n    useEffect(() => {\r\n        const getStage = (stageId?: number | string) => {\r\n            if (stageId) {\r\n                let taskStage = axios.get(taskstagesUrl + stageId + '/').then(res => res.data)\r\n                if (taskStage) {\r\n                    return taskStage\r\n                } else {\r\n                    return axios.get(conditionalstagesUrl + stageId + '/').then(res => res.data)\r\n                }\r\n            }\r\n            return axios.get(conditionalstagesUrl + id + '/').then(res => res.data)\r\n        }\r\n\r\n        const getConnectedStages = async (ids: number[]) => {\r\n            return ids.map(async connId => {\r\n                let stage = await getStage(connId)\r\n                return {[connId]: stage}\r\n            })\r\n        }\r\n\r\n        const getData = async () => {\r\n            let currentStage = await getStage()\r\n            setFormResponses(currentStage.conditions)\r\n\r\n            let connectedIds = undefined\r\n            if (isPingPong) {\r\n                connectedIds = currentStage.out_stages\r\n            } else {\r\n                connectedIds = currentStage.in_stages\r\n            }\r\n            if (connectedIds) {\r\n                let connStages = await getConnectedStages(connectedIds)\r\n                Promise.all(connStages).then(res => {\r\n                    if (Object.keys(res).length > 0) {\r\n                        console.log(`PingPong: ${isPingPong}, Connected Stage: ${res}`)\r\n                        setConnectedStages(res)\r\n                        setReady(true)\r\n                    }\r\n                })\r\n            }\r\n        }\r\n\r\n        if (id) {\r\n            getData()\r\n        }\r\n\r\n    }, [id, isPingPong])\r\n\r\n    useEffect(() => {\r\n        if (connectedStages && connectedStages.length > 0) {\r\n            console.log(connectedStages)\r\n            connectedStages.forEach(stageObject => {\r\n                let stage = Object.values(stageObject)[0] as any\r\n                let ui = stage.ui_schema\r\n                let sc = stage.json_schema\r\n                let fields = GetFormFields(sc)\r\n                setFields(fields)\r\n            })\r\n        }\r\n    }, [isPingPong, connectedStages])\r\n\r\n    useEffect(() => {\r\n        setSchema({\r\n            items: {\r\n                type: 'object',\r\n                title: 'Logic',\r\n                properties: {\r\n                    field: {\r\n                        enum: fields,\r\n                        title: 'Field',\r\n                        type: 'string'\r\n                    },\r\n                    condition: {\r\n                        enum: [\r\n                            '==',\r\n                            '!=',\r\n                            '>',\r\n                            '<',\r\n                            '>=',\r\n                            '<=',\r\n                            'ARRAY-CONTAINS',\r\n                            'ARRAY-CONTAINS-NOT'\r\n                        ],\r\n                        title: 'Condition',\r\n                        type: 'string'\r\n                    },\r\n                    value: {\r\n                        title: 'Value',\r\n                        type: 'string'\r\n                    }\r\n                },\r\n                dependencies: {},\r\n                required: []\r\n            },\r\n            title: 'Logic Array',\r\n            type: 'array',\r\n            dependencies: {},\r\n            required: []\r\n        })\r\n    }, [fields])\r\n\r\n    const handleSubmit = () => {\r\n        let data = {conditions: formResponses, is_ping_pong: isPingPong}\r\n        console.log(formResponses)\r\n\r\n        axios\r\n            .patch(conditionalstagesUrl + id + '/', data)\r\n            .then((res: any) => alert(\"Saved\"))\r\n            .catch((err: any) => alert(err));\r\n    }\r\n\r\n    const handleChangePingPong = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setIsPingPong(event.target.checked);\r\n    }\r\n\r\n    return (\r\n        <div style={{width: '70%', minWidth: '400px', margin: '0 auto', display: 'block', padding: 10}}>\r\n            {ready ?\r\n                <div>\r\n                    <FormControlLabel\r\n                        value={isPingPong}\r\n                        label=\"Ping Pong\"\r\n                        control={<Checkbox onChange={handleChangePingPong}\r\n                                           color=\"primary\"/>}\r\n                    />\r\n                    <Form\r\n                        schema={schema as JSONSchema7}\r\n                        formData={formResponses}\r\n                        onChange={(e: { formData: object }) => setFormResponses(e.formData)}\r\n                        onSubmit={handleSubmit}/>\r\n                </div>\r\n                :\r\n                <p>No node connection or end_ui detected. Connect to one or check if form has fields.</p>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Builder\r\n\r\n\r\n","import React, {useEffect, useState} from \"react\";\r\nimport firebase from '../../util/Firebase'\r\nimport {\r\n    useHistory,\r\n    useParams\r\n} from \"react-router-dom\";\r\n\r\nimport {\r\n    Button,\r\n    FormControl,\r\n    Grid,\r\n    Select,\r\n    InputLabel,\r\n    MenuItem,\r\n    createStyles,\r\n    makeStyles,\r\n    Theme\r\n} from '@material-ui/core'\r\nimport axios from \"../../util/Axios\";\r\n\r\nimport {casesUrl, tasksUrl} from '../../util/Urls'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        formControl: {\r\n            margin: theme.spacing(1),\r\n            minWidth: 150,\r\n        },\r\n        selectEmpty: {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n    }));\r\n\r\ntype RouterParams = { id: string, chainId: string }\r\n\r\nconst Builder = () => {\r\n    let {id, chainId} = useParams<RouterParams>();\r\n    const history = useHistory();\r\n\r\n    const handleCreateStage = () => {\r\n        let location = history.location.pathname.split('/actions')[0]\r\n        console.log(location)\r\n        history.push(`${location}/createstage/${id}`)\r\n    }\r\n\r\n    const handleCreateTask = async () => {\r\n        let location = history.location.pathname.split('/actions')[0]\r\n        let caseData = await axios.post(casesUrl, {chain: chainId})\r\n            .then(res => res.data)\r\n        console.log(caseData)\r\n        let taskData = await axios.post(tasksUrl, {case: caseData.id, stage: id})\r\n            .then(res => res.data)\r\n        console.log(taskData)\r\n        history.push(`${location}/task/${taskData.id}`)\r\n    }\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid container justify=\"center\" style={{background: '#7FB3D5'}} component={\"div\"}>\r\n                <Grid item style={{margin: 20}}>\r\n                    <Button onClick={handleCreateStage}>Create Form</Button>\r\n                </Grid>\r\n                <Grid item style={{margin: 20}}>\r\n                    <Button onClick={handleCreateTask}>Create Task (for test)</Button>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Builder","import React, {useEffect, useState} from \"react\";\r\nimport Form from \"@rjsf/bootstrap-4\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport axios from \"../../util/Axios\";\r\nimport {casesUrl, taskstagesUrl, tasksUrl} from '../../util/Urls'\r\n\r\ntype RouterParams = { id: string }\r\n\r\nconst Builder = () => {\r\n    const [schema, setSchema] = useState({})\r\n    const [uiSchema, setUiSchema] = useState({})\r\n    const [formResponses, setFormResponses] = useState({})\r\n    let {id} = useParams<RouterParams>();\r\n\r\n    useEffect(() => {\r\n        const getTask = () => {\r\n            return axios.get(tasksUrl + id).then(res => res.data)\r\n        }\r\n        const getStage = (stageId: string | number) => {\r\n            return axios.get(taskstagesUrl + stageId).then(res => res.data)\r\n        }\r\n        const setFormData = async () => {\r\n            let task = await getTask()\r\n            let stage = await getStage(task.stage)\r\n            console.log(task, stage)\r\n            setFormResponses(task.responses)\r\n            setSchema(stage.json_schema)\r\n            setUiSchema(stage.ui_schema)\r\n        }\r\n        if (id) {\r\n            setFormData()\r\n        }\r\n    }, [id])\r\n\r\n    const handleSubmit = () => {\r\n        console.log(formResponses)\r\n        let data = {responses: formResponses}\r\n        axios.patch(tasksUrl + id, data)\r\n        // .then(res => res.data)\r\n        // .then(res => {\r\n        //     console.log(res)\r\n        //     setFormResponses(res.responses)\r\n        //     setSchema(res.stage.json_schema)\r\n        //     setUiSchema(res.stage.ui_schema)\r\n        // })\r\n    }\r\n\r\n    return (\r\n        <div style={{width: '70%', minWidth: '400px', margin: '0 auto', display: 'block', padding: 10}}>\r\n            <Form schema={schema} uiSchema={uiSchema} formData={formResponses}\r\n                  onChange={(e) => setFormResponses(e.formData)} onSubmit={handleSubmit}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Builder\r\n\r\n\r\n","import React, {useEffect, useState} from \"react\";\r\nimport firebase from \"./Firebase\";\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nexport const AuthProvider = ({children}) => {\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged((user) => {\r\n            if (user) {\r\n                setCurrentUser(user)\r\n                user.getIdToken(true).then((idToken) => {\r\n                    localStorage.setItem(\"token\", idToken);\r\n                })\r\n            }\r\n        });\r\n        firebase.auth().onIdTokenChanged(user => {\r\n            if (user) {\r\n                user.getIdToken(false).then((idToken) => {\r\n                    localStorage.setItem(\"token\", idToken);\r\n                })\r\n            }\r\n        })\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n            value={{\r\n                currentUser\r\n            }}\r\n        >\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n","import React, {useContext, useState, useEffect} from 'react';\r\nimport clsx from 'clsx';\r\nimport {createStyles, makeStyles, Theme, useTheme} from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\n\r\nimport {\r\n    MenuItem,\r\n    Select,\r\n    FormControl,\r\n    InputLabel,\r\n    AppBar,\r\n    Button,\r\n    CssBaseline,\r\n    Drawer,\r\n    IconButton,\r\n    List,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    Toolbar,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport {signInWithGoogle, signOut} from '../../util/Firebase';\r\nimport {AuthContext} from \"../../util/Auth\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport axios from '../../util/Axios';\r\n\r\nimport {campaignsUrl} from '../../util/Urls';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            display: 'flex',\r\n        },\r\n        appBar: {\r\n            zIndex: theme.zIndex.drawer + 1,\r\n            transition: theme.transitions.create(['width', 'margin'], {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen,\r\n            }),\r\n        },\r\n        appBarShift: {\r\n            marginLeft: drawerWidth,\r\n            width: `calc(100% - ${drawerWidth}px)`,\r\n            transition: theme.transitions.create(['width', 'margin'], {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n        },\r\n        menuButton: {\r\n            marginRight: 36,\r\n        },\r\n        hide: {\r\n            display: 'none',\r\n        },\r\n        drawer: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n            whiteSpace: 'nowrap',\r\n        },\r\n        drawerOpen: {\r\n            width: drawerWidth,\r\n            transition: theme.transitions.create('width', {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n        },\r\n        drawerClose: {\r\n            transition: theme.transitions.create('width', {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen,\r\n            }),\r\n            overflowX: 'hidden',\r\n            width: theme.spacing(7) + 1,\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: theme.spacing(9) + 1,\r\n            },\r\n        },\r\n        toolbar: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'flex-end',\r\n            padding: theme.spacing(0, 1),\r\n            // necessary for content to be below app bar\r\n            ...theme.mixins.toolbar,\r\n        },\r\n        content: {\r\n            flexGrow: 1,\r\n            // padding: theme.spacing(3),\r\n        },\r\n        title: {\r\n            flexGrow: 1\r\n        },\r\n        formControl: {\r\n            margin: theme.spacing(1),\r\n            alignItems: 'center'\r\n            // minWidth: 120,\r\n        },\r\n        selectEmpty: {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n        select: {},\r\n        selectIcon: {\r\n            fill: 'white',\r\n            top: 'calc(50% - 14px)'\r\n        },\r\n    }),\r\n);\r\n\r\ntype AppbarProps = { children: React.ReactNode }\r\ntype CampaingParams = { id: number, name: string, description?: string };\r\n\r\nconst Appbar = (props: AppbarProps) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const history = useHistory();\r\n    const {campaignId} = useParams<{ campaignId: string }>();\r\n    const {currentUser} = useContext(AuthContext)\r\n    const {children} = props;\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [campaign, setCampaign] = useState<number | string | unknown>(campaignId);\r\n    const [allCampaigns, setAllCampaigns] = useState<CampaingParams[]>([])\r\n\r\n    console.log(\"CURRENT CAMPAIGN\", campaignId)\r\n\r\n    useEffect(() => {\r\n        axios.get(campaignsUrl)\r\n            .then(res => res.data)\r\n            .then(res => {\r\n                console.log(res)\r\n                setAllCampaigns(res)\r\n            })\r\n    }, [])\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleOptionClick = (page: string) => {\r\n        history.push(`/campaign/${campaignId}/${page}`)\r\n    };\r\n\r\n    const handleCampaignChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n        let value = event.target.value;\r\n        console.log(value)\r\n        setCampaign(value)\r\n        history.push(`/campaign/${value}`)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline/>\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, {\r\n                            [classes.hide]: open,\r\n                        })}\r\n                    >\r\n                        <MenuIcon/>\r\n                    </IconButton>\r\n                    <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                        GigaTurnip Admin\r\n                    </Typography>\r\n                    <FormControl className={classes.formControl} size=\"small\">\r\n                        <Select\r\n                            className={classes.select}\r\n                            autoWidth\r\n                            labelId=\"campaign-select-label\"\r\n                            id=\"campaign-select-label\"\r\n                            value={campaign}\r\n                            onChange={handleCampaignChange}\r\n                            label=\"Campaign\"\r\n                            disableUnderline\r\n                            style={{color: 'white'}}\r\n                            inputProps={{\r\n                                classes: {\r\n                                    icon: classes.selectIcon,\r\n                                },\r\n                            }}\r\n                        >\r\n                            {allCampaigns.map(camp => <MenuItem key={`${camp.name}_${camp.id}`} value={camp.id}>{camp.name}</MenuItem>)}\r\n                        </Select>\r\n                    </FormControl>\r\n                    {currentUser ?\r\n                        <Button onClick={signOut} color={\"inherit\"}>\r\n                            Log out\r\n                        </Button>\r\n                        :\r\n                        <Button onClick={signInWithGoogle} color={\"inherit\"}>\r\n                            Login\r\n                        </Button>\r\n                    }\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                variant=\"permanent\"\r\n                className={clsx(classes.drawer, {\r\n                    [classes.drawerOpen]: open,\r\n                    [classes.drawerClose]: !open,\r\n                })}\r\n                classes={{\r\n                    paper: clsx({\r\n                        [classes.drawerOpen]: open,\r\n                        [classes.drawerClose]: !open,\r\n                    }),\r\n                }}\r\n            >\r\n                <div className={classes.toolbar}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === 'rtl' ? <ChevronRightIcon/> : <ChevronLeftIcon/>}\r\n                    </IconButton>\r\n                </div>\r\n                <Divider/>\r\n                <List>\r\n                    <ListItem button onClick={() => handleOptionClick(\"chain\")}>\r\n                        <ListItemIcon><InboxIcon/></ListItemIcon>\r\n                        <ListItemText primary={\"Chains\"}/>\r\n                    </ListItem>\r\n                </List>\r\n            </Drawer>\r\n            <main className={classes.content}>\r\n                <div className={classes.toolbar}/>\r\n                {children}\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Appbar\r\n","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 300,\r\n        // height: 200\r\n    },\r\n    extra: {\r\n        marginBottom: 15\r\n    }\r\n});\r\n\r\ntype CardProps = { chain: { id: number, campaign: number, name: string, description?: string } }\r\n\r\nconst ChainCard = (props: CardProps) => {\r\n    const classes = useStyles();\r\n    const {id, campaign, name, description} = props.chain;\r\n    const history = useHistory()\r\n\r\n    const handleOpen = () => {\r\n        history.push(`${history.location.pathname}/${id}`)\r\n    }\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardContent>\r\n                <Typography variant=\"h5\" component=\"h2\" gutterBottom={true}>\r\n                    {name}\r\n                </Typography>\r\n                <Typography className={classes.extra} variant=\"subtitle2\" color=\"textSecondary\">\r\n                    ID: {id} Campaign: {campaign}\r\n                </Typography>\r\n                <Typography variant=\"body1\" component=\"p\">\r\n                    {description ? description : <br/>}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                <Button size=\"small\" onClick={handleOpen}>Open</Button>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default ChainCard","import React, {useState} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport {blue} from '@material-ui/core/colors';\r\nimport {DialogActions, DialogContent, Grid, TextField} from \"@material-ui/core\";\r\nimport {NewChainParams} from \"./Chains\";\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    avatar: {\r\n        backgroundColor: blue[100],\r\n        color: blue[600],\r\n    },\r\n});\r\n\r\ntype ChainDialogProps = {\r\n    open: boolean;\r\n    onClose: () => void;\r\n    onSave: (data: NewChainParams) => void;\r\n}\r\n\r\ntype RouterParams = {campaignId: string}\r\n\r\nconst AddChainDialog = (props: ChainDialogProps) => {\r\n    const classes = useStyles();\r\n    const {campaignId} = useParams<RouterParams>();\r\n\r\n    const {onClose, onSave, open} = props;\r\n\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [campaign, setCampaign] = useState(campaignId)\r\n\r\n    const handleClose = () => {\r\n        onClose();\r\n    };\r\n\r\n    const handleSave = () => {\r\n        if (name && campaign) {\r\n            let parsedCampaign = parseInt(campaign)\r\n            let data = {name, description, campaign: parsedCampaign}\r\n            onSave(data)\r\n        }\r\n    }\r\n\r\n    const handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        let value = event.target.value\r\n        if (value) {\r\n            setName(value)\r\n        }\r\n        else {\r\n            setName('')\r\n        }\r\n    };\r\n\r\n    const handleDescriptionChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        let value = event.target.value\r\n        if (value) {\r\n            setDescription(value)\r\n        }\r\n        else {\r\n            setDescription('')\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n            <DialogTitle>Add Chain</DialogTitle>\r\n            <DialogContent>\r\n                <Grid container justify={\"center\"}>\r\n                    <Grid container item><TextField fullWidth label={\"Name\"} onChange={handleNameChange}/></Grid>\r\n                    <Grid container item>\r\n                        <TextField fullWidth label={\"Description\"} multiline rows={4} onChange={handleDescriptionChange}/>\r\n                    </Grid>\r\n                </Grid>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleSave}>Save</Button>\r\n                <Button onClick={handleClose}>Close</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default AddChainDialog","import React, {useEffect, useState} from \"react\";\r\nimport {\r\n    useHistory,\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport axios from \"../../util/Axios\";\r\nimport {Button, Grid, Typography} from \"@material-ui/core\";\r\nimport Card from \"./ChainCard\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport AddChainDialog from \"./Dialog\";\r\nimport {chainsUrl} from '../../util/Urls'\r\n\r\ntype RouterParams = {campaignId: string}\r\ntype ChainParams = { id: number, campaign: number, name: string, description?: string };\r\nexport type NewChainParams = { campaign: number, name: string, description?: string }\r\n\r\nconst Builder = () => {\r\n    const [chains, setChains] = useState<ChainParams[]>([])\r\n    const [open, setOpen] = useState(false);\r\n    const {campaignId} = useParams<RouterParams>()\r\n\r\n    useEffect(() => {\r\n        axios.get(chainsUrl)\r\n            .then(res => res.data)\r\n            .then(res => {\r\n                console.log(res)\r\n                const filtered = res.filter((chain: {campaign: number, name: string, description: string, id: number}) => chain.campaign?.toString() == campaignId)\r\n                setChains(filtered)\r\n            })\r\n    }, [])\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleDialogSave = (data: NewChainParams) => {\r\n        setOpen(false);\r\n        handleAddChain(data)\r\n    }\r\n\r\n    const handleAddChain = (data: NewChainParams) => {\r\n        console.log(data)\r\n        axios.post(chainsUrl, data)\r\n            .then(res => {\r\n                console.log(res)\r\n                window.location.reload(false);\r\n            })\r\n    };\r\n\r\n    return (\r\n        <Grid container justify={\"center\"}>\r\n            <AddChainDialog open={open} onSave={handleDialogSave} onClose={handleClose}/>\r\n            <Grid container style={{padding: 20}}>\r\n                <Button variant={\"contained\"} color={\"primary\"} startIcon={<AddIcon/>} onClick={handleClickOpen}>Add Chain</Button>\r\n            </Grid>\r\n            {chains.map(chain => (\r\n                <Grid item style={{padding: 10}}>\r\n                    <Card key={chain.id} chain={chain}/>\r\n                </Grid>\r\n            ))}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Builder\r\n\r\n\r\n","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 300,\r\n        // height: 200\r\n    },\r\n    extra: {\r\n        marginBottom: 15\r\n    }\r\n});\r\n\r\ntype CardProps = { chain: { id: number, name: string, description?: string } }\r\n\r\nconst ChainCard = (props: CardProps) => {\r\n    const classes = useStyles();\r\n    const {id, name, description} = props.chain;\r\n    const history = useHistory()\r\n\r\n    const handleOpen = () => {\r\n        history.push(`/campaign/${id}`)\r\n    }\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardContent>\r\n                <Typography variant=\"h5\" component=\"h2\" gutterBottom={true}>\r\n                    {name}\r\n                </Typography>\r\n                <Typography className={classes.extra} variant=\"subtitle2\" color=\"textSecondary\">\r\n                    ID: {id}\r\n                </Typography>\r\n                <Typography variant=\"body1\" component=\"p\">\r\n                    {description ? description : <br/>}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                <Button size=\"small\" onClick={handleOpen}>Open</Button>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default ChainCard","import React, {useState} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport {blue} from '@material-ui/core/colors';\r\nimport {DialogActions, DialogContent, Grid, TextField} from \"@material-ui/core\";\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    avatar: {\r\n        backgroundColor: blue[100],\r\n        color: blue[600],\r\n    },\r\n});\r\n\r\ntype ChainDialogProps = {\r\n    open: boolean;\r\n    onClose: () => void;\r\n    onSave: (data: any) => void;\r\n}\r\n\r\nconst AddCampaignDialog = (props: ChainDialogProps) => {\r\n    const classes = useStyles();\r\n    const {onClose, onSave, open} = props;\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [campaign, setCampaign] = useState<number>();\r\n\r\n    const handleClose = () => {\r\n        onClose();\r\n    };\r\n\r\n    const handleSave = () => {\r\n        if (name) {\r\n            let data = {name, description, campaign}\r\n            onSave(data)\r\n        }\r\n        else {\r\n            alert('error: No name')\r\n        }\r\n    }\r\n\r\n    const handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        let value = event.target.value\r\n        if (value) {\r\n            setName(value)\r\n        }\r\n        else {\r\n            setName('')\r\n        }\r\n    };\r\n\r\n    const handleDescriptionChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        let value = event.target.value\r\n        if (value) {\r\n            setDescription(value)\r\n        }\r\n        else {\r\n            setDescription('')\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n            <DialogTitle>Add Chain</DialogTitle>\r\n            <DialogContent>\r\n                <Grid container justify={\"center\"}>\r\n                    <Grid container item><TextField fullWidth label={\"Name\"} onChange={handleNameChange}/></Grid>\r\n                    <Grid container item>\r\n                        <TextField fullWidth label={\"Description\"} multiline rows={4} onChange={handleDescriptionChange}/>\r\n                    </Grid>\r\n                </Grid>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleSave}>Save</Button>\r\n                <Button onClick={handleClose}>Close</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default AddCampaignDialog","import React, {useEffect, useState} from \"react\";\r\nimport axios from \"../../util/Axios\";\r\nimport {Button, Grid} from \"@material-ui/core\";\r\nimport Card from \"./CampaignCard\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport AddChainDialog from \"./Dialog\";\r\nimport {campaignsUrl} from \"../../util/Urls\"\r\n\r\ntype CampaingParams = { id: number, name: string, description?: string };\r\nexport type NewCampaignParams = { name: string, description?: string }\r\n\r\nconst Builder = () => {\r\n    const [campaigns, setCampaigns] = useState<CampaingParams[]>([])\r\n    const [open, setOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        axios.get(campaignsUrl)\r\n            .then(res => res.data)\r\n            .then(res => {\r\n                console.log(res)\r\n                setCampaigns(res)\r\n            })\r\n    }, [])\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleDialogSave = (data: NewCampaignParams) => {\r\n        setOpen(false);\r\n        handleCampaignAdd(data)\r\n    }\r\n\r\n    const handleCampaignAdd = (data: NewCampaignParams) => {\r\n        axios.post(campaignsUrl, data)\r\n            .then(res => {\r\n                console.log(res)\r\n                window.location.reload(false);\r\n            })\r\n    };\r\n\r\n    return (\r\n        <Grid container justify={\"center\"}>\r\n            <AddChainDialog open={open} onSave={handleDialogSave} onClose={handleClose}/>\r\n            <Grid container style={{padding: 20}}>\r\n                <Button variant={\"contained\"} color={\"primary\"} startIcon={<AddIcon/>} onClick={handleClickOpen}>Add Campaign</Button>\r\n            </Grid>\r\n            {campaigns.map(campaign => (\r\n                <Grid item style={{padding: 10}}>\r\n                    <Card key={campaign.id} chain={campaign}/>\r\n                </Grid>\r\n            ))}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Builder\r\n\r\n\r\n","import React, {useContext} from 'react';\r\nimport clsx from 'clsx';\r\nimport {createStyles, makeStyles, Theme, useTheme} from '@material-ui/core/styles';\r\nimport {AppBar, Button, CssBaseline, Toolbar, Typography} from \"@material-ui/core\";\r\nimport {signInWithGoogle, signOut} from '../../util/Firebase';\r\nimport {AuthContext} from \"../../util/Auth\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            display: 'flex',\r\n        },\r\n        appBar: {\r\n            zIndex: theme.zIndex.drawer + 1,\r\n            transition: theme.transitions.create(['width', 'margin'], {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen,\r\n            }),\r\n        },\r\n        appBarShift: {\r\n            marginLeft: drawerWidth,\r\n            width: `calc(100% - ${drawerWidth}px)`,\r\n            transition: theme.transitions.create(['width', 'margin'], {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n        },\r\n        menuButton: {\r\n            marginRight: 36,\r\n        },\r\n        hide: {\r\n            display: 'none',\r\n        },\r\n        drawer: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n            whiteSpace: 'nowrap',\r\n        },\r\n        drawerOpen: {\r\n            width: drawerWidth,\r\n            transition: theme.transitions.create('width', {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n        },\r\n        drawerClose: {\r\n            transition: theme.transitions.create('width', {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen,\r\n            }),\r\n            overflowX: 'hidden',\r\n            width: theme.spacing(7) + 1,\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: theme.spacing(9) + 1,\r\n            },\r\n        },\r\n        toolbar: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'flex-end',\r\n            padding: theme.spacing(0, 1),\r\n            // necessary for content to be below app bar\r\n            ...theme.mixins.toolbar,\r\n        },\r\n        content: {\r\n            flexGrow: 1,\r\n            // padding: theme.spacing(3),\r\n        },\r\n        title: {\r\n            flexGrow: 1\r\n        }\r\n    }),\r\n);\r\n\r\ntype AppbarProps = { children: React.ReactNode }\r\n\r\nconst Appbar = (props: AppbarProps) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n    const {children} = props;\r\n    const {currentUser} = useContext(AuthContext)\r\n    const history = useHistory();\r\n    const {campaignId} = useParams<{campaignId: string}>();\r\n\r\n    console.log(campaignId)\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleOptionClick = (page: string) => {\r\n        history.push(`/campaign/${campaignId}/${page}`)\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline/>\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n                <Toolbar>\r\n                    <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                        GigaTurnip Admin\r\n                    </Typography>\r\n                    {currentUser ?\r\n                        <Button onClick={signOut} color={\"inherit\"}>\r\n                            Log out\r\n                        </Button>\r\n                        :\r\n                        <Button onClick={signInWithGoogle} color={\"inherit\"}>\r\n                            Login\r\n                        </Button>\r\n                    }\r\n                </Toolbar>\r\n            </AppBar>\r\n            <main className={classes.content}>\r\n                <div className={classes.toolbar}/>\r\n                {children}\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Appbar\r\n","import React, {useContext} from \"react\";\r\nimport Graph from './components/graph/Graph'\r\nimport StageBuilder from './components/form-builders/StageBuilder'\r\nimport LogicBuilder from './components/form-builders/LogicBuilder'\r\nimport Actions from './components/actions/Actions'\r\nimport Task from './components/task/Task'\r\nimport Appbar from \"./components/appbar/Appbar\";\r\n\r\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\r\n\r\nimport {AuthContext} from \"./util/Auth\";\r\nimport Chains from \"./components/chains/Chains\";\r\nimport Campaigns from \"./components/campaigns/Campaigns\";\r\nimport SimpleAppbar from \"./components/appbar/SimpleAppbar\";\r\n\r\n\r\nconst App = () => {\r\n    const {currentUser} = useContext(AuthContext)\r\n\r\n    return (\r\n        <div>\r\n            <Router>\r\n                <Switch>\r\n                    <Route path={\"/campaign/:campaignId\"}>\r\n                        <Appbar>\r\n                            <Route exact path=\"/campaign/:campaignId/chain/:chainId/createstage/:id\">\r\n                                <StageBuilder/>\r\n                            </Route>\r\n                            <Route exact path=\"/campaign/:campaignId/chain/:chainId/createlogic/:id\">\r\n                                <LogicBuilder/>\r\n                            </Route>\r\n                            <Route exact path=\"/campaign/:campaignId/chain/:chainId/task/:id\">\r\n                                <Task/>\r\n                            </Route>\r\n                            <Route exact path=\"/campaign/:campaignId/chain/:chainId/actions/:id\">\r\n                                <Actions/>\r\n                            </Route>\r\n                            <Route exact path=\"/campaign/:campaignId/chain\">\r\n                                <Chains/>\r\n                            </Route>\r\n                            <Route exact path=\"/campaign/:campaignId/chain/:chainId\">\r\n                                <Graph/>\r\n                            </Route>\r\n                        </Appbar>\r\n                    </Route>\r\n                    <Route path=\"/\">\r\n                        <SimpleAppbar>\r\n                            <Campaigns/>\r\n                        </SimpleAppbar>\r\n                    </Route>\r\n                </Switch>\r\n            </Router>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {AuthProvider} from \"./util/Auth\";\r\n\r\nReactDOM.render(\r\n    // <React.StrictMode>\r\n    <AuthProvider>\r\n        <App/>\r\n    </AuthProvider>,\r\n    // </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}
{"version":3,"sources":["components/nodes/CustomNode.tsx","components/nodes/LogicNode.tsx","components/nodes/StageNode.tsx","components/sidebar/Sidebar.tsx","util/Urls.js","util/Axios.js","util/Util.tsx","components/graph/Graph.tsx","components/custom-widgets/file-widget/CustomFileWidget.tsx","components/form-builders/PreviewStage.tsx","components/custom-widgets/file-widget/CustomFileType.tsx","components/text-editor/TextEditor.tsx","components/text-editor/TextViewer.tsx","components/form-builders/StageBuilder.tsx","components/form-builders/GetFormFields.js","components/form-builders/LogicBuilder.tsx","components/actions/Actions.tsx","components/task/Task.tsx","util/Firebase.js","util/Auth.js","components/appbar/Appbar.tsx","components/cards/Card.tsx","components/dialogs/Dialog.tsx","components/chains/Chains.tsx","components/campaigns/Campaigns.tsx","components/appbar/SimpleAppbar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","background","borderColor","borderWidth","borderStyle","borderRadius","fontSize","width","textAlign","padding","CustomNode","data","style","classes","Grid","className","label","type","position","Position","Top","Bottom","customNodeStyles","CustomLogicNode","CustomStageNode","Sidebar","useState","draggable","setDraggable","formResponses","setFormResponses","useEffect","onDragStart","event","nodeLabel","nodeType","console","log","JSON","stringify","dataTransfer","setData","effectAllowed","onDragEnd","undefined","marginRight","schema","formData","onChange","e","color","display","justifyContent","alignItems","campaignsUrl","chainsUrl","taskstagesUrl","conditionalstagesUrl","tasksUrl","instance","axios","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","error","Promise","reject","getCampaigns","get","then","res","results","getStageNodes","campaignId","chainId","getLogicNodes","getNode","id","elements","filter","node","pop","getUrl","updateConnections","a","currentNodeId","method","url","in_stages","out_stages","catch","err","connections","parsed","map","connection","toString","ids","patch","addConnections","target","source","targetNode","sourceNode","removeConnections","createNode","name","x_pos","x","y_pos","y","chain","parseInt","post","stage","DnDFlow","reactFlowWrapper","useRef","history","useHistory","useParams","reactFlowInstance","setReactFlowInstance","setElements","all","stageNodes","logicNodes","forEach","allNodes","nodes","parseFloat","length","sourceId","edge","arrowHeadType","els","addEdge","onConnect","params","newParams","onDrop","preventDefault","reactFlowBounds","current","getBoundingClientRect","transfer","getData","project","clientX","left","clientY","top","parsedData","parse","newNode","es","concat","onElementDoubleClick","element","location","pathname","push","nodeTypes","LOGIC","STAGE","ref","onElementsRemove","elementsToRemove","nodeIdsToRemove","n","includes","isEdge","delete","removeElements","onNodeDoubleClick","onEdgeDoubleClick","onLoad","_reactFlowInstance","onDragOver","dropEffect","onNodeDragStop","Math","round","updateNode","height","CustomFileWidget","props","uiSchema","multipleSelect","multiple","title","Preview","jsonSchema","onJsonChange","onUiChange","json_schema","ui_schema","stage_data","edit","setEdit","localJson","setLocalJson","localUi","setLocalUi","widgets","customfile","onSubmit","Switch","checked","inputProps","Button","variant","onClick","Typography","TextField","multiline","fullWidth","defaultValue","InputProps","readOnly","value","marginTop","marginBottom","navigator","clipboard","writeText","alert","CustomFileType","file","displayName","matchIf","types","widget","possibleOptions","defaultDataSchema","defaultUiSchema","private","cardBody","parameters","ev","TextEditor","handleChange","editorRef","docData","setDocData","window","matchMedia","matches","minWidth","margin","onEditorChange","newValue","editor","d","tinymceScriptSrc","process","onInit","evt","init","plugins","menubar","toolbar","toolbar_sticky","image_advtab","importcss_append","image_caption","noneditable_noneditable_class","toolbar_mode","contextmenu","autosave_prefix","save_onsavecallback","content_style","TextViewer","inline","disabled","Builder","setSchema","setUiSchema","StageOptions","optionsSchema","preview","setPreview","editorView","setEditorView","editorData","setEditorData","rich_text","webhook_address","webhook_params","options","float","IconButton","p","PreviewStage","uischema","newSchema","newUiSchema","mods","customFormInputs","responses","parsed_webhook_params","getFormFields","retrievedSchema","retrieveSchema","pathSchema","toPathSchema","getFieldNames","getAllPaths","_obj","acc","paths","Object","keys","key","newPaths","path","__rjsf_additionalProperties","$name","replace","formValue","_get","_isEmpty","ready","setReady","fields","setFields","connectedStages","setConnectedStages","pingPong","setPingPong","currentStage","conditions","pingpong","getStage","stageId","taskStage","getConnectedStages","connId","connectedIds","connStages","allFields","stageObject","values","stageSchema","deps","dependencies","stageFields","GetFormFields","depValues","depFields","dep","hasOwnProperty","oneOf","allOf","nested","fiction","flat","getDependentFields","Array","from","Set","items","properties","field","enum","condition","required","FormControlLabel","control","Checkbox","handleCreateTask","split","caseData","case","taskData","container","justify","component","item","task","setFormData","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","provider","auth","GoogleAuthProvider","firestore","settings","ignoreUndefinedProperties","signInWithGoogle","setCustomParameters","prompt","signInWithPopup","signOut","removeItem","reload","AuthContext","React","createContext","AuthProvider","children","currentUser","setCurrentUser","onAuthStateChanged","user","getIdToken","idToken","setItem","onIdTokenChanged","Provider","drawerWidth","appBar","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","mixins","content","flexGrow","formControl","selectEmpty","select","selectIcon","fill","Appbar","useTheme","useContext","open","setOpen","campaign","setCampaign","allCampaigns","setAllCampaigns","CssBaseline","AppBar","clsx","Toolbar","aria-label","noWrap","cursor","email","FormControl","size","Select","autoWidth","labelId","disableUnderline","icon","camp","MenuItem","Drawer","paper","direction","Divider","List","ListItem","button","page","ListItemIcon","ListItemText","primary","extra","ParentCard","description","onCardButtonClick","openCampaignInfo","Card","CardContent","gutterBottom","CardActions","ParentDialog","onClose","onSave","setName","setDescription","handleClose","Dialog","aria-labelledby","DialogTitle","DialogContent","rows","DialogActions","chains","setChains","getChains","handleAddChain","createChain","handleCardRedirect","startIcon","campaigns","setCampaigns","handleCampaignAdd","createCampaign","App","exact","StageBuilder","LogicBuilder","Task","Actions","Chains","Graph","SimpleAppbar","Campaigns","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.503ee2d3.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Handle, Position} from 'react-flow-renderer';\r\nimport {createStyles, Grid, makeStyles, Theme} from \"@material-ui/core\";\r\nimport {NodeParams} from \"../../util/Types\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            background: '#FFF',\r\n            borderColor: '#000',\r\n            borderWidth: '1px',\r\n            borderStyle: 'solid',\r\n            borderRadius: '3px',\r\n            fontSize: '12px',\r\n            width: '150px',\r\n            textAlign: 'center',\r\n            padding: 10\r\n        },\r\n    }));\r\n\r\n\r\n\r\nconst CustomNode = ({data, style}: NodeParams) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid className={classes.root} style={style}>\r\n            <div>{data.label}</div>\r\n            <Handle\r\n                type=\"target\"\r\n                position={Position.Top}\r\n                style={{borderRadius: '100%'}}\r\n            />\r\n            <Handle\r\n                type=\"source\"\r\n                position={Position.Bottom}\r\n                style={{borderRadius: '100%'}}\r\n            />\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default CustomNode","import React from 'react';\r\nimport CustomNode from \"./CustomNode\";\r\nimport {NodeParams} from \"../../util/Types\";\r\n\r\nconst customNodeStyles = {\r\n  borderColor: '#0041d0'\r\n};\r\n\r\nconst CustomLogicNode = ({ data }: NodeParams) => <CustomNode data={data} style={customNodeStyles} />;\r\n\r\nexport default CustomLogicNode","import React from 'react';\r\nimport CustomNode from \"./CustomNode\";\r\nimport {NodeParams} from \"../../util/Types\";\r\n\r\nconst customNodeStyles = {\r\n  borderColor: '#32CD32'\r\n};\r\n\r\nconst CustomStageNode = ({ data }: NodeParams) => <CustomNode data={data} style={customNodeStyles} />;\r\n\r\nexport default CustomStageNode","import React, {useEffect, useState} from 'react';\r\nimport Form from \"@rjsf/bootstrap-4\";\r\nimport {JSONSchema7} from \"json-schema\";\r\n\r\nimport schema from '../../json-schema/SidebarSchema.json'\r\n\r\ntype FormResponsesProps = { label: string }\r\n\r\nconst Sidebar = () => {\r\n    const [draggable, setDraggable] = useState(false)\r\n    const [formResponses, setFormResponses] = useState<FormResponsesProps | undefined>()\r\n\r\n    useEffect(() => {\r\n\r\n        if (formResponses && formResponses.label && formResponses.label !== '') {\r\n            setDraggable(true)\r\n        } else {\r\n            setDraggable(false)\r\n        }\r\n    }, [formResponses])\r\n\r\n    const onDragStart = (event: { dataTransfer: DataTransfer }, nodeLabel: string, nodeType: string) => {\r\n        console.log(nodeLabel, nodeType)\r\n        let data = JSON.stringify({...formResponses, type: nodeType})\r\n        event.dataTransfer.setData('application/reactflow', data);\r\n        event.dataTransfer.effectAllowed = 'move';\r\n    };\r\n\r\n    const onDragEnd = () => {\r\n        setFormResponses(undefined)\r\n    }\r\n\r\n    return (\r\n        <aside>\r\n            <div className=\"description\">You can drag these nodes to the pane on the right.</div>\r\n            <div style={{marginRight: 5}}>\r\n                <Form schema={schema as JSONSchema7} formData={formResponses}\r\n                      onChange={(e) => setFormResponses(e.formData)}> </Form>\r\n            </div>\r\n            <div draggable={false} style={{\r\n                color: 'red',\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n                padding: 10\r\n            }}>{!draggable && 'Enter Label to drag the node'}</div>\r\n            <div className=\"dndnode stage\" onDragEnd={onDragEnd}\r\n                 onDragStart={(event) => onDragStart(event, formResponses ? formResponses.label : '', 'STAGE')}\r\n                 draggable={draggable}>\r\n                Stage Node\r\n            </div>\r\n            <div className=\"dndnode logic\" onDragEnd={onDragEnd}\r\n                 onDragStart={(event) => onDragStart(event, formResponses ? formResponses.label : '', 'LOGIC')}\r\n                 draggable={draggable}>\r\n                Logic Node\r\n            </div>\r\n            {/*<div className=\"dndnode manual\" onDragEnd={onDragEnd}*/}\r\n            {/*     onDragStart={(event) => onDragStart(event, formResponses ? formResponses.label : '', 'STAGE')}*/}\r\n            {/*     draggable={draggable}>*/}\r\n            {/*    Document Node*/}\r\n            {/*</div>*/}\r\n        </aside>\r\n    );\r\n};\r\n\r\nexport default Sidebar","const baseUrl = \"https://journal-bb5e3.uc.r.appspot.com/\"\r\n// const baseUrl = \"http://127.0.0.1:8000/\"\r\nconst campaignsUrl = \"api/v1/campaigns/\"\r\nconst chainsUrl = \"api/v1/chains/\"\r\nconst taskstagesUrl = \"api/v1/taskstages/\"\r\nconst ranksUrl = \"api/v1/ranks/\"\r\nconst rankslimitsUrl = \"api/v1/ranklimits/\"\r\nconst webhookstagesUrl = \"api/v1/webhookstages/\"\r\nconst conditionalstagesUrl = \"api/v1/conditionalstages/\"\r\nconst manualstagesUrl = \"api/v1/manualstages/\" // TBD\r\nconst casesUrl = \"api/v1/cases/\"\r\nconst tasksUrl = \"api/v1/tasks/\"\r\n\r\nexport {\r\n    baseUrl,\r\n    campaignsUrl,\r\n    chainsUrl,\r\n    taskstagesUrl,\r\n    ranksUrl,\r\n    rankslimitsUrl,\r\n    webhookstagesUrl,\r\n    conditionalstagesUrl,\r\n    casesUrl,\r\n    tasksUrl,\r\n    manualstagesUrl\r\n}","import axios from \"axios\";\r\nimport {baseUrl} from \"./Urls\";\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: baseUrl\r\n});\r\n\r\ninstance.interceptors.request.use(\r\n    function (config) {\r\n        const token = localStorage.getItem(\"token\");\r\n\r\n        if (token) {\r\n            config.headers[\"Authorization\"] = 'JWT ' + token;\r\n        }\r\n        return config;\r\n    },\r\n    function (error) {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nexport default instance;","import axios from \"./Axios\";\r\nimport {campaignsUrl, chainsUrl, conditionalstagesUrl, manualstagesUrl, taskstagesUrl} from \"./Urls\";\r\nimport {FlowElement, isEdge} from \"react-flow-renderer\";\r\nimport {ConnectionsParams, CreateCampaignParams, CreateChainParams} from \"./Types\";\r\n\r\nconst IS_PAGINATION_ON = true;\r\n\r\nexport const getCampaigns = () => {\r\n    return axios.get(campaignsUrl)\r\n        .then(res => res.data)\r\n        .then(res => {\r\n            console.log(res)\r\n            return IS_PAGINATION_ON ? res.results : res\r\n        })\r\n}\r\n\r\nexport const getChains = (campaignId: string) => {\r\n    return axios.get(`${chainsUrl}?campaign=${campaignId}`)\r\n        .then(res => res.data)\r\n        .then(res => IS_PAGINATION_ON ? res.results : res)\r\n}\r\n\r\nexport const getStageNodes = (campaignId: string, chainId: string) => {\r\n    return axios.get(`${taskstagesUrl}?chain__campaign=${campaignId}&chain=${chainId}&limit=1000`)\r\n        .then(res => res.data)\r\n        .then(res => IS_PAGINATION_ON ? res.results : res)\r\n};\r\n\r\nexport const getLogicNodes = (campaignId: string, chainId: string) => {\r\n    return axios.get(`${conditionalstagesUrl}?chain__campaign=${campaignId}&chain=${chainId}&limit=1000`)\r\n        .then(res => res.data)\r\n        .then(res => IS_PAGINATION_ON ? res.results : res)\r\n};\r\n\r\nexport const createCampaign = (data: CreateCampaignParams) => {\r\n    return axios.post(campaignsUrl, data)\r\n}\r\n\r\nexport const createChain = (data: CreateChainParams) => {\r\n    return axios.post(chainsUrl, data)\r\n};\r\n\r\n\r\n// <------ Graph.tsx Functions Part ------>\r\n/**\r\n * Search node in elements (state) and return it.\r\n * @param id\r\n * @param elements\r\n * @return {FlowElement | undefined}\r\n */\r\nexport const getNode = (id: string | number, elements: FlowElement[]) => {\r\n    return elements.filter((node: any) => node.id == id).pop()\r\n}\r\n\r\n/**\r\n *\r\n * @param node\r\n * @returns {string | undefined}\r\n */\r\nexport const getUrl = (node: FlowElement) => {\r\n    if (node.type === \"STAGE\") {\r\n        return taskstagesUrl\r\n    }\r\n    if (node.type === \"LOGIC\") {\r\n        return conditionalstagesUrl\r\n    }\r\n    if (node.type === \"MANUAL\") {\r\n        return manualstagesUrl\r\n    }\r\n    return undefined\r\n}\r\n\r\n/**\r\n * Add or remove connections (in_stages && out_stages) in database via API\r\n * @param node - Source or Target of the current node\r\n * @param currentNodeId\r\n * @param type - 'in' (Incoming) or 'out' (Outgoing) connection\r\n * @param method - 'create' or 'delete'\r\n * @returns {Promise<void>}\r\n */\r\nexport const updateConnections = async ({node, currentNodeId, type, method}: ConnectionsParams) => {\r\n    // Returns url of given node type (logic or stage or undefined)\r\n    const url = getUrl(node)\r\n    if (url) {\r\n        // Get connections of a given node\r\n        const connections = await axios.get(url + node.id + '/').then(res => {\r\n            if (type === 'in') {\r\n                return res.data.in_stages\r\n            }\r\n            if (type === 'out') {\r\n                return res.data.out_stages\r\n            }\r\n            return undefined;\r\n        }).catch(err => undefined);\r\n\r\n        if (connections) {\r\n            // Change ids type to String\r\n            let parsed = connections.map((connection: string | number) => connection.toString())\r\n\r\n            let ids = []\r\n            // Add current node id to given node connections\r\n            if (method === 'create') {\r\n                ids = [currentNodeId, ...parsed]\r\n            }\r\n            if (method === 'delete') {\r\n                ids = parsed.filter((connection: string) => connection !== currentNodeId)\r\n            }\r\n\r\n            let data = undefined\r\n            if (type === 'in') {\r\n                data = {in_stages: ids}\r\n            }\r\n            if (type === 'out') {\r\n                data = {out_stages: ids}\r\n            }\r\n\r\n            if (data) {\r\n                console.log(data)\r\n                axios.patch(url + node.id + '/', data)\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const addConnections = async (target: string, source: string, elements: FlowElement[]) => {\r\n    const targetNode = getNode(target, elements)\r\n    const sourceNode = getNode(source, elements)\r\n\r\n    if (targetNode) {\r\n        updateConnections({node: targetNode, currentNodeId: source, type: 'in', method: 'create'})\r\n    }\r\n\r\n    if (sourceNode) {\r\n        updateConnections({node: sourceNode, currentNodeId: target, type: 'out', method: 'create'})\r\n    }\r\n}\r\n\r\n\r\nexport const removeConnections = async (target: string, source: string, elements: FlowElement[]) => {\r\n    const targetNode = getNode(target, elements)\r\n    const sourceNode = getNode(source, elements)\r\n\r\n    if (targetNode) {\r\n        updateConnections({node: targetNode, currentNodeId: source, type: 'in', method: 'delete'})\r\n    }\r\n\r\n    if (sourceNode) {\r\n        updateConnections({node: sourceNode, currentNodeId: target, type: 'out', method: 'delete'})\r\n    }\r\n}\r\n\r\nexport const removeElements = (elementsToRemove: FlowElement[], elements: FlowElement[]) => {\r\n    let nodeIdsToRemove = elementsToRemove.map((n: any) => {\r\n        return n.id;\r\n    });\r\n\r\n    return elements.filter((element: any) => {\r\n        if (nodeIdsToRemove.includes(element.id)) {\r\n            if (isEdge(element)) {\r\n                let target = element.target\r\n                let source = element.source\r\n\r\n                removeConnections(target, source, elements)\r\n\r\n            } else {\r\n                const url = getUrl(element)\r\n                if (url) {\r\n                    axios.delete(url + element.id + '/')\r\n                }\r\n            }\r\n            return false\r\n        } else {\r\n            return true\r\n        }\r\n    });\r\n};\r\n\r\n/**\r\n * Update node (stage) coordinates in database via API\r\n * @param node\r\n */\r\nexport const updateNode = (node: any) => {\r\n    let x_pos = Math.round(node.position.x)\r\n    let y_pos = Math.round(node.position.y)\r\n    let data = {x_pos, y_pos}\r\n    const url = getUrl(node)\r\n    console.log(data)\r\n    if (url) {\r\n        axios.patch(url + node.id + '/', data).then(res => console.log(res.data))\r\n    }\r\n}\r\n\r\n/**\r\n * Create node (stage) in database via API\r\n * @param node\r\n * @param chainId\r\n * @returns {Promise<string | undefined>}\r\n */\r\nexport const createNode = async (node: { type: string, position: { x: number, y: number }, label: string }, chainId: string) => {\r\n    let data = {\r\n        name: node.label,\r\n        x_pos: node.position.x,\r\n        y_pos: node.position.y,\r\n        chain: parseInt(chainId),\r\n        out_stages: []\r\n    }\r\n\r\n    const url = getUrl(node as any)\r\n    if (url) {\r\n        let stage = await axios.post(url, data).then(res => res.data).catch(err => console.log(err))\r\n        return stage.id.toString()\r\n    }\r\n    return undefined;\r\n}","// noinspection ES6MissingAwait,JSIgnoredPromiseFromCall\r\n\r\nimport React, {useEffect, useRef, useState} from 'react';\r\nimport ReactFlow, {addEdge, Controls, Edge, FlowElement, ReactFlowProvider} from 'react-flow-renderer';\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport CustomLogicNode from '../nodes/LogicNode'\r\nimport CustomStageNode from '../nodes/StageNode'\r\nimport Sidebar from '../sidebar/Sidebar';\r\n\r\nimport '../../dnd.css';\r\nimport {RouterParams} from \"../../util/Types\";\r\nimport {addConnections, createNode, getLogicNodes, getStageNodes, removeElements, updateNode} from \"../../util/Util\";\r\n\r\n\r\nconst DnDFlow = () => {\r\n    const reactFlowWrapper = useRef(null);\r\n    const history = useHistory();\r\n    const {campaignId, chainId} = useParams<RouterParams>();\r\n\r\n    const [reactFlowInstance, setReactFlowInstance] = useState(null);\r\n    const [elements, setElements] = useState<FlowElement[]>([]);\r\n\r\n    // <------ UseEffect Part ------>\r\n    useEffect(() => {\r\n        Promise.all([getStageNodes(campaignId, chainId), getLogicNodes(campaignId, chainId)])\r\n            .then((results) => {\r\n                const stageNodes = results[0];\r\n                const logicNodes = results[1];\r\n\r\n                // Add types to nodes\r\n                stageNodes.forEach((node: any) => node.type = \"STAGE\")\r\n                logicNodes.forEach((node: any) => node.type = \"LOGIC\")\r\n\r\n                // Construct nodes and save to state\r\n                const allNodes = [...stageNodes, ...logicNodes]\r\n                const nodes: FlowElement[] = allNodes.map((node: any) => (\r\n                        {\r\n                            id: node.id.toString(),\r\n                            position: {x: parseFloat(node.x_pos), y: parseFloat(node.y_pos)},\r\n                            data: {label: node.name},\r\n                            type: node.type\r\n                        }\r\n                    )\r\n                )\r\n                setElements(nodes)\r\n                return allNodes\r\n            })\r\n            .then(allNodes => {\r\n                // Construct edges and save to state\r\n                allNodes.forEach(stage => {\r\n                    if (stage.in_stages.length > 0) {\r\n                        stage.in_stages.forEach((sourceId: string | number) => {\r\n                            const edge = {\r\n                                source: sourceId.toString(),\r\n                                target: stage.id.toString(),\r\n                                id: `${sourceId}-${stage.id}`,\r\n                                arrowHeadType: \"arrow\"\r\n                            } as Edge\r\n                            setElements((els) => addEdge(edge, els))\r\n                        })\r\n                    }\r\n                })\r\n            })\r\n    }, [chainId])\r\n\r\n\r\n    // <------ Frameworks Functions Part ------>\r\n\r\n    const onConnect = async (params: object) => {\r\n        const newParams: any = {...params, arrowHeadType: 'arrow'}\r\n        const target = newParams.target\r\n        const source = newParams.source\r\n\r\n        setElements((els: FlowElement[]) => addEdge(newParams, els))\r\n        addConnections(target, source, elements)\r\n    }\r\n\r\n    const onElementsRemove = (elementsToRemove: FlowElement[]) => {\r\n        setElements((els) => removeElements(elementsToRemove, els));\r\n    }\r\n\r\n    const onLoad = (_reactFlowInstance: any) =>\r\n        setReactFlowInstance(_reactFlowInstance);\r\n\r\n    const onDragOver = (event: any) => {\r\n        event.preventDefault();\r\n        event.dataTransfer.dropEffect = 'move';\r\n    };\r\n\r\n    const onDrop = async (event: any) => {\r\n        event.preventDefault();\r\n\r\n        // @ts-ignore\r\n        const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\r\n        // Get new node data from sidebar\r\n        const transfer = event.dataTransfer.getData('application/reactflow');\r\n        // @ts-ignore\r\n        const position = reactFlowInstance.project({\r\n            x: event.clientX - reactFlowBounds.left,\r\n            y: event.clientY - reactFlowBounds.top,\r\n        });\r\n\r\n        const parsedData = JSON.parse(transfer)\r\n        const label = parsedData.label\r\n        const type = parsedData.type\r\n\r\n        const id = await createNode({type, position, label}, chainId)\r\n\r\n        let newNode = {\r\n            id,\r\n            type,\r\n            position,\r\n            data: {label},\r\n        };\r\n\r\n        setElements((es) => es.concat(newNode));\r\n    };\r\n\r\n    const onNodeDragStop = (event: any, node: any) => {\r\n        updateNode(node)\r\n    }\r\n\r\n    const onElementDoubleClick = (event: any, element: any) => {\r\n        console.log(element)\r\n        let location = history.location.pathname\r\n        if (element.id) {\r\n            if (element.type === 'LOGIC') {\r\n                history.push(`${location}/createlogic/${element.id}`)\r\n            }\r\n            if (element.type === 'STAGE') {\r\n                history.push(`${location}/createstage/${element.id}`)\r\n            }\r\n            // if (element.type === 'DOC') {\r\n            //     history.push(`${location}/createdoc/${element.id}`)\r\n            // }\r\n            if (element.type === 'default' && (element.target || element.source)) {\r\n                console.log('edge')\r\n            }\r\n        }\r\n    }\r\n\r\n    // Init custom node types\r\n    const nodeTypes = {\r\n        LOGIC: CustomLogicNode,\r\n        STAGE: CustomStageNode\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"dndflow\">\r\n            <ReactFlowProvider>\r\n                <div className=\"reactflow-wrapper\" ref={reactFlowWrapper}>\r\n                    <ReactFlow\r\n                        nodeTypes={nodeTypes}\r\n                        elements={elements}\r\n                        onConnect={onConnect}\r\n                        onElementsRemove={onElementsRemove}\r\n                        onNodeDoubleClick={onElementDoubleClick}\r\n                        onEdgeDoubleClick={onElementDoubleClick}\r\n                        onLoad={onLoad}\r\n                        onDrop={onDrop}\r\n                        onDragOver={onDragOver}\r\n                        onNodeDragStop={onNodeDragStop}\r\n                        style={{\r\n                            width: '100%',\r\n                            height: 700,\r\n                        }}\r\n                    >\r\n                        <Controls/>\r\n                    </ReactFlow>\r\n                </div>\r\n                <Sidebar/>\r\n            </ReactFlowProvider>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DnDFlow;","import React from 'react'\r\n\r\n\r\nconst CustomFileWidget = (props: any) => {\r\n    const {schema, uiSchema} = props;\r\n    const multipleSelect = uiSchema[\"ui:options\"] && uiSchema[\"ui:options\"].multiple ? uiSchema[\"ui:options\"].multiple : false\r\n    return (\r\n        <div>\r\n            <label className={\"form-label\"}>{schema?.title}</label>\r\n            <br/>\r\n            <input type=\"file\" multiple={multipleSelect}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomFileWidget","import React, {useEffect, useState} from 'react'\r\nimport Form from \"@rjsf/bootstrap-4\";\r\nimport {Button, Switch, TextField, Typography} from \"@material-ui/core\";\r\n\r\nimport CustomFileWidget from '../custom-widgets/file-widget/CustomFileWidget'\r\nimport {PreviewFormParams} from \"../../util/Types\";\r\n\r\n\r\nconst Preview = ({jsonSchema, uiSchema, formResponses, onJsonChange, onUiChange}: PreviewFormParams) => {\r\n    const json_schema = JSON.parse(jsonSchema) ?? {}\r\n    const ui_schema = JSON.parse(uiSchema) ?? {}\r\n    const stage_data = JSON.stringify({...formResponses, json_schema: json_schema, ui_schema: ui_schema})\r\n    const [edit, setEdit] = useState(false)\r\n    const [localJson, setLocalJson] = useState('')\r\n    const [localUi, setLocalUi] = useState('')\r\n\r\n    const widgets = {\r\n        customfile: CustomFileWidget\r\n    };\r\n\r\n    useEffect(() => {\r\n        setLocalJson(jsonSchema)\r\n        setLocalUi(uiSchema)\r\n    }, [jsonSchema, uiSchema])\r\n\r\n    const copyToClipboard = () => {\r\n        navigator.clipboard.writeText(stage_data).then(() => console.log(\"success\")).catch(err => alert(err))\r\n    }\r\n\r\n    const handleJsonSchemaChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setLocalJson(event.target.value)\r\n    }\r\n\r\n    const handleUiSchemaChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setLocalUi(event.target.value)\r\n    }\r\n\r\n    const handleEditChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setEdit(event.target.checked)\r\n    }\r\n\r\n    const handleSave = () => {\r\n        console.log(localJson)\r\n        console.log(localUi)\r\n        onJsonChange(localJson)\r\n        onUiChange(localUi)\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                schema={json_schema as any}\r\n                uiSchema={ui_schema}\r\n                widgets={widgets}\r\n                onSubmit={(formData) => console.log(formData.formData)}\r\n            />\r\n            <br/>\r\n            <Switch\r\n                checked={edit}\r\n                onChange={handleEditChange}\r\n                name=\"checkedA\"\r\n                inputProps={{'aria-label': 'secondary checkbox'}}\r\n            />\r\n            {edit && <Button color={\"primary\"} variant={\"contained\"} onClick={handleSave}>Save Schemas</Button>}\r\n            {edit && <Typography variant={\"h6\"} color={\"error\"}>\r\n                Осторожно: можно легко удалить всю проделанную работу\r\n            </Typography>}\r\n            <TextField\r\n                id=\"outlined-multiline-static\"\r\n                label=\"JSON\"\r\n                multiline\r\n                fullWidth\r\n                defaultValue=\"Default Value\"\r\n                variant=\"outlined\"\r\n                InputProps={{\r\n                    readOnly: !edit,\r\n                }}\r\n                value={localJson}\r\n                onChange={handleJsonSchemaChange}\r\n                style={{marginTop: 15, marginBottom: 15}}\r\n            />\r\n            <TextField\r\n                id=\"outlined-multiline-static\"\r\n                label=\"UI\"\r\n                multiline\r\n                fullWidth\r\n                defaultValue=\"Default Value\"\r\n                variant=\"outlined\"\r\n                InputProps={{\r\n                    readOnly: !edit,\r\n                }}\r\n                value={localUi}\r\n                onChange={handleUiSchemaChange}\r\n                style={{marginTop: 15, marginBottom: 30}}\r\n            />\r\n            <br/>\r\n            <Button onClick={copyToClipboard} variant={\"contained\"} color={\"primary\"} style={{marginBottom: 15}}>Copy\r\n                FUL STAGE to Clipboard</Button>\r\n            <TextField\r\n                id=\"outlined-multiline-static\"\r\n                label=\"FULL STAGE\"\r\n                multiline\r\n                fullWidth\r\n                defaultValue=\"Default Value\"\r\n                variant=\"outlined\"\r\n                InputProps={{\r\n                    readOnly: true,\r\n                }}\r\n                value={stage_data}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preview","import React from 'react'\r\n\r\ntype Parameters = {\r\n    name: string,\r\n    path: string,\r\n    definitionData: any,\r\n    definitionUi: any,\r\n    category: string,\r\n    'ui:options': { private: boolean, multiple: boolean }\r\n};\r\n\r\nconst CustomFileField = ({\r\n                             parameters,\r\n                             onChange,\r\n                         }: { parameters: Parameters, onChange: (newParams: Parameters) => void, }) => (\r\n    <div style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}}>\r\n        <div style={{display: \"flex\", alignItems: \"baseline\", padding: \"0 10px\"}}>\r\n            <h5 style={{padding: \"0 5px\"}}>Private Upload</h5>\r\n            <input\r\n                checked={parameters['ui:options']?.private}\r\n                type=\"checkbox\"\r\n                onChange={(ev: React.ChangeEvent<any>) =>\r\n                    onChange({...parameters, \"ui:options\": {...parameters['ui:options'], private: ev.target.checked}})\r\n                }\r\n                className='card-text'\r\n            />\r\n        </div>\r\n        <div style={{display: \"flex\", alignItems: \"baseline\", padding: \"0 10px\"}}>\r\n            <h5 style={{padding: \"0 5px\"}}>Multiple Files</h5>\r\n            <input\r\n                checked={parameters['ui:options']?.multiple}\r\n                type=\"checkbox\"\r\n                onChange={(ev: React.ChangeEvent<any>) =>\r\n                    onChange({...parameters, \"ui:options\": {...parameters['ui:options'], multiple: ev.target.checked}})\r\n                }\r\n                className='card-text'\r\n            />\r\n        </div>\r\n    </div>\r\n);\r\n\r\nconst CustomFileType = {\r\n    file: {\r\n        displayName: \"File\",\r\n        matchIf: [\r\n            {\r\n                types: [\"string\"],\r\n                widget: \"customfile\"\r\n            },\r\n        ],\r\n        possibleOptions: ['private', 'multiple'],\r\n        defaultDataSchema: {},\r\n        defaultUiSchema: {\r\n            \"ui:widget\": \"customfile\",\r\n            \"ui:options\": {private: false, multiple: false}\r\n        },\r\n        type: \"string\",\r\n        cardBody: CustomFileField,\r\n        // modalBody: (parameters: any, onChange: any) => <div>\r\n        //     Extra editing options in modal appear hear\r\n        // </div>,\r\n    }\r\n};\r\n\r\nexport default CustomFileType","import React, {useEffect, useRef, useState} from \"react\";\r\nimport {Editor} from '@tinymce/tinymce-react';\r\n\r\nconst TextEditor = (props: {data: string, handleChange: (d: string) => void}) => {\r\n    const {data, handleChange} = props;\r\n    const editorRef = useRef<any>(null);\r\n    const [docData, setDocData] = useState(\"\")\r\n    const useDarkMode = window.matchMedia('(prefers-color-scheme: dark)').matches;\r\n    const handleDataChange = (d:string) => {\r\n        // console.log(d)\r\n        setDocData(d)\r\n        handleChange(d)\r\n    }\r\n\r\n    useEffect(() => {\r\n        setDocData(data)\r\n    }, [])\r\n\r\n    return (\r\n        <div style={{width: '70%', minWidth: '400px', margin: '0 auto', display: 'block', padding: 10}}>\r\n            <Editor\r\n                id={\"EditorTinyMCE\"}\r\n                onEditorChange={(newValue, editor) => handleDataChange(newValue)}\r\n                value={docData}\r\n                tinymceScriptSrc={process.env.PUBLIC_URL + '/tinymce/tinymce.min.js'}\r\n                onInit={(evt, editor) => editorRef.current = editor}\r\n                init={{\r\n                    plugins: 'autosave save print preview paste importcss searchreplace autolink directionality code visualblocks visualchars fullscreen image link media template codesample table charmap hr pagebreak nonbreaking anchor toc insertdatetime advlist lists wordcount imagetools textpattern noneditable help charmap emoticons autoresize',\r\n                    menubar: 'file edit view insert format tools table help',\r\n                    toolbar: 'undo redo | bold italic underline strikethrough | fontselect fontsizeselect formatselect | alignleft aligncenter alignright alignjustify | outdent indent |  numlist bullist | forecolor backcolor removeformat | pagebreak | charmap emoticons | fullscreen  preview save print | insertfile image media link anchor codesample | ltr rtl',\r\n                    toolbar_sticky: true,\r\n                    image_advtab: true,\r\n                    importcss_append: true,\r\n                    image_caption: true,\r\n                    noneditable_noneditable_class: 'mceNonEditable',\r\n                    toolbar_mode: 'sliding',\r\n                    contextmenu: 'link image imagetools table',\r\n                    autosave_prefix: 'tinymce-autosave-{path}{query}-',\r\n                    save_onsavecallback: function (a:any) { console.log(a); },\r\n                    // skin: useDarkMode ? 'oxide-dark' : 'oxide',\r\n                    // content_css: useDarkMode ? 'dark' : 'default',\r\n                    content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }'\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default TextEditor","import {Editor} from \"@tinymce/tinymce-react\";\r\nimport React from \"react\";\r\n\r\n\r\nconst TextViewer = (props: {data: string}) => {\r\n    const {data} = props;\r\n\r\n    return (\r\n        <Editor\r\n            id={\"ViewerTinyMCE\"}\r\n            value={data}\r\n            toolbar={false}\r\n            inline={false}\r\n            disabled={true}\r\n            tinymceScriptSrc={process.env.PUBLIC_URL + '/tinymce/tinymce.min.js'}\r\n            init={{\r\n                plugins: 'autoresize',\r\n                menubar: false,\r\n                image_advtab: true,\r\n                importcss_append: true,\r\n            }}\r\n        />\r\n    )\r\n}\r\n\r\nexport default TextViewer","import React, {useEffect, useState} from \"react\";\r\n// @ts-ignore\r\nimport {FormBuilder} from '@ginkgo-bioworks/react-json-schema-form-builder';\r\nimport Form from \"@rjsf/bootstrap-4\";\r\nimport StageOptions from '../../json-schema/StageOptions_v2.json'\r\nimport {useParams} from \"react-router-dom\";\r\nimport {JSONSchema7} from \"json-schema\";\r\nimport PreviewStage from './PreviewStage'\r\nimport CustomFileType from '../custom-widgets/file-widget/CustomFileType'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from \"../../util/Axios\";\r\nimport {taskstagesUrl} from \"../../util/Urls\";\r\nimport {IconButton} from \"@material-ui/core\";\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {RouterParams} from \"../../util/Types\";\r\nimport TextEditor from \"../text-editor/TextEditor\";\r\nimport TextViewer from \"../text-editor/TextViewer\";\r\n\r\n\r\nconst Builder = () => {\r\n    let {id, chainId} = useParams<RouterParams>();\r\n\r\n    const [schema, setSchema] = useState('')\r\n    const [uiSchema, setUiSchema] = useState('')\r\n    const [optionsSchema, setOptionsSchema] = useState<{ [index: string]: any }>(StageOptions)\r\n    const [formResponses, setFormResponses] = useState<{ [index: string]: any }>({})\r\n    const [preview, setPreview] = useState(false)\r\n    const [editorView, setEditorView] = useState(false)\r\n    const [editorData, setEditorData] = useState(\"\")\r\n\r\n    // const [existingRanks, setExistingRanks] = useState<any[]>([])\r\n    // const [isByRanks, setIsByRanks] = useState<boolean>(true)\r\n    // const [recipients, setRecipients] = useState<string[]>([])\r\n    // const [allInStages, setAllInStages] = useState<string[]>([])\r\n    // const [ranksLimits, setRanksLimits] = useState([])\r\n\r\n    useEffect(() => {\r\n        /*const getAllInStages = (prevTask: number[], previousStages: number[]) => {\r\n            if (prevTask[0]) {\r\n                axios.get(taskstagesUrl + prevTask[0] + '/')\r\n                    .then(res => res.data)\r\n                    .then(res => {\r\n                        let previousInStage = res.in_stages;\r\n                        if (previousInStage[0]) {\r\n                            previousStages.push(previousInStage[0])\r\n                            getAllInStages(res.in_stages, previousStages)\r\n                        } else {\r\n                            setAllInStages(previousStages.map(String))\r\n                        }\r\n                    })\r\n            }\r\n        }*/\r\n        /* const getAllRanks = () => {\r\n            axios.get(ranksUrl)\r\n                .then(res => res.data).then(res => {\r\n                setExistingRanks(res)\r\n            })\r\n        }*/\r\n        const getStage = () => {\r\n            axios.get(taskstagesUrl + id + '/')\r\n                .then(res => res.data)\r\n                .then(res => {\r\n                    const {id, json_schema, ui_schema, rich_text, webhook_address, webhook_params, ...options} = res\r\n\r\n                    options[\"webhook_address\"] = webhook_address ? webhook_address : undefined\r\n                    options[\"webhook_params\"] = webhook_params ? JSON.stringify(webhook_params) : undefined\r\n\r\n                    // let parse_json_schema = JSON.parse(json_schema)\r\n                    // let parse_ui_schema = JSON.parse(ui_schema)\r\n                    // console.log(parse_json_schema)\r\n                    // console.log(parse_ui_schema)\r\n                    // // getAllInStages(res.in_stages, res.in_stages)\r\n                    setSchema(json_schema)\r\n                    setUiSchema(ui_schema)\r\n                    setFormResponses(options)\r\n                    setEditorData(rich_text)\r\n                })\r\n        }\r\n\r\n        if (id) {\r\n            getStage()\r\n            // getAllRanks()\r\n        }\r\n    }, [id])\r\n\r\n    /*function formPropsForSchema(arrayOfNames: string[]) {\r\n        let propsForSchema: { [index: string]: { [index: string]: string } } = {};\r\n        arrayOfNames.forEach((rank, index, array) => {\r\n            propsForSchema[index.toString()] = {title: rank, type: \"boolean\"}\r\n        })\r\n        return propsForSchema;\r\n    }\r\n\r\n    const getRanksLimits = () => {\r\n            axios.get(rankslimitsUrl)\r\n                .then(res => res.data)\r\n                .then(res => {\r\n                    setRanksLimits(res)\r\n                })\r\n        }\r\n\r\n    useEffect(() => {\r\n        if (formResponses) {\r\n            let transition: { [index: string]: { [index: string]: any } } = formResponses['transition']\r\n            if (transition) {\r\n                let sentBy = transition['assign_user_by']\r\n                if (sentBy) {\r\n                    let whichSent: string = formResponses['transition']['assign_user_by'];\r\n                    if (whichSent === 'ranks') {\r\n                        getRanksLimits()\r\n                        setIsByRanks(true)\r\n                    } else if (whichSent === 'prevStage') {\r\n                        setRanksLimits([])\r\n                        setIsByRanks(false)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }, [formResponses])\r\n\r\n    useEffect(() => {\r\n        if (existingRanks) {\r\n            let propExistingRanks = formPropsForSchema(existingRanks.map(item => item.name));\r\n            let newOptionSchema = optionsSchema;\r\n            newOptionSchema.properties.transition.dependencies.assign_user_by.oneOf[0].properties.ranks.properties = propExistingRanks;\r\n            setOptionsSchema(newOptionSchema)\r\n        }\r\n    }, [existingRanks])\r\n\r\n    useEffect(() => {\r\n        let propPrevInStages = formPropsForSchema(allInStages);\r\n        let newOptionSchema = optionsSchema;\r\n        newOptionSchema.properties.transition.dependencies.assign_user_by.oneOf[1].properties.by_previous_stages.properties = propPrevInStages;\r\n        setOptionsSchema(newOptionSchema)\r\n    }, [allInStages])*/\r\n\r\n    const handleSubmit = () => {\r\n        let json_schema = null\r\n        let ui_schema = null\r\n        if (schema && uiSchema) {\r\n            // json_schema = JSON.parse(schema)\r\n            // ui_schema = JSON.parse(uiSchema)\r\n            json_schema = schema\r\n            ui_schema = uiSchema\r\n        }\r\n        /*let transition: { [key: string]: string | any } = formResponses['transition'];\r\n\r\n        if (transition['assign_user_by'] === 'ranks') {\r\n            // debugger\r\n            existingRanks.forEach((item, index, array) => {\r\n                if (transition['ranks'][index]) {\r\n                    let formdata = {\r\n                        open_limit: 0,\r\n                        total_limit: 0,\r\n                        list_permission: false,\r\n                        close_submission: false,\r\n                        close_selection: false,\r\n                        stage: +id,\r\n                        rank: item['id']\r\n                    }\r\n\r\n                    let existingRank: boolean[] = [];\r\n                    ranksLimits.forEach((rankLimit) => {\r\n                        if (rankLimit['rank'] === item['id'] && rankLimit['stage'] === +id) {\r\n                            existingRank.push(true)\r\n                        } else {\r\n                            existingRank.push(false)\r\n                        }\r\n                    })\r\n\r\n                    if (existingRank.includes(false) || !(ranksLimits.length != 0)) {\r\n                        axios\r\n                            .post(rankslimitsUrl, formdata)\r\n                            // .then((res: any) => alert(\"Saved\"))\r\n                            .catch((err: any) => alert(err));\r\n                    }\r\n\r\n                } else {\r\n                    ranksLimits.forEach((rankLimit) => {\r\n                        // console.log(rankLimit['rank'], item['id'])\r\n                        // console.log(rankLimit['stage'], +id)\r\n                        // console.log('========')\r\n                        if (rankLimit['rank'] === item['id'] && rankLimit['stage'] === +id) {\r\n                            axios\r\n                                .delete(rankslimitsUrl + rankLimit['id'] + '/')\r\n                                // .then((res: any) => alert(\"Delete rankLimit for \" + item['name'] + \" rank\"))\r\n                                .catch((err: any) => alert(err));\r\n                        }\r\n                    })\r\n\r\n                }\r\n            })\r\n        } else if (transition['assign_user_by'] === 'prevStage') {\r\n        }*/\r\n        let {chain, webhook_params, ...responses} = formResponses\r\n\r\n        const parsed_webhook_params = webhook_params ? JSON.parse(webhook_params) : null;\r\n\r\n        let data = {...responses, json_schema: json_schema, ui_schema: ui_schema, rich_text: editorData, webhook_params: parsed_webhook_params}\r\n        console.log(JSON.stringify(data))\r\n        axios\r\n            .patch(taskstagesUrl + id + '/', data)\r\n            .then((res: any) => alert(\"Saved\"))\r\n            .catch((err: any) => alert(err));\r\n    }\r\n\r\n    const changePreviewMode = () => {\r\n        setPreview(p => !p)\r\n    }\r\n\r\n    const handleJsonSchemaChange = (schema: string) => {\r\n        // let parsed = JSON.parse(schema)\r\n        setSchema(schema)\r\n    }\r\n\r\n    const handleUiSchemaChange = (schema: string) => {\r\n        // let parsed = JSON.parse(schema)\r\n        setUiSchema(schema)\r\n    }\r\n\r\n    const handleEditorChange = (d: string) => {\r\n        console.log(d)\r\n        setEditorData(d)\r\n    }\r\n\r\n    const handleEditorViewMode = () => {\r\n        setEditorView(!editorView)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div style={{display: 'block', float: 'right'}}>\r\n                <IconButton onClick={handleEditorViewMode}>\r\n                    <CreateIcon fontSize={\"large\"}/>\r\n                </IconButton>\r\n                <IconButton onClick={changePreviewMode}>\r\n                    {!preview ?\r\n                        <VisibilityIcon fontSize={\"large\"}/>\r\n                        :\r\n                        <VisibilityOffIcon fontSize={\"large\"}/>\r\n                    }\r\n                </IconButton>\r\n            </div>\r\n            {!preview ?\r\n                <div>\r\n                    {editorView ?\r\n                        <TextEditor data={editorData} handleChange={handleEditorChange}/>\r\n                        :\r\n                        <FormBuilder\r\n                            schema={schema}\r\n                            uischema={uiSchema}\r\n                            onChange={(newSchema: string, newUiSchema: string) => {\r\n                                setSchema(newSchema)\r\n                                setUiSchema(newUiSchema)\r\n                            }}\r\n                            mods={\r\n                                {\r\n                                    customFormInputs: {...CustomFileType}\r\n                                }\r\n                            }\r\n                        />}\r\n                    <div style={{width: '70%', minWidth: '400px', margin: '0 auto', display: 'block', padding: 10}}>\r\n                        <Form\r\n                            schema={optionsSchema as JSONSchema7}\r\n                            formData={formResponses}\r\n                            onChange={(e: { formData: object }) => setFormResponses(e.formData)}\r\n                            onSubmit={handleSubmit}\r\n                        />\r\n                    </div>\r\n                    {/*<div>\r\n                        {JSON.stringify(ranksLimits)}\r\n                    </div>*/}\r\n\r\n\r\n                </div>\r\n                :\r\n                <div style={{width: '70%', minWidth: '400px', margin: '0 auto', display: 'block', padding: 10}}>\r\n                    {editorView ?\r\n                        <TextViewer data={editorData} />\r\n                        :\r\n                        <PreviewStage\r\n                            jsonSchema={schema}\r\n                            uiSchema={uiSchema}\r\n                            formResponses={formResponses}\r\n                            onJsonChange={handleJsonSchemaChange}\r\n                            onUiChange={handleUiSchemaChange}\r\n                        />\r\n                    }\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Builder\r\n\r\n\r\n","import {retrieveSchema, toPathSchema} from \"@rjsf/core/lib/utils\";\r\nimport _get from \"lodash/get\";\r\nimport _isEmpty from \"lodash/isEmpty\";\r\n\r\n/**\r\n * Get flatten fields from schema\r\n * @param schema\r\n * @param formData\r\n * @returns {*[]}\r\n */\r\nconst getFormFields = (schema, formData = {}) => {\r\n    const retrievedSchema = retrieveSchema(\r\n        schema\r\n    );\r\n\r\n    const pathSchema = toPathSchema(\r\n        retrievedSchema,\r\n        \"\",\r\n        schema,\r\n        formData\r\n    );\r\n\r\n    const getFieldNames = (pathSchema, formData) => {\r\n        const getAllPaths = (_obj, acc = [], paths = [\"\"]) => {\r\n            Object.keys(_obj).forEach(key => {\r\n                if (typeof _obj[key] === \"object\") {\r\n                    let newPaths = paths.map(path => `${path}.${key}`);\r\n                    // If an object is marked with additionalProperties, all its keys are valid\r\n                    if (_obj[key].__rjsf_additionalProperties && _obj[key].$name !== \"\") {\r\n                        acc.push(_obj[key].$name);\r\n                    } else {\r\n                        getAllPaths(_obj[key], acc, newPaths);\r\n                    }\r\n                } else if (key === \"$name\" && _obj[key] !== \"\") {\r\n                    paths.forEach(path => {\r\n                        path = path.replace(/^\\./, \"\");\r\n                        const formValue = _get(formData, path);\r\n                        // adds path to fieldNames if it points to a value\r\n                        // or an empty object/array\r\n                        if (typeof formValue !== \"object\" || _isEmpty(formValue)) {\r\n                            acc.push(path);\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n            return acc;\r\n        };\r\n        return getAllPaths(pathSchema);\r\n    };\r\n\r\n    return getFieldNames(pathSchema, formData);\r\n};\r\n\r\nexport default getFormFields","import React, {useEffect, useState} from \"react\";\r\nimport Form from \"@rjsf/bootstrap-4\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {JSONSchema7} from \"json-schema\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport axios from '../../util/Axios'\r\nimport {conditionalstagesUrl, taskstagesUrl} from \"../../util/Urls\";\r\nimport GetFormFields from './GetFormFields'\r\nimport getFormFields from './GetFormFields'\r\nimport {RouterParams} from \"../../util/Types\";\r\n\r\n\r\nconst Builder = () => {\r\n    const {id} = useParams<RouterParams>();\r\n\r\n    const [ready, setReady] = useState(false)\r\n    const [fields, setFields] = useState<string[]>([]);\r\n    const [schema, setSchema] = useState<{}>({})\r\n    const [formResponses, setFormResponses] = useState({})\r\n    const [connectedStages, setConnectedStages] = useState<any[]>()\r\n    const [pingPong, setPingPong] = useState<boolean>(false)\r\n\r\n    useEffect(() => {\r\n        // Get current stage's data\r\n        axios.get(conditionalstagesUrl + id + '/').then(res => res.data).then(currentStage => {\r\n            setFormResponses(currentStage.conditions)\r\n            setPingPong(currentStage.pingpong)\r\n            console.log(\"PING PONG\", currentStage.pingpong)\r\n        })\r\n    }, [id])\r\n\r\n    useEffect(() => {\r\n        const getStage = (stageId?: number | string) => {\r\n            if (stageId) {\r\n                let taskStage = axios.get(taskstagesUrl + stageId + '/').then(res => res.data)\r\n                if (taskStage) {\r\n                    return taskStage\r\n                } else {\r\n                    return axios.get(conditionalstagesUrl + stageId + '/').then(res => res.data)\r\n                }\r\n            }\r\n            return axios.get(conditionalstagesUrl + id + '/').then(res => res.data)\r\n        }\r\n\r\n        const getConnectedStages = async (ids: number[]) => {\r\n            return ids.map(async connId => {\r\n                let stage = await getStage(connId)\r\n                return {[connId]: stage}\r\n            })\r\n        }\r\n\r\n        const getData = async () => {\r\n            let currentStage = await getStage()\r\n\r\n            let connectedIds: undefined\r\n            if (pingPong) {\r\n                connectedIds = currentStage.out_stages\r\n            } else {\r\n                connectedIds = currentStage.in_stages\r\n            }\r\n            if (connectedIds) {\r\n                let connStages = await getConnectedStages(connectedIds)\r\n                Promise.all(connStages).then(res => {\r\n                    if (Object.keys(res).length > 0) {\r\n                        setConnectedStages(res)\r\n                        setReady(true)\r\n                    }\r\n                })\r\n            }\r\n        }\r\n\r\n        if (id) {\r\n            // noinspection JSIgnoredPromiseFromCall\r\n            getData()\r\n        }\r\n\r\n    }, [id, pingPong])\r\n\r\n    useEffect(() => {\r\n        /**\r\n         * Get fields from dependencies\r\n         * @param dep\r\n         * @returns {any}\r\n         */\r\n        const getDependentFields = (dep: any) => {\r\n            let data = null\r\n            if (dep.hasOwnProperty(\"oneOf\")) {\r\n                data = dep.oneOf\r\n            }\r\n            if (dep.hasOwnProperty(\"allOf\")) {\r\n                data = dep.allOf\r\n            }\r\n            if (data) {\r\n                return data.map((nested: any) => {\r\n                    let fiction = {type: \"object\", ...nested}\r\n                    return getFormFields(fiction)\r\n                }).flat()\r\n            }\r\n            return []\r\n        }\r\n\r\n        if (connectedStages && connectedStages.length > 0) {\r\n            const allFields = connectedStages.map(stageObject => {\r\n                let stage = Object.values(stageObject)[0] as any\r\n                let stageSchema = JSON.parse(stage.json_schema)\r\n\r\n                // Get dependencies from stage's schema\r\n                let deps = {}\r\n                if (stageSchema && stageSchema.dependencies && Object.keys(stageSchema.dependencies).length > 0) {\r\n                    deps = stageSchema.dependencies\r\n                }\r\n\r\n                // Get fields from schema's properties and dependencies\r\n                let stageFields = GetFormFields(stageSchema)\r\n                let depValues = Object.values(deps)\r\n                if (depValues.length > 0) {\r\n                    let depFields = depValues.map((dep: any) => getDependentFields(dep)).flat()\r\n                    stageFields = Array.from(new Set([...fields, ...depFields]))\r\n                }\r\n\r\n                return stageFields\r\n            }).flat()\r\n\r\n            setFields(allFields)\r\n        }\r\n    }, [pingPong, connectedStages])\r\n\r\n    useEffect(() => {\r\n        setSchema({\r\n            items: {\r\n                type: 'object',\r\n                title: 'Logic',\r\n                properties: {\r\n                    field: {\r\n                        enum: fields,\r\n                        title: 'Field',\r\n                        type: 'string'\r\n                    },\r\n                    condition: {\r\n                        enum: [\r\n                            '==',\r\n                            '!=',\r\n                            '>',\r\n                            '<',\r\n                            '>=',\r\n                            '<=',\r\n                            'ARRAY-CONTAINS',\r\n                            'ARRAY-CONTAINS-NOT'\r\n                        ],\r\n                        title: 'Condition',\r\n                        type: 'string'\r\n                    },\r\n                    value: {\r\n                        title: 'Value',\r\n                        type: 'string'\r\n                    }\r\n                },\r\n                dependencies: {},\r\n                required: []\r\n            },\r\n            title: 'Logic Array',\r\n            type: 'array',\r\n            dependencies: {},\r\n            required: []\r\n        })\r\n    }, [fields])\r\n\r\n    const handleSubmit = () => {\r\n        let data = {conditions: formResponses, pingpong: pingPong}\r\n        console.log(formResponses)\r\n\r\n        axios\r\n            .patch(conditionalstagesUrl + id + '/', data)\r\n            .then((res: any) => alert(\"Saved\"))\r\n            .catch((err: any) => alert(err));\r\n    }\r\n\r\n    const handleChangePingPong = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setPingPong(event.target.checked);\r\n    }\r\n\r\n    return (\r\n        <div style={{width: '70%', minWidth: '400px', margin: '0 auto', display: 'block', padding: 10}}>\r\n            {ready ?\r\n                <div>\r\n                    <FormControlLabel\r\n                        control={<Checkbox checked={pingPong} onChange={handleChangePingPong} name=\"PingPong\"\r\n                                           color=\"primary\"/>}\r\n                        label=\"Ping Pong\"\r\n                    />\r\n                    <Form\r\n                        schema={schema as JSONSchema7}\r\n                        formData={formResponses}\r\n                        onChange={(e: { formData: object }) => setFormResponses(e.formData)}\r\n                        onSubmit={handleSubmit}/>\r\n                </div>\r\n                :\r\n                <p>No node connection or end_ui detected. Connect to one or check if form has fields.</p>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Builder\r\n\r\n\r\n","import React from \"react\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\n\r\nimport {Button, Grid} from '@material-ui/core'\r\nimport axios from \"../../util/Axios\";\r\n\r\nimport {casesUrl, tasksUrl} from '../../util/Urls'\r\nimport {RouterParams} from \"../../util/Types\";\r\n\r\nconst Builder = () => {\r\n    let {id, chainId} = useParams<RouterParams>();\r\n    const history = useHistory();\r\n\r\n    const handleCreateStage = () => {\r\n        let location = history.location.pathname.split('/actions')[0]\r\n        console.log(location)\r\n        history.push(`${location}/createstage/${id}`)\r\n    }\r\n\r\n    const handleCreateTask = async () => {\r\n        let location = history.location.pathname.split('/actions')[0]\r\n        let caseData = await axios.post(casesUrl, {chain: chainId})\r\n            .then(res => res.data)\r\n        console.log(caseData)\r\n        let taskData = await axios.post(tasksUrl, {case: caseData.id, stage: id})\r\n            .then(res => res.data)\r\n        console.log(taskData)\r\n        history.push(`${location}/task/${taskData.id}`)\r\n    }\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid container justify=\"center\" style={{background: '#7FB3D5'}} component={\"div\"}>\r\n                <Grid item style={{margin: 20}}>\r\n                    <Button onClick={handleCreateStage}>Create Form</Button>\r\n                </Grid>\r\n                <Grid item style={{margin: 20}}>\r\n                    <Button onClick={handleCreateTask}>Create Task (for test)</Button>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Builder","import React, {useEffect, useState} from \"react\";\r\nimport Form from \"@rjsf/bootstrap-4\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport axios from \"../../util/Axios\";\r\nimport {taskstagesUrl, tasksUrl} from '../../util/Urls'\r\nimport {RouterParams} from \"../../util/Types\";\r\n\r\n\r\nconst Builder = () => {\r\n    const [schema, setSchema] = useState({})\r\n    const [uiSchema, setUiSchema] = useState({})\r\n    const [formResponses, setFormResponses] = useState({})\r\n    let {id} = useParams<RouterParams>();\r\n\r\n    useEffect(() => {\r\n        const getTask = () => {\r\n            return axios.get(tasksUrl + id).then(res => res.data)\r\n        }\r\n        const getStage = (stageId: string | number) => {\r\n            return axios.get(taskstagesUrl + stageId).then(res => res.data)\r\n        }\r\n        const setFormData = async () => {\r\n            let task = await getTask()\r\n            let stage = await getStage(task.stage)\r\n            console.log(task, stage)\r\n            setFormResponses(task.responses)\r\n            setSchema(stage.json_schema)\r\n            setUiSchema(stage.ui_schema)\r\n        }\r\n        if (id) {\r\n            setFormData()\r\n        }\r\n    }, [id])\r\n\r\n    const handleSubmit = () => {\r\n        console.log(formResponses)\r\n        let data = {responses: formResponses}\r\n        axios.patch(tasksUrl + id, data)\r\n    }\r\n\r\n    return (\r\n        <div style={{width: '70%', minWidth: '400px', margin: '0 auto', display: 'block', padding: 10}}>\r\n            <Form\r\n                schema={schema}\r\n                uiSchema={uiSchema}\r\n                formData={formResponses}\r\n                onChange={(e) => setFormResponses(e.formData)}\r\n                onSubmit={handleSubmit}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Builder\r\n\r\n\r\n","import firebase from 'firebase';\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCXiwOUNsbzKH7sbSAZrqA9f7VOeCMdUOQ\",\r\n    authDomain: \"gigaturnip-b6b5b.firebaseapp.com\",\r\n    projectId: \"gigaturnip-b6b5b\",\r\n    storageBucket: \"gigaturnip-b6b5b.appspot.com\",\r\n    messagingSenderId: \"414429242328\",\r\n    appId: \"1:414429242328:web:a4685f5ac6895ea767c8ad\",\r\n    measurementId: \"G-Y8JTEJMTET\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n// const db = firebase.firestore();\r\n// if (window.location.hostname === \"localhost\") {\r\n//   db.useEmulator(\"localhost\", 8080);\r\n// }\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nfirebase.firestore().settings({\r\n    ignoreUndefinedProperties: true,\r\n})\r\nexport const signInWithGoogle = () => {\r\n    provider.setCustomParameters({\r\n        prompt: 'select_account'\r\n    });\r\n    return firebase.auth().signInWithPopup(provider);\r\n};\r\n\r\nexport const signOut = () => {\r\n    return firebase.auth().signOut()\r\n        .then(() => localStorage.removeItem(\"token\"))\r\n        .then(() => window.location.reload())\r\n}\r\n\r\nexport default firebase;","import React, {useEffect, useState} from \"react\";\r\nimport firebase from \"./Firebase\";\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nexport const AuthProvider = ({children}) => {\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged((user) => {\r\n            if (user) {\r\n                setCurrentUser(user)\r\n                user.getIdToken(true).then((idToken) => {\r\n                    localStorage.setItem(\"token\", idToken);\r\n                })\r\n            }\r\n        });\r\n        firebase.auth().onIdTokenChanged(user => {\r\n            if (user) {\r\n                user.getIdToken(false).then((idToken) => {\r\n                    localStorage.setItem(\"token\", idToken);\r\n                })\r\n            }\r\n        })\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n            value={{\r\n                currentUser\r\n            }}\r\n        >\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n","import React, {useContext, useEffect, useState} from 'react';\r\nimport clsx from 'clsx';\r\nimport {createStyles, makeStyles, Theme, useTheme} from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\n\r\nimport {\r\n    AppBar,\r\n    Button,\r\n    CssBaseline,\r\n    Drawer,\r\n    FormControl,\r\n    Grid,\r\n    IconButton,\r\n    List,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    MenuItem,\r\n    Select,\r\n    Toolbar,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport {signInWithGoogle, signOut} from '../../util/Firebase';\r\nimport {AuthContext} from \"../../util/Auth\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport axios from '../../util/Axios';\r\n\r\nimport {campaignsUrl} from '../../util/Urls';\r\nimport { AppbarParams, CampaignParams } from '../../util/Types';\r\nimport {getCampaigns} from \"../../util/Util\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            display: 'flex',\r\n        },\r\n        appBar: {\r\n            zIndex: theme.zIndex.drawer + 1,\r\n            transition: theme.transitions.create(['width', 'margin'], {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen,\r\n            }),\r\n        },\r\n        appBarShift: {\r\n            marginLeft: drawerWidth,\r\n            width: `calc(100% - ${drawerWidth}px)`,\r\n            transition: theme.transitions.create(['width', 'margin'], {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n        },\r\n        menuButton: {\r\n            marginRight: 36,\r\n        },\r\n        hide: {\r\n            display: 'none',\r\n        },\r\n        drawer: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n            whiteSpace: 'nowrap',\r\n        },\r\n        drawerOpen: {\r\n            width: drawerWidth,\r\n            transition: theme.transitions.create('width', {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n        },\r\n        drawerClose: {\r\n            transition: theme.transitions.create('width', {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen,\r\n            }),\r\n            overflowX: 'hidden',\r\n            width: theme.spacing(7) + 1,\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: theme.spacing(9) + 1,\r\n            },\r\n        },\r\n        toolbar: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'flex-end',\r\n            padding: theme.spacing(0, 1),\r\n            // necessary for content to be below app bar\r\n            ...theme.mixins.toolbar,\r\n        },\r\n        content: {\r\n            flexGrow: 1,\r\n            // padding: theme.spacing(3),\r\n        },\r\n        title: {\r\n            flexGrow: 1\r\n        },\r\n        formControl: {\r\n            margin: theme.spacing(1),\r\n            alignItems: 'center'\r\n            // minWidth: 120,\r\n        },\r\n        selectEmpty: {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n        select: {},\r\n        selectIcon: {\r\n            fill: 'white',\r\n            top: 'calc(50% - 14px)'\r\n        },\r\n    }),\r\n);\r\n\r\n\r\nconst Appbar = (props: AppbarParams) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const history = useHistory();\r\n    const {campaignId} = useParams<{ campaignId: string }>();\r\n    const {currentUser} = useContext(AuthContext)\r\n    const {children} = props;\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [campaign, setCampaign] = useState<number | string | unknown>(campaignId);\r\n    const [allCampaigns, setAllCampaigns] = useState<CampaignParams[]>([])\r\n\r\n    console.log(\"CURRENT CAMPAIGN\", campaignId)\r\n\r\n    useEffect(() => {\r\n        getCampaigns().then(res => setAllCampaigns(res))\r\n    }, [])\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleOptionClick = (page: string) => {\r\n        history.push(`/campaign/${campaignId}/${page}`)\r\n    };\r\n\r\n    const handleCampaignChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n        let value = event.target.value;\r\n        console.log(value)\r\n        setCampaign(value)\r\n        history.push(`/campaign/${value}`)\r\n    }\r\n\r\n    const redirectToMain = () => {\r\n        history.push('/')\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline/>\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, {\r\n                            [classes.hide]: open,\r\n                        })}\r\n                    >\r\n                        <MenuIcon/>\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" noWrap style={{cursor: \"pointer\"}} onClick={redirectToMain}>\r\n                        GigaTurnip Admin\r\n                    </Typography>\r\n                    <Grid className={classes.title} />\r\n                    <Typography>{currentUser?.email}</Typography>\r\n                    <FormControl className={classes.formControl} size=\"small\">\r\n                        <Select\r\n                            className={classes.select}\r\n                            autoWidth\r\n                            labelId=\"campaign-select-label\"\r\n                            id=\"campaign-select-label\"\r\n                            value={campaign}\r\n                            onChange={handleCampaignChange}\r\n                            label=\"Campaign\"\r\n                            disableUnderline\r\n                            style={{color: 'white'}}\r\n                            inputProps={{\r\n                                classes: {\r\n                                    icon: classes.selectIcon,\r\n                                },\r\n                            }}\r\n                        >\r\n                            {allCampaigns.map(camp => <MenuItem key={`${camp.name}_${camp.id}`}\r\n                                                                value={camp.id}>{camp.name}</MenuItem>)}\r\n                        </Select>\r\n                    </FormControl>\r\n                    {currentUser ?\r\n                        <Button onClick={signOut} color={\"inherit\"}>\r\n                            Log out\r\n                        </Button>\r\n                        :\r\n                        <Button onClick={signInWithGoogle} color={\"inherit\"}>\r\n                            Login\r\n                        </Button>\r\n                    }\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                variant=\"permanent\"\r\n                className={clsx(classes.drawer, {\r\n                    [classes.drawerOpen]: open,\r\n                    [classes.drawerClose]: !open,\r\n                })}\r\n                classes={{\r\n                    paper: clsx({\r\n                        [classes.drawerOpen]: open,\r\n                        [classes.drawerClose]: !open,\r\n                    }),\r\n                }}\r\n            >\r\n                <div className={classes.toolbar}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === 'rtl' ? <ChevronRightIcon/> : <ChevronLeftIcon/>}\r\n                    </IconButton>\r\n                </div>\r\n                <Divider/>\r\n                <List>\r\n                    {/*<ListItem button onClick={() => handleOptionClick(\"manual\")}>*/}\r\n                    {/*    <ListItemIcon><MenuBookIcon/></ListItemIcon>*/}\r\n                    {/*    <ListItemText primary={\"Manual\"}/>*/}\r\n                    {/*</ListItem>*/}\r\n                    <ListItem button onClick={() => handleOptionClick(\"chain\")}>\r\n                        <ListItemIcon><InboxIcon/></ListItemIcon>\r\n                        <ListItemText primary={\"Chains\"}/>\r\n                    </ListItem>\r\n                </List>\r\n            </Drawer>\r\n            <main className={classes.content}>\r\n                <div className={classes.toolbar}/>\r\n                {children}\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Appbar\r\n","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {CardParams} from \"../../util/Types\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 300,\r\n        // height: 200\r\n    },\r\n    extra: {\r\n        marginBottom: 15\r\n    }\r\n});\r\n\r\nconst ParentCard = (props: CardParams) => {\r\n    const classes = useStyles();\r\n    const {id, name, description, campaign} = props.data;\r\n    const {onCardButtonClick, openCampaignInfo} = props;\r\n\r\n    const handleOpen = () => {\r\n        onCardButtonClick(id)\r\n    }\r\n\r\n    const redirectToInfoPage = () => {\r\n        if (openCampaignInfo) {\r\n            openCampaignInfo(id)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardContent>\r\n                <Typography variant=\"h5\" component=\"h2\" gutterBottom={true}>\r\n                    {name}\r\n                </Typography>\r\n                <Typography className={classes.extra} variant=\"subtitle2\" color=\"textSecondary\">\r\n                    ID: {id} {campaign && `Campaign: ${campaign}`}\r\n                </Typography>\r\n                <Typography variant=\"body1\" component=\"p\">\r\n                    {description ? description : <br/>}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                <Button size=\"small\" onClick={handleOpen}>Open</Button>\r\n                {/*<Button size=\"small\" onClick={redirectToInfoPage}>Info</Button>*/}\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default ParentCard","import React, {useState} from \"react\";\r\nimport {\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogActions,\r\n    DialogContent,\r\n    Grid,\r\n    TextField,\r\n    Button\r\n} from \"@material-ui/core\";\r\nimport {DialogParams} from \"../../util/Types\";\r\n\r\n\r\nconst ParentDialog = (props: DialogParams) => {\r\n    const {title, onClose, onSave, open} = props;\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\r\n    const handleClose = () => {\r\n        onClose();\r\n    };\r\n\r\n    const handleSave = () => {\r\n        let data = {name, description}\r\n        onSave(data)\r\n    }\r\n\r\n    const handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        let value = event.target.value\r\n        if (value) {\r\n            setName(value)\r\n        } else {\r\n            setName('')\r\n        }\r\n    };\r\n\r\n    const handleDescriptionChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        let value = event.target.value\r\n        if (value) {\r\n            setDescription(value)\r\n        } else {\r\n            setDescription('')\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n            <DialogTitle>{title}</DialogTitle>\r\n            <DialogContent>\r\n                <Grid container justifyContent={\"center\"}>\r\n                    <Grid container item><TextField fullWidth label={\"Name\"} onChange={handleNameChange}/></Grid>\r\n                    <Grid container item>\r\n                        <TextField fullWidth label={\"Description\"} multiline rows={4}\r\n                                   onChange={handleDescriptionChange}/>\r\n                    </Grid>\r\n                </Grid>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleSave}>Save</Button>\r\n                <Button onClick={handleClose}>Close</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default ParentDialog","import React, {useEffect, useState} from \"react\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport {Button, Grid} from \"@material-ui/core\";\r\nimport Card from \"../cards/Card\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Dialog from '../dialogs/Dialog'\r\nimport {ChainParams, CreateChainParams, RouterParams} from \"../../util/Types\";\r\nimport {createChain, getChains} from \"../../util/Util\";\r\n\r\nconst Builder = () => {\r\n    const history = useHistory()\r\n    const [chains, setChains] = useState<ChainParams[]>([])\r\n    const [open, setOpen] = useState(false);\r\n    const {campaignId} = useParams<RouterParams>()\r\n\r\n    useEffect(() => {\r\n        getChains(campaignId).then(res => setChains(res))\r\n    }, [campaignId])\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleDialogSave = (data: any) => {\r\n        if (data.name && campaignId) {\r\n            let parsedData = {...data, campaign: parseInt(campaignId)}\r\n            handleAddChain(parsedData)\r\n            setOpen(false);\r\n        } else {\r\n            alert('error: No name or campaign')\r\n        }\r\n    }\r\n\r\n    const handleAddChain = (data: CreateChainParams) => {\r\n        createChain(data).then(res => window.location.reload())\r\n    };\r\n\r\n    const handleCardRedirect = (id: string | number) => {\r\n        history.push(`${history.location.pathname}/${id}`)\r\n    }\r\n\r\n    return (\r\n        <Grid container justifyContent={\"center\"}>\r\n            <Dialog title={\"Add Chain\"} open={open} onSave={handleDialogSave} onClose={handleClose}/>\r\n            <Grid container style={{padding: 20}}>\r\n                <Button variant={\"contained\"} color={\"primary\"} startIcon={<AddIcon/>} onClick={handleClickOpen}>Add\r\n                    Chain</Button>\r\n            </Grid>\r\n            {chains.map(chain => (\r\n                <Grid item style={{padding: 10}} key={chain.id}>\r\n                    <Card data={chain} onCardButtonClick={handleCardRedirect}/>\r\n                </Grid>\r\n            ))}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Builder\r\n\r\n\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {Button, Grid} from \"@material-ui/core\";\r\nimport Card from \"../cards/Card\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Dialog from '../dialogs/Dialog'\r\nimport {CampaignParams, CreateCampaignParams} from \"../../util/Types\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {createCampaign, getCampaigns} from \"../../util/Util\";\r\n\r\n\r\nconst Builder = () => {\r\n    const [campaigns, setCampaigns] = useState<CampaignParams[]>([])\r\n    const [open, setOpen] = useState(false);\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        getCampaigns().then(res => setCampaigns(res))\r\n    }, [])\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleDialogSave = (data: any) => {\r\n        if (data.name) {\r\n            handleCampaignAdd(data)\r\n            setOpen(false);\r\n        } else {\r\n            alert('error: No name')\r\n        }\r\n    }\r\n\r\n    const openCampaignInfo = (id: string | number) => {\r\n        history.push(`/campaign/about/${id}`)\r\n    }\r\n\r\n    const handleCampaignAdd = (data: CreateCampaignParams) => {\r\n        createCampaign(data).then(res => window.location.reload())\r\n    };\r\n\r\n    const handleCardRedirect = (id: string | number) => {\r\n        history.push(`/campaign/${id}`)\r\n    }\r\n\r\n    return (\r\n        <Grid container justifyContent={\"center\"}>\r\n            <Dialog title={\"Add campaign\"} open={open} onSave={handleDialogSave} onClose={handleClose}/>\r\n            <Grid container style={{padding: 20}}>\r\n                <Button variant={\"contained\"} color={\"primary\"} startIcon={<AddIcon/>} onClick={handleClickOpen}>Add\r\n                    Campaign</Button>\r\n            </Grid>\r\n            {campaigns.map(campaign => (\r\n                <Grid item key={campaign.id} style={{padding: 10}}>\r\n                    <Card data={campaign} onCardButtonClick={handleCardRedirect} openCampaignInfo={openCampaignInfo}/>\r\n                </Grid>\r\n            ))}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Builder\r\n\r\n\r\n","import React, {useContext} from 'react';\r\nimport {createStyles, makeStyles, Theme} from '@material-ui/core/styles';\r\nimport {AppBar, Button, CssBaseline, Toolbar, Typography} from \"@material-ui/core\";\r\nimport {signInWithGoogle, signOut} from '../../util/Firebase';\r\nimport {AuthContext} from \"../../util/Auth\";\r\nimport {AppbarParams} from \"../../util/Types\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            display: 'flex',\r\n        },\r\n        appBar: {\r\n            zIndex: theme.zIndex.drawer + 1,\r\n            transition: theme.transitions.create(['width', 'margin'], {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen,\r\n            }),\r\n        },\r\n        appBarShift: {\r\n            marginLeft: drawerWidth,\r\n            width: `calc(100% - ${drawerWidth}px)`,\r\n            transition: theme.transitions.create(['width', 'margin'], {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n        },\r\n        menuButton: {\r\n            marginRight: 36,\r\n        },\r\n        hide: {\r\n            display: 'none',\r\n        },\r\n        drawer: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n            whiteSpace: 'nowrap',\r\n        },\r\n        drawerOpen: {\r\n            width: drawerWidth,\r\n            transition: theme.transitions.create('width', {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n        },\r\n        drawerClose: {\r\n            transition: theme.transitions.create('width', {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen,\r\n            }),\r\n            overflowX: 'hidden',\r\n            width: theme.spacing(7) + 1,\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: theme.spacing(9) + 1,\r\n            },\r\n        },\r\n        toolbar: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'flex-end',\r\n            padding: theme.spacing(0, 1),\r\n            // necessary for content to be below app bar\r\n            ...theme.mixins.toolbar,\r\n        },\r\n        content: {\r\n            flexGrow: 1,\r\n            // padding: theme.spacing(3),\r\n        },\r\n        title: {\r\n            flexGrow: 1\r\n        }\r\n    }),\r\n);\r\n\r\n\r\nconst Appbar = (props: AppbarParams) => {\r\n    const classes = useStyles();\r\n    const {children} = props;\r\n    const {currentUser} = useContext(AuthContext)\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline/>\r\n            <AppBar\r\n                position=\"fixed\"\r\n            >\r\n                <Toolbar>\r\n                    <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                        GigaTurnip Admin\r\n                    </Typography>\r\n                    {currentUser ?\r\n                        <Button onClick={signOut} color={\"inherit\"}>\r\n                            Log out\r\n                        </Button>\r\n                        :\r\n                        <Button onClick={signInWithGoogle} color={\"inherit\"}>\r\n                            Login\r\n                        </Button>\r\n                    }\r\n                </Toolbar>\r\n            </AppBar>\r\n            <main className={classes.content}>\r\n                <div className={classes.toolbar}/>\r\n                {children}\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Appbar\r\n","import React, {useContext} from \"react\";\r\nimport Graph from './components/graph/Graph'\r\nimport StageBuilder from './components/form-builders/StageBuilder'\r\nimport LogicBuilder from './components/form-builders/LogicBuilder'\r\nimport Actions from './components/actions/Actions'\r\nimport Task from './components/task/Task'\r\nimport Appbar from \"./components/appbar/Appbar\";\r\n\r\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\r\nimport Chains from \"./components/chains/Chains\";\r\nimport Campaigns from \"./components/campaigns/Campaigns\";\r\nimport SimpleAppbar from \"./components/appbar/SimpleAppbar\";\r\nimport About from \"./components/campaigns/About\";\r\nimport {AuthContext} from \"./util/Auth\";\r\n\r\n\r\nconst App = () => {\r\n    const {currentUser} = useContext(AuthContext)\r\n    if (currentUser) {\r\n        const token = localStorage.getItem(\"token\");\r\n        currentUser.getIdToken(false).then((idToken: string) => {\r\n            if (token) {\r\n                if (idToken !== token) {\r\n                    localStorage.setItem(\"token\", idToken);\r\n                    window.location.reload()\r\n                }\r\n            } else {\r\n                localStorage.setItem(\"token\", idToken);\r\n                window.location.reload()\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        <div>\r\n            <Router>\r\n                <Switch>\r\n                    <Route path={\"/campaign/:campaignId\"}>\r\n                        <Appbar>\r\n                            <Route exact path=\"/campaign/:campaignId/chain/:chainId/createstage/:id\">\r\n                                <StageBuilder/>\r\n                            </Route>\r\n                            <Route exact path=\"/campaign/:campaignId/chain/:chainId/createlogic/:id\">\r\n                                <LogicBuilder/>\r\n                            </Route>\r\n                            {/*<Route exact path={\"/campaign/about/:id\"}>*/}\r\n                            {/*    <About />*/}\r\n                            {/*</Route>*/}\r\n                            <Route exact path=\"/campaign/:campaignId/chain/:chainId/task/:id\">\r\n                                <Task/>\r\n                            </Route>\r\n                            <Route exact path=\"/campaign/:campaignId/chain/:chainId/actions/:id\">\r\n                                <Actions/>\r\n                            </Route>\r\n                            <Route exact path=\"/campaign/:campaignId/chain\">\r\n                                <Chains/>\r\n                            </Route>\r\n                            <Route exact path=\"/campaign/:campaignId/chain/:chainId\">\r\n                                <Graph/>\r\n                            </Route>\r\n                        </Appbar>\r\n                    </Route>\r\n                    <Route path=\"/\">\r\n                        <SimpleAppbar>\r\n                            <Campaigns/>\r\n                        </SimpleAppbar>\r\n                    </Route>\r\n                </Switch>\r\n            </Router>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {AuthProvider} from \"./util/Auth\";\r\n\r\nReactDOM.render(\r\n    // <React.StrictMode>\r\n    <AuthProvider>\r\n        <App/>\r\n    </AuthProvider>,\r\n    // </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}